<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>冒險村12 - counter cache</title>
    <link href="/2021/09/27/adventurer12/"/>
    <url>/2021/09/27/adventurer12/</url>
    
    <content type="html"><![CDATA[<h1 id="12-counter-cache"><a href="#12-counter-cache" class="headerlink" title="12 - counter cache"></a>12 - counter cache</h1><p>在許多情況下，會需要統計一對多關聯的資料數量。舉例來說像是 User <code>has_many</code> Post。這時如果要統計該 user 擁有的 post 數量時，若直接使用 <code>User.posts.size</code> 則每次讀取頁面都會重新再統計一次，影響網站效能，而 ActiveRecord’s counter_cache 可以來幫助解決這個問題。</p><hr><h2 id="以-User-has-many-post-的例子來看："><a href="#以-User-has-many-post-的例子來看：" class="headerlink" title="以 User has_many post 的例子來看："></a>以 User has_many post 的例子來看：</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># app/controllers/users_controller.rb</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UsersController</span> &lt; ApplicationController</span><br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span></span><br>    <span class="hljs-variable">@users</span> = User.all<br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># app/views/users/index.html.erb</span><br>&lt;% <span class="hljs-variable">@users</span>.each <span class="hljs-keyword">do</span> <span class="hljs-params">|user|</span> %&gt;<br>  &lt;tr&gt;<br>    &lt;td&gt;&lt;%= user.name %&gt;&lt;<span class="hljs-regexp">/td&gt;</span><br><span class="hljs-regexp">    &lt;td&gt;&lt;%= user.email %&gt;&lt;/td</span>&gt;<br>    &lt;td&gt;&lt;%= user.tel %&gt;&lt;<span class="hljs-regexp">/td&gt;</span><br><span class="hljs-regexp">    &lt;td&gt;&lt;%= user.posts.size %&gt;&lt;/td</span>&gt;<br>    &lt;td&gt;&lt;%= link_to <span class="hljs-string">&#x27;Show&#x27;</span>, user %&gt;&lt;<span class="hljs-regexp">/td&gt;</span><br><span class="hljs-regexp">    &lt;td&gt;&lt;%= link_to &#x27;Edit&#x27;, edit_user_path(user) %&gt;&lt;/td</span>&gt;<br>  &lt;<span class="hljs-regexp">/tr&gt;</span><br><span class="hljs-regexp">&lt;% end %&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># app/models/user.rb</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> &lt; ApplicationRecord</span><br>  has_many <span class="hljs-symbol">:posts</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># app/models/post.rb</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Post</span> &lt; ApplicationRecord</span><br>  belongs_to <span class="hljs-symbol">:user</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>從 server console 中可以看到 N+1 問題，會重複的一直去撈資料庫。</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs zsh">SELECT <span class="hljs-string">&quot;users&quot;</span>.* FROM <span class="hljs-string">&quot;users&quot;</span><br>SELECT COUNT(*) FROM <span class="hljs-string">&quot;posts&quot;</span> WHERE <span class="hljs-string">&quot;posts&quot;</span>.<span class="hljs-string">&quot;user_id&quot;</span> = <span class="hljs-variable">$1</span>  [[<span class="hljs-string">&quot;user_id&quot;</span>, 1]]<br>SELECT COUNT(*) FROM <span class="hljs-string">&quot;posts&quot;</span> WHERE <span class="hljs-string">&quot;posts&quot;</span>.<span class="hljs-string">&quot;user_id&quot;</span> = <span class="hljs-variable">$1</span>  [[<span class="hljs-string">&quot;user_id&quot;</span>, 2]]<br>SELECT COUNT(*) FROM <span class="hljs-string">&quot;posts&quot;</span> WHERE <span class="hljs-string">&quot;posts&quot;</span>.<span class="hljs-string">&quot;user_id&quot;</span> = <span class="hljs-variable">$1</span>  [[<span class="hljs-string">&quot;user_id&quot;</span>, 3]]<br>SELECT COUNT(*) FROM <span class="hljs-string">&quot;posts&quot;</span> WHERE <span class="hljs-string">&quot;posts&quot;</span>.<span class="hljs-string">&quot;user_id&quot;</span> = <span class="hljs-variable">$1</span>  [[<span class="hljs-string">&quot;user_id&quot;</span>, 4]]<br>SELECT COUNT(*) FROM <span class="hljs-string">&quot;posts&quot;</span> WHERE <span class="hljs-string">&quot;posts&quot;</span>.<span class="hljs-string">&quot;user_id&quot;</span> = <span class="hljs-variable">$1</span>  [[<span class="hljs-string">&quot;user_id&quot;</span>, 5]]<br></code></pre></td></tr></table></figure><p>接下來就來新增欄位 field_count（慣例為 <code>xxx_count</code> 結尾） 來透過 <code>counter_cache</code> 來把存數字進資料庫，解決 SQL count 查詢造成的 N+1 問題，神奇的是 Post 數量有更新時，欄位也會自動增減。</p><h2 id="產生欄位"><a href="#產生欄位" class="headerlink" title="產生欄位"></a>產生欄位</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">rails g migration add_posts_count_to_user<br></code></pre></td></tr></table></figure><h2 id="migration"><a href="#migration" class="headerlink" title="migration"></a>migration</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AddPostsCountToUser</span> &lt; ActiveRecord::Migration[6.1]</span><br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">change</span></span><br>    add_column <span class="hljs-symbol">:users</span>, <span class="hljs-symbol">:posts_count</span>, <span class="hljs-symbol">:integer</span>, <span class="hljs-symbol">default:</span> <span class="hljs-number">0</span><br><br>    User.pluck(<span class="hljs-symbol">:id</span>).each <span class="hljs-keyword">do</span> <span class="hljs-params">|id|</span><br>      User.reset_counters(id, <span class="hljs-symbol">:posts</span>)<br>    <span class="hljs-keyword">end</span><br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><blockquote><p>註: <code>reset_counters</code> 為 <code>ActiveRecord::CounterCache</code> <a href="https://apidock.com/rails/ActiveRecord/CounterCache/reset_counters">method</a></p></blockquote><p>也可以將重新計算的 counter 的程式寫成 rake 來執行比放在 migration 內來的適合</p><h2 id="rake-task"><a href="#rake-task" class="headerlink" title="rake task"></a>rake task</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># lib/migrate/reset_user_posts_count.rb</span><br>namespace <span class="hljs-symbol">:migrate</span> <span class="hljs-keyword">do</span><br>  desc <span class="hljs-string">&#x27;Reset user posts_count counter cache&#x27;</span><br>  task <span class="hljs-symbol">reset_user_posts_count:</span> <span class="hljs-symbol">:environment</span> <span class="hljs-keyword">do</span><br>    User.pluck(<span class="hljs-symbol">:id</span>).each <span class="hljs-keyword">do</span> <span class="hljs-params">|id|</span><br>      User.reset_counters(id, <span class="hljs-symbol">:posts</span>)<br>    <span class="hljs-keyword">end</span><br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>並記得要跑 <code>bundle exec rails migrate:reset_user_posts_count</code>。</p><h2 id="model"><a href="#model" class="headerlink" title="model"></a>model</h2><p>再來在 Post model 修正加上 <code>counter_cache: true</code> 即可。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># app/models/post.rb</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Post</span> &lt; ApplicationRecord</span><br>  belongs_to <span class="hljs-symbol">:user</span>, <span class="hljs-symbol">counter_cache:</span> <span class="hljs-literal">true</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>這時候就會發現原本的 N+1 問題解決了～<code>user.posts.size</code> 這段就會被自動改成 <code>user.posts_count</code>，數量也都會自動更新！</p><h3 id="參考來源"><a href="#參考來源" class="headerlink" title="參考來源"></a>參考來源</h3><ul><li><a href="https://airsonwayne.gitbooks.io/rocodev-practice-series/content/chapter1-mvc/counter_cache.html">rocodev-practice-series</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>13th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>13th鐵人賽</tag>
      
      <tag>後端冒險村</tag>
      
      <tag>ruby on rails</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>冒險村11 - migration notes</title>
    <link href="/2021/09/26/adventurer11/"/>
    <url>/2021/09/26/adventurer11/</url>
    
    <content type="html"><![CDATA[<h1 id="11-migration-notes"><a href="#11-migration-notes" class="headerlink" title="11 - migration notes"></a>11 - migration notes</h1><h2 id="Database-GUI"><a href="#Database-GUI" class="headerlink" title="Database GUI"></a>Database GUI</h2><p>上個專案跟這個專案剛好 db 都是用 mysql，分享一下匯入資料的方法，還有一些 migration 問題的一些筆記，另外個人滿推以下兩種 database 的 GUI：</p><ul><li><a href="https://tableplus.com/">TablePlus</a></li><li><a href="https://www.sequelpro.com/">Sequal Pro</a></li></ul><p>兩者都滿好用的也其實都差不多，因為同事都用 Sequal Pro 還有個人剛好也偏好，所以後來主要都是用 Sequal Pro。</p><p>連結的方式也很容易，點選左下角的 <code>+</code> 號來新增 <code>new favorite</code> database 名稱，還有設定一些 config 來連結即可，最常用的大概就是把 staging/production 的 database 弄到 local 來重現問題。</p><p>點選 export 後選取需要的 table 並輸出 SQL file，詳細的其他需求就看當下需要的使用情況。</p><h2 id="import-sql-to-database-in-local"><a href="#import-sql-to-database-in-local" class="headerlink" title="import sql to database in local"></a>import sql to database in local</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">mysql -u root <span class="hljs-string">`database_name`</span> &lt; ~<span class="hljs-regexp">/Desktop/export</span>_database_name_with_date_time.sql<br></code></pre></td></tr></table></figure><p><code>database_name</code> 看要匯入的資料庫是哪一個？對應各個 database 後的 ENV 名稱，Rails 6 也支援 multiple database，詳細可以參考 <a href="active_record_multiple_databases">active_record_multiple_databases</a></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># config &gt; database.yml</span><br><br><span class="hljs-attr">default:</span> <span class="hljs-meta">&amp;default</span><br><span class="hljs-attr">writer:</span><br>  <span class="hljs-attr">adapter:</span>  <span class="hljs-string">mysql2</span><br>  <span class="hljs-attr">encoding:</span> <span class="hljs-string">utf8mb4</span><br>  <span class="hljs-attr">pool:</span>     <span class="hljs-number">20</span><br>  <span class="hljs-attr">host:</span>     &lt;%=<span class="ruby"> ENV[<span class="hljs-string">&#x27;DATABASE_WRITER_HOST&#x27;</span>] </span>%&gt;<br>  <span class="hljs-attr">database:</span> &lt;%=<span class="ruby"> ENV[<span class="hljs-string">&#x27;DATABASE_NAME&#x27;</span>] </span>%&gt;<br>  <span class="hljs-attr">username:</span> &lt;%=<span class="ruby"> ENV[<span class="hljs-string">&#x27;DATABASE_USER&#x27;</span>] </span>%&gt;<br>  <span class="hljs-attr">password:</span> &lt;%=<span class="ruby"> ENV[<span class="hljs-string">&#x27;DATABASE_PASS&#x27;</span>] </span>%&gt;<br>  <span class="hljs-attr">charset:</span>  <span class="hljs-string">utf8</span><br><span class="hljs-attr">reader:</span><br>  <span class="hljs-attr">adapter:</span>  <span class="hljs-string">mysql2</span><br>  <span class="hljs-attr">encoding:</span> <span class="hljs-string">utf8mb4</span><br>  <span class="hljs-attr">pool:</span>     <span class="hljs-number">20</span><br>  <span class="hljs-attr">host:</span>     &lt;%=<span class="ruby"> ENV[<span class="hljs-string">&#x27;DATABASE_READER_HOST&#x27;</span>] </span>%&gt;<br>  <span class="hljs-attr">database:</span> &lt;%=<span class="ruby"> ENV[<span class="hljs-string">&#x27;DATABASE_NAME&#x27;</span>] </span>%&gt;<br>  <span class="hljs-attr">username:</span> &lt;%=<span class="ruby"> ENV[<span class="hljs-string">&#x27;DATABASE_USER&#x27;</span>] </span>%&gt;<br>  <span class="hljs-attr">password:</span> &lt;%=<span class="ruby"> ENV[<span class="hljs-string">&#x27;DATABASE_PASS&#x27;</span>] </span>%&gt;<br>  <span class="hljs-attr">charset:</span>  <span class="hljs-string">utf8</span><br><span class="hljs-attr">anotherdb:</span><br>  <span class="hljs-attr">adapter:</span>  <span class="hljs-string">mysql2</span><br>  <span class="hljs-attr">encoding:</span> <span class="hljs-string">utf8</span><br>  <span class="hljs-attr">pool:</span>     <span class="hljs-number">20</span><br>  <span class="hljs-attr">host:</span>     &lt;%=<span class="ruby"> ENV[<span class="hljs-string">&#x27;ANOTHERDB_HOST&#x27;</span>] </span>%&gt;<br>  <span class="hljs-attr">database:</span> &lt;%=<span class="ruby"> ENV[<span class="hljs-string">&#x27;ANOTHERDB_NAME&#x27;</span>] </span>%&gt;<br>  <span class="hljs-attr">username:</span> &lt;%=<span class="ruby"> ENV[<span class="hljs-string">&#x27;ANOTHERDB_USER&#x27;</span>] </span>%&gt;<br>  <span class="hljs-attr">password:</span> &lt;%=<span class="ruby"> ENV[<span class="hljs-string">&#x27;ANOTHERDB_PASS&#x27;</span>] </span>%&gt;<br>  <span class="hljs-attr">migrations_paths:</span> <span class="hljs-string">&quot;db/anotherdb_migrate&quot;</span><br><span class="hljs-comment"># ...</span><br></code></pre></td></tr></table></figure><h2 id="Add-column-after-specific-field"><a href="#Add-column-after-specific-field" class="headerlink" title="Add column after specific field"></a>Add column after specific field</h2><p>時不時會有新的欄位需要新增的到舊有的 table 裡面，但預設 default 的都會在 <code>updated_at</code> 之後，不管是在 GUI 裡看或者是 console 裡面看都會滿不容易觀看的，且如果是與原本的欄位有關聯，會偏向擺在一起，因此我們可以在 migration 中帶 <code>after</code> option 來告知新增在哪個欄位之後，也因為會是先跑 first_name 再跑 last_name 欄位的新增，自然而然 last_name 要新增時可以排在 first_name 之後。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># 20210914230020_add_first_name_and_last_name_to_user.rb</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AddFirstNameAndLastNameToUser</span> &lt; ActiveRecord::Migration[6.1]</span><br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">change</span></span><br>    add_column <span class="hljs-symbol">:users</span>, <span class="hljs-symbol">:first_name</span>, <span class="hljs-symbol">:string</span>, <span class="hljs-symbol">after:</span> <span class="hljs-symbol">:id</span><br>    add_column <span class="hljs-symbol">:users</span>, <span class="hljs-symbol">:last_name</span>,  <span class="hljs-symbol">:string</span>, <span class="hljs-symbol">after:</span> <span class="hljs-symbol">:first_name</span><br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h2 id="Explicitly-specify-a-Model’s-table-name"><a href="#Explicitly-specify-a-Model’s-table-name" class="headerlink" title="Explicitly specify a Model’s table-name"></a>Explicitly specify a Model’s table-name</h2><p>在建立 table_name 的時候有時候剛好撞到 rails 的慣例，但又不想要取慣例的名字的時候，會需要想設定自己想要的 Table 名稱，像是名為 Index class，Rails 預設會是 indices，但可能對我們來說很不直覺，想要取叫做 indexes 比較合適</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># migration</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CreateIndexes</span> &lt; ActiveRecord::Migration[6.1]</span><br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">change</span></span><br>    create_table <span class="hljs-symbol">:indexes</span> <span class="hljs-keyword">do</span> <span class="hljs-params">|t|</span><br>      <span class="hljs-comment"># ...</span><br>      t.timestamps<br>    <span class="hljs-keyword">end</span><br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># app &gt; models &gt; index.rb</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Index</span> &lt; ApplicationRecord</span><br>  <span class="hljs-keyword">self</span>.table_name = <span class="hljs-string">&quot;indexes&quot;</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="參考來源"><a href="#參考來源" class="headerlink" title="參考來源"></a>參考來源</h3><ul><li><a href="active_record_multiple_databases">active_record_multiple_databases</a></li><li><a href="https://apidock.com/rails/ActiveRecord/ModelSchema/ClassMethods/table_name">table_name</a></li><li><a href="https://api.rubyonrails.org/classes/ActiveRecord/Migration.html">Active Record Migrations</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>13th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>13th鐵人賽</tag>
      
      <tag>後端冒險村</tag>
      
      <tag>ruby on rails</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>冒險村10 - or equals</title>
    <link href="/2021/09/25/adventurer10/"/>
    <url>/2021/09/25/adventurer10/</url>
    
    <content type="html"><![CDATA[<h1 id="10-or-equals"><a href="#10-or-equals" class="headerlink" title="10 - or equals"></a>10 - or equals</h1><p>Ruby 的 <code>||=</code>（or equals）運算符號使用頻率是個使用頻率滿高又方便的方法。在舉例實際會用到的情況之前，我們直接先講最後實際的意定義：如果變數已經被定義，則不會改變變數，如果沒有被定義，那就會賦值給變數。</p><blockquote><p>所以是什麼意思呢？舉例來說：</p></blockquote><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby">my_name <span class="hljs-params">||</span>= <span class="hljs-string">&quot;chester&quot;</span><br><span class="hljs-comment"># =&gt; &quot;chester&quot;</span><br>my_name <span class="hljs-params">||</span>= <span class="hljs-string">&quot;chester_2&quot;</span><br><span class="hljs-comment"># =&gt; &quot;chester&quot;</span><br></code></pre></td></tr></table></figure><p>由此可見驗證了上述的定義。但是，如果將變數等於 <code>falsey</code> 的值的情況時，則變數的值將會被更新</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby">my_name = <span class="hljs-literal">nil</span><br>my_name <span class="hljs-params">||</span>= <span class="hljs-string">&quot;chester_falsey&quot;</span><br><span class="hljs-comment"># =&gt; &quot;chester_falsey&quot;</span><br></code></pre></td></tr></table></figure><p>同樣的在 hash 裡面也可以利用相同的原理來理解</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ruby">hash = &#123;&#125;<br><span class="hljs-comment"># =&gt; &#123;&#125;</span><br>hash[<span class="hljs-symbol">:my_name</span>] <span class="hljs-params">||</span>= <span class="hljs-string">&quot;chester&quot;</span><br><span class="hljs-comment"># =&gt; &quot;chester&quot;</span><br>hash<br><span class="hljs-comment"># =&gt; &#123;:my_name=&gt;&quot;chester&quot;&#125;</span><br>hash[<span class="hljs-symbol">:my_name</span>] <span class="hljs-params">||</span>= <span class="hljs-string">&quot;chester_2&quot;</span><br><span class="hljs-comment"># =&gt; &quot;chester&quot;</span><br>hash<br><span class="hljs-comment"># =&gt; &#123;:my_name=&gt;&quot;chester&quot;&#125;</span><br></code></pre></td></tr></table></figure><h2 id="什麼時候使用呢？"><a href="#什麼時候使用呢？" class="headerlink" title="什麼時候使用呢？"></a>什麼時候使用呢？</h2><p>舉個簡單的例子來看，如果想要撈其中一種性別類型的 User 資訊時，在 each 迴圈內 call 到 <code>users</code> 時就會去到下方的 def 來撈資料，並且只會撈一次存起來，在接下來的迴圈中也不會重複的去撈，更能提升速度。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># <span class="hljs-doctag">@users</span> = UserPresenter.new(&quot;male&quot;)</span><br><span class="hljs-comment"># <span class="hljs-doctag">@users</span>.each ...(in view)</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserPresenter</span></span><br>  <span class="hljs-keyword">include</span> Enumerable<br><br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">initialize</span><span class="hljs-params">(gender)</span></span><br>    <span class="hljs-variable">@gender</span> = gender<br>  <span class="hljs-keyword">end</span><br><br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">each</span><span class="hljs-params">(&amp;_block)</span></span><br>    users.each <span class="hljs-keyword">do</span> <span class="hljs-params">|user|</span><br>      <span class="hljs-keyword">yield</span> format(user)<br>    <span class="hljs-keyword">end</span><br>  <span class="hljs-keyword">end</span><br><br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">format</span><span class="hljs-params">(user)</span></span><br>    &#123;<br>      <span class="hljs-symbol">name:</span>         user.name,<br>      <span class="hljs-symbol">email:</span>        user.email,<br>      <span class="hljs-symbol">backup_email:</span> user.backup_email,<br>      <span class="hljs-symbol">company_name:</span> user.company_name,<br>      <span class="hljs-symbol">phone_number:</span> user.phone_number,<br>      <span class="hljs-comment"># ...</span><br>    &#125;<br>  <span class="hljs-keyword">end</span><br><br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">users</span></span><br>    <span class="hljs-variable">@_users</span> <span class="hljs-params">||</span>= User.where(<span class="hljs-symbol">gender:</span> gender)<br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>不過小心如果撈的值每次都會不相同就不同使用這種方法來處理，不然跑第一次回圈 <code>變數已經被定義</code>，後面不管是什麼都 <code>不會改變變數</code>。</p>]]></content>
    
    
    <categories>
      
      <category>13th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>13th鐵人賽</tag>
      
      <tag>後端冒險村</tag>
      
      <tag>ruby on rails</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>冒險村09 - Time format config</title>
    <link href="/2021/09/24/adventurer09/"/>
    <url>/2021/09/24/adventurer09/</url>
    
    <content type="html"><![CDATA[<h1 id="09-Time-format"><a href="#09-Time-format" class="headerlink" title="09 - Time format"></a>09 - Time format</h1><p>在專案中時常會有用到顯示時間的地方，可能格式只有一種，但是會散落在各個檔案裡，又或者是有許多種的格式。</p><p>舉例來說，可能是某個前端 erb 檔案需要撈這筆資料被建立的時間 (create_at)，但是不想要 rails 預設給的 format 顯示給使用者。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">User.first.created_at.strftime(<span class="hljs-string">&quot;%F %H:%M&quot;</span>)<br></code></pre></td></tr></table></figure><p>或者是某個 helper 裡面有個判斷來變更顯示的格式。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># app/helpers/user_helper.rb</span><br><span class="hljs-class"><span class="hljs-keyword">module</span> <span class="hljs-title">UserHelper</span></span><br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">display_last_update_password_at</span><span class="hljs-params">(last_update_password_at)</span></span><br>    <span class="hljs-keyword">if</span> last_update_password_at.<span class="hljs-literal">nil</span>?<br>      I18n.t(<span class="hljs-string">&#x27;user.labels.no_last_changed&#x27;</span>)<br>    <span class="hljs-keyword">else</span><br>      <span class="hljs-string">&quot;<span class="hljs-subst">#&#123;I18n.t(<span class="hljs-string">&#x27;user.labels.last_changed_on&#x27;</span>)&#125;</span> <span class="hljs-subst">#&#123;resource.last_update_password_at.strftime(<span class="hljs-string">&#x27;%F %H:%M&#x27;</span>)&#125;</span>&quot;</span><br>    <span class="hljs-keyword">end</span><br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>不過這樣子的做法會導致 <code>strftime</code> 格式會散落在許多檔案裡，可能 a 檔案跟 b 檔案的邏輯不同，但要顯示的格式相同，也不能整理在一起，更不易閱讀。</p><blockquote><p>註: ruby 內建的 <a href="https://ruby-doc.org/core-2.3.4/Time.html#strftime-method">strftime</a> 格式顯示方式這邊就不詳細說明</p></blockquote><p>雖然 rails 有提供 to_s 方法來達到這個需求</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ruby">datetime = DateTime.civil(<span class="hljs-number">2007</span>, <span class="hljs-number">12</span>, <span class="hljs-number">4</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>)   <span class="hljs-comment"># =&gt; Tue, 04 Dec 2007 00:00:00 +0000</span><br><br>datetime.to_formatted_s(<span class="hljs-symbol">:db</span>)            <span class="hljs-comment"># =&gt; &quot;2007-12-04 00:00:00&quot;</span><br>datetime.to_s(<span class="hljs-symbol">:db</span>)                      <span class="hljs-comment"># =&gt; &quot;2007-12-04 00:00:00&quot;</span><br>datetime.to_s(<span class="hljs-symbol">:number</span>)                  <span class="hljs-comment"># =&gt; &quot;20071204000000&quot;</span><br>datetime.to_formatted_s(<span class="hljs-symbol">:short</span>)         <span class="hljs-comment"># =&gt; &quot;04 Dec 00:00&quot;</span><br>datetime.to_formatted_s(<span class="hljs-symbol">:long</span>)          <span class="hljs-comment"># =&gt; &quot;December 04, 2007 00:00&quot;</span><br>datetime.to_formatted_s(<span class="hljs-symbol">:long_ordinal</span>)  <span class="hljs-comment"># =&gt; &quot;December 4th, 2007 00:00&quot;</span><br>datetime.to_formatted_s(<span class="hljs-symbol">:rfc822</span>)        <span class="hljs-comment"># =&gt; &quot;Tue, 04 Dec 2007 00:00:00 +0000&quot;</span><br>datetime.to_formatted_s(<span class="hljs-symbol">:iso8601</span>)       <span class="hljs-comment"># =&gt; &quot;2007-12-04T00:00:00+00:00&quot;</span><br></code></pre></td></tr></table></figure><p>如果想要自己的格式來顯示的話，我們可以建立 <code>time_formats.rb</code> 來設定、整理所有有關時間的格式。</p><h2 id="Setting-config-gt-initializers-gt-time-formats-rb"><a href="#Setting-config-gt-initializers-gt-time-formats-rb" class="headerlink" title="Setting config &gt; initializers &gt; time_formats.rb"></a>Setting <code>config &gt; initializers &gt; time_formats.rb</code></h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># config/initializers/time_formats.rb</span><br><br>Time::DATE_FORMATS[<span class="hljs-symbol">:long_zh_tw</span>] = <span class="hljs-string">&quot;%Y年%m月%d日%H時%M分&quot;</span><br>Time::DATE_FORMATS[<span class="hljs-symbol">:long_no_separator</span>] = <span class="hljs-string">&quot;%Y%m%d%H%M%S&quot;</span><br>Time::DATE_FORMATS[<span class="hljs-symbol">:hm_on_today</span>] = <span class="hljs-string">&quot;%H:%M&quot;</span><br>Time::DATE_FORMATS[<span class="hljs-symbol">:md_on_today_zh_tw</span>] = <span class="hljs-string">&quot;%m月%d日&quot;</span><br></code></pre></td></tr></table></figure><p>這樣子在所有地方想要用到這種格式的顯示，就可以 to_s 後接自己的 custom_format 了！</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># before</span><br>User.first.created_at.strftime(<span class="hljs-string">&quot;%Y%m%d%H%M%S&quot;</span>)<br><br><span class="hljs-comment"># after</span><br>User.first.created_at.to_s(<span class="hljs-symbol">:long_no_separator</span>)<br></code></pre></td></tr></table></figure><blockquote><p>註: 新增 config 需要重啟 server 才會吃得到唷～</p></blockquote><h3 id="參考來源"><a href="#參考來源" class="headerlink" title="參考來源"></a>參考來源</h3><ul><li><a href="https://www.rubydoc.info/docs/rails/DateTime:to_s">Method: DateTime#to_s</a></li><li><a href="https://stackoverflow.com/questions/22255476/rails-formatting-date">Rails formatting date</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>13th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>13th鐵人賽</tag>
      
      <tag>後端冒險村</tag>
      
      <tag>ruby on rails</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>冒險村08 - Preitter output in rails console</title>
    <link href="/2021/09/23/adventurer08/"/>
    <url>/2021/09/23/adventurer08/</url>
    
    <content type="html"><![CDATA[<h1 id="08-Preitter-output-in-rails-console"><a href="#08-Preitter-output-in-rails-console" class="headerlink" title="08 - Preitter output in rails console"></a>08 - Preitter output in rails console</h1><p>Rails 的 default console 顯示看起來有點不好閱讀、不好看、也不美麗，在開發上對於資料的顯示相對於來說就是一路到底的感覺。當顯示的資料表中的欄位比較多時，對於開發來說又更不容易些，這篇將介紹一些優化 console UI 的兩個用過的 gems。</p><h2 id="defualt-console-UI"><a href="#defualt-console-UI" class="headerlink" title="defualt console UI"></a>defualt console UI</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># bundle exec rails console</span><br>User.all<br>User Load (<span class="hljs-number">0</span>.3ms)  SELECT <span class="hljs-string">&quot;users&quot;</span>.* FROM <span class="hljs-string">&quot;users&quot;</span> /* loading <span class="hljs-keyword">for</span> inspect *<span class="hljs-regexp">/ LIMIT $1  [[&quot;LIMIT&quot;, 11]]</span><br><span class="hljs-regexp">=&gt; #&lt;ActiveRecord::Relation [#&lt;User id: 1, name: &quot;chester&quot;, email: &quot;aaa@aa.com&quot;, tel: &quot;0123456789&quot;, created_at: &quot;2021-08-30 05:00:22.542415000 +0000&quot;, updated_at: &quot;2021-08-30 05:00:22.542415000 +0000&quot;&gt;, #&lt;User id: 2, name: &quot;chester_2&quot;, email: &quot;bbb@bb.com&quot;, tel: &quot;9876543210&quot;, created_at: &quot;2021-08-30 08:00:36.836992000 +0000&quot;, updated_at: &quot;2021-08-30 08:00:36.836992000 +0000&quot;&gt;, #&lt;User id: 3, name: &quot;chester_3&quot;, email: &quot;ccc@cc.com&quot;, tel: &quot;543219876540&quot;, created_at: &quot;2021-08-30 08:00:53.073957000 +0000&quot;, updated_at: &quot;2021-08-30 08:00:53.073957000 +0000&quot;&gt;]&gt;</span><br><span class="hljs-regexp"></span><br><span class="hljs-regexp">User.pluck(:name)</span><br><span class="hljs-regexp">=&gt; [&quot;chester&quot;, &quot;chester_2&quot;, &quot;chester_3&quot;]</span><br></code></pre></td></tr></table></figure><p>也可以透過 yaml 格式來讓 format 更好看些</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># bundle exec rails console</span><br>y User.first.attributes<br><span class="hljs-comment"># or</span><br>puts User.first.attributes.to_yaml<br><br>User Load (<span class="hljs-number">0</span>.3ms)  SELECT <span class="hljs-string">&quot;users&quot;</span>.* FROM <span class="hljs-string">&quot;users&quot;</span> ORDER BY <span class="hljs-string">&quot;users&quot;</span>.<span class="hljs-string">&quot;id&quot;</span> ASC LIMIT <span class="hljs-variable">$1</span>  [[<span class="hljs-string">&quot;LIMIT&quot;</span>, <span class="hljs-number">1</span>]]<br>---<br><span class="hljs-symbol">id:</span> <span class="hljs-number">1</span><br><span class="hljs-symbol">name:</span> chester<br><span class="hljs-symbol">email:</span> aaa<span class="hljs-variable">@aa</span>.com<br><span class="hljs-symbol">tel:</span> <span class="hljs-string">&#x27;0123456789&#x27;</span><br><span class="hljs-symbol">created_at:</span> !ruby/<span class="hljs-symbol">object:</span>ActiveSupport::TimeWithZone<br>  <span class="hljs-symbol">utc:</span> <span class="hljs-number">2021</span>-08-<span class="hljs-number">30</span> <span class="hljs-number">05</span><span class="hljs-symbol">:</span><span class="hljs-number">00</span><span class="hljs-symbol">:</span><span class="hljs-number">22.542415000</span> Z<br>  <span class="hljs-symbol">zone:</span> &amp;<span class="hljs-number">1</span> !ruby/<span class="hljs-symbol">object:</span>ActiveSupport::TimeZone<br>    <span class="hljs-symbol">name:</span> Etc/UTC<br>  <span class="hljs-symbol">time:</span> <span class="hljs-number">2021</span>-08-<span class="hljs-number">30</span> <span class="hljs-number">05</span><span class="hljs-symbol">:</span><span class="hljs-number">00</span><span class="hljs-symbol">:</span><span class="hljs-number">22.542415000</span> Z<br><span class="hljs-symbol">updated_at:</span> !ruby/<span class="hljs-symbol">object:</span>ActiveSupport::TimeWithZone<br>  <span class="hljs-symbol">utc:</span> <span class="hljs-number">2021</span>-08-<span class="hljs-number">30</span> <span class="hljs-number">05</span><span class="hljs-symbol">:</span><span class="hljs-number">00</span><span class="hljs-symbol">:</span><span class="hljs-number">22.542415000</span> Z<br>  <span class="hljs-symbol">zone:</span> *<span class="hljs-number">1</span><br>  <span class="hljs-symbol">time:</span> <span class="hljs-number">2021</span>-08-<span class="hljs-number">30</span> <span class="hljs-number">05</span><span class="hljs-symbol">:</span><span class="hljs-number">00</span><span class="hljs-symbol">:</span><span class="hljs-number">22.542415000</span> Z<br>=&gt; nil<br></code></pre></td></tr></table></figure><blockquote><p>註: 各人覺得相較來看安裝底下兩個 gems 還是比較好看，使用經驗覺得都滿好用的，看團隊決定要安裝哪個都好～</p></blockquote><hr><h1 id="pry-rails"><a href="#pry-rails" class="headerlink" title="pry-rails"></a>pry-rails</h1><h2 id="gem-install"><a href="#gem-install" class="headerlink" title="gem install"></a>gem install</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Gemfile</span><br>group <span class="hljs-symbol">:development</span>, <span class="hljs-symbol">:test</span> <span class="hljs-keyword">do</span><br>  gem <span class="hljs-string">&quot;pry-rails&quot;</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h2 id="pry-rails-console-UI"><a href="#pry-rails-console-UI" class="headerlink" title="pry-rails console UI"></a>pry-rails console UI</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs ruby"> <span class="hljs-comment"># bundle exec rails console</span><br> User Load (<span class="hljs-number">0</span>.4ms)  SELECT <span class="hljs-string">&quot;users&quot;</span>.* FROM <span class="hljs-string">&quot;users&quot;</span><br> =&gt; [#&lt;User:0x00007fb5a1bf1770<br>   id: 1,<br>   name: &quot;chester&quot;,<br>   email: &quot;aaa@aa.com&quot;,<br>   tel: &quot;0123456789&quot;,<br>   created_at: Mon, 30 Aug 2021 05:00:22.542415000 UTC +00:00,<br>   updated_at: Mon, 30 Aug 2021 05:00:22.542415000 UTC +00:00&gt;,<br> #&lt;User:0x00007fb5611bb188<br>   id: 2,<br>   name: &quot;chester_2&quot;,<br>   email: &quot;bbb@bb.com&quot;,<br>   tel: &quot;9876543210&quot;,<br>   created_at: Mon, 30 Aug 2021 08:00:36.836992000 UTC +00:00,<br>   updated_at: Mon, 30 Aug 2021 08:00:36.836992000 UTC +00:00&gt;,<br> #&lt;User:0x00007fb5611ba850<br>   id: 3,<br>   name: &quot;chester_3&quot;,<br>   email: &quot;ccc@cc.com&quot;,<br>   tel: &quot;543219876540&quot;,<br>   created_at: Mon, 30 Aug 2021 08:00:53.073957000 UTC +00:00,<br>   updated_at: Mon, 30 Aug 2021 08:00:53.073957000 UTC +00:00&gt;]<br> <br> User.pluck(<span class="hljs-symbol">:name</span>)<br> =&gt; [<span class="hljs-string">&quot;chester&quot;</span>,<br><span class="hljs-string">&quot;chester_2&quot;</span>,<br><span class="hljs-string">&quot;chester_3&quot;</span>]<br></code></pre></td></tr></table></figure><h1 id="awesome-print"><a href="#awesome-print" class="headerlink" title="awesome_print"></a>awesome_print</h1><h2 id="gem-install-1"><a href="#gem-install-1" class="headerlink" title="gem install"></a>gem install</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Gemfile</span><br>group <span class="hljs-symbol">:development</span>, <span class="hljs-symbol">:test</span> <span class="hljs-keyword">do</span><br>  gem <span class="hljs-string">&quot;awesome_print&quot;</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h2 id="Setting-irbrc"><a href="#Setting-irbrc" class="headerlink" title="Setting ~/.irbrc"></a>Setting <code>~/.irbrc</code></h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># ~/.irbrc</span><br><br><span class="hljs-comment"># require</span><br><span class="hljs-keyword">require</span> <span class="hljs-string">&quot;awesome_print&quot;</span><br><span class="hljs-comment"># set format in rails console</span><br>AwesomePrint.irb!<br><br><span class="hljs-comment"># put hacky convenience methods here</span><br></code></pre></td></tr></table></figure><hr><h2 id="awesome-print-console-UI"><a href="#awesome-print-console-UI" class="headerlink" title="awesome_print console UI"></a>awesome_print console UI</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># bundle exec rails console</span><br>User.all<br>User Load (<span class="hljs-number">0</span>.4ms)  SELECT <span class="hljs-string">&quot;users&quot;</span>.* FROM <span class="hljs-string">&quot;users&quot;</span><br>[<br>  [<span class="hljs-number">0</span>] #&lt;User:0x00007fd4c407c5b0&gt; &#123;<br>              <span class="hljs-symbol">:id</span> =&gt; <span class="hljs-number">1</span>,<br>            <span class="hljs-symbol">:name</span> =&gt; <span class="hljs-string">&quot;chester&quot;</span>,<br>           <span class="hljs-symbol">:email</span> =&gt; <span class="hljs-string">&quot;aaa@aa.com&quot;</span>,<br>             <span class="hljs-symbol">:tel</span> =&gt; <span class="hljs-string">&quot;0123456789&quot;</span>,<br>      <span class="hljs-symbol">:created_at</span> =&gt; Mon, <span class="hljs-number">30</span> Aug <span class="hljs-number">2021</span> <span class="hljs-number">05</span><span class="hljs-symbol">:</span><span class="hljs-number">00</span><span class="hljs-symbol">:</span><span class="hljs-number">22.542415000</span> UTC +<span class="hljs-number">00</span><span class="hljs-symbol">:</span><span class="hljs-number">00</span>,<br>      <span class="hljs-symbol">:updated_at</span> =&gt; Mon, <span class="hljs-number">30</span> Aug <span class="hljs-number">2021</span> <span class="hljs-number">05</span><span class="hljs-symbol">:</span><span class="hljs-number">00</span><span class="hljs-symbol">:</span><span class="hljs-number">22.542415000</span> UTC +<span class="hljs-number">00</span><span class="hljs-symbol">:</span><span class="hljs-number">00</span><br>  &#125;,<br>  [<span class="hljs-number">1</span>] #&lt;User:0x00007fd4c407c4e8&gt; &#123;<br>              <span class="hljs-symbol">:id</span> =&gt; <span class="hljs-number">2</span>,<br>            <span class="hljs-symbol">:name</span> =&gt; <span class="hljs-string">&quot;chester_2&quot;</span>,<br>           <span class="hljs-symbol">:email</span> =&gt; <span class="hljs-string">&quot;bbb@bb.com&quot;</span>,<br>             <span class="hljs-symbol">:tel</span> =&gt; <span class="hljs-string">&quot;9876543210&quot;</span>,<br>      <span class="hljs-symbol">:created_at</span> =&gt; Mon, <span class="hljs-number">30</span> Aug <span class="hljs-number">2021</span> 08<span class="hljs-symbol">:</span><span class="hljs-number">00</span><span class="hljs-symbol">:</span><span class="hljs-number">36.836992000</span> UTC +<span class="hljs-number">00</span><span class="hljs-symbol">:</span><span class="hljs-number">00</span>,<br>      <span class="hljs-symbol">:updated_at</span> =&gt; Mon, <span class="hljs-number">30</span> Aug <span class="hljs-number">2021</span> 08<span class="hljs-symbol">:</span><span class="hljs-number">00</span><span class="hljs-symbol">:</span><span class="hljs-number">36.836992000</span> UTC +<span class="hljs-number">00</span><span class="hljs-symbol">:</span><span class="hljs-number">00</span><br>  &#125;,<br>  [<span class="hljs-number">2</span>] #&lt;User:0x00007fd4c407c420&gt; &#123;<br>              <span class="hljs-symbol">:id</span> =&gt; <span class="hljs-number">3</span>,<br>            <span class="hljs-symbol">:name</span> =&gt; <span class="hljs-string">&quot;chester_3&quot;</span>,<br>           <span class="hljs-symbol">:email</span> =&gt; <span class="hljs-string">&quot;ccc@cc.com&quot;</span>,<br>             <span class="hljs-symbol">:tel</span> =&gt; <span class="hljs-string">&quot;543219876540&quot;</span>,<br>      <span class="hljs-symbol">:created_at</span> =&gt; Mon, <span class="hljs-number">30</span> Aug <span class="hljs-number">2021</span> 08<span class="hljs-symbol">:</span><span class="hljs-number">00</span><span class="hljs-symbol">:</span><span class="hljs-number">53.073957000</span> UTC +<span class="hljs-number">00</span><span class="hljs-symbol">:</span><span class="hljs-number">00</span>,<br>      <span class="hljs-symbol">:updated_at</span> =&gt; Mon, <span class="hljs-number">30</span> Aug <span class="hljs-number">2021</span> 08<span class="hljs-symbol">:</span><span class="hljs-number">00</span><span class="hljs-symbol">:</span><span class="hljs-number">53.073957000</span> UTC +<span class="hljs-number">00</span><span class="hljs-symbol">:</span><span class="hljs-number">00</span><br>  &#125;<br>]<br><br>User.pluck(<span class="hljs-symbol">:name</span>)<br>[<br>  [<span class="hljs-number">0</span>] <span class="hljs-string">&quot;chester&quot;</span>,<br>  [<span class="hljs-number">1</span>] <span class="hljs-string">&quot;chester_2&quot;</span>,<br>  [<span class="hljs-number">2</span>] <span class="hljs-string">&quot;chester_3&quot;</span><br>]<br></code></pre></td></tr></table></figure><h2 id="延伸閱讀"><a href="#延伸閱讀" class="headerlink" title="延伸閱讀"></a>延伸閱讀</h2><p>滿推這篇 rails console 設定來做達到更好的效果，不過有時候又覺得太麻煩了啊～還是用單一一種來處理就好，提供參考。</p><blockquote><p><a href="https://www.bruceli.net/tw/2014/08/13/awesome-rails-console-customization-using-pry.html">https://www.bruceli.net/tw/2014/08/13/awesome-rails-console-customization-using-pry.html</a></p></blockquote><h3 id="參考來源"><a href="#參考來源" class="headerlink" title="參考來源"></a>參考來源</h3><ul><li><a href="https://github.com/rweng/pry-rails">pry-rails</a></li><li><a href="https://github.com/awesome-print/awesome_print">awesome_print</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>13th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>13th鐵人賽</tag>
      
      <tag>後端冒險村</tag>
      
      <tag>ruby on rails</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>冒險村07 - Update gems &amp; js</title>
    <link href="/2021/09/22/adventurer07/"/>
    <url>/2021/09/22/adventurer07/</url>
    
    <content type="html"><![CDATA[<h1 id="07-Update-gems-amp-js"><a href="#07-Update-gems-amp-js" class="headerlink" title="07 - Update gems &amp; js"></a>07 - Update gems &amp; js</h1><p>專案如果要長久，套件升級是一定是不可或缺的事，從上篇的 <a href="https://chestertang.tw/2021/09/21/adventurer06/">Auto-update dependencies</a> 中，我們可以透過 <code>dependabot</code> 幫我們偵測需要更新的套件，當然不依賴它也可以透過下指令知道目前需要更新的套件。</p><p>這篇就來介紹該如何升級吧！</p><h2 id="Update-installed-gems"><a href="#Update-installed-gems" class="headerlink" title="Update installed gems"></a>Update installed gems</h2><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs zsh"><span class="hljs-comment"># At the root directory of a Rails app</span><br>gem update &lt;gem_name&gt;<br></code></pre></td></tr></table></figure><blockquote><p>註: 如有指定版本的 gem 要更新，要記得先修改 <code>Gemfile</code></p></blockquote><p>不過我的習慣會先 <code>gem undate</code> 直接更新所有的 gem 來看哪些需要被更新，更改了哪幾個檔案，把需要更新的 gems 都先記錄下來，然後 checkout 掉，不過如果只是單純要更新其中一個的話，上述的指令就可以完成了！</p><p>再來會再把所有想要升級的 gem 一個一個來升級，原因是要測試這個 gem 的升級對於現在的專案是否會受到影響，如果一次 update 所有的 gems 結果壞掉的話，就無法知道是什麼升級導致專案炸裂的原因，尤其像是 <code>rails</code>、<code>puma</code> 大版號之類的升級～</p><h2 id="Update-npm"><a href="#Update-npm" class="headerlink" title="Update npm"></a>Update npm</h2><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs zsh"><span class="hljs-comment"># At the package.json directory</span><br>npm update &lt;pkg_name&gt;@latest<br></code></pre></td></tr></table></figure><p>npm 的升級也與 gem 的升級大同小異，唯一要記得的是，如果專案的 css 是需要手動 build 的話，升級完記得重新執行才會獲得依賴升級套件產生的 css file。</p><p>再來就是會在升級的過程遇到各種奇怪的雷，還有不能用的語法惹～這時候就會提醒我們測試的重要性！才不會因為套件的升級導致哪個功能直接炸裂也不曉得的狀況 orz</p>]]></content>
    
    
    <categories>
      
      <category>13th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>13th鐵人賽</tag>
      
      <tag>後端冒險村</tag>
      
      <tag>ruby on rails</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>冒險村06 - Auto-update dependencies</title>
    <link href="/2021/09/21/adventurer06/"/>
    <url>/2021/09/21/adventurer06/</url>
    
    <content type="html"><![CDATA[<h1 id="06-Auto-update-dependencies"><a href="#06-Auto-update-dependencies" class="headerlink" title="06 - Auto-update dependencies"></a>06 - Auto-update dependencies</h1><p>除了 <a href="https://chestertang.tw/2021/09/19/adventurer04/">Release Drafter</a> 及 <a href="https://chestertang.tw/2021/09/20/adventurer05/">Create PR with default template</a> 很常用到之外，gems 與 js 的更新也是專案中不可缺少的一塊，而 Github 也有 <code>Dependabot</code> 來自動化的掃目前需要更新的套件（不能完全仰賴，但如果掃出來的代表一定有新版本）</p><h2 id="Setting-github-gt-dependabot-yml"><a href="#Setting-github-gt-dependabot-yml" class="headerlink" title="Setting .github &gt; dependabot.yml"></a>Setting <code>.github &gt; dependabot.yml</code></h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">version:</span> <span class="hljs-number">2</span><br><span class="hljs-attr">updates:</span><br>  <span class="hljs-comment"># Configuration for npm</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">package-ecosystem:</span> <span class="hljs-string">&quot;npm&quot;</span><br>    <span class="hljs-attr">directory:</span> <span class="hljs-string">&quot;/&quot;</span><br>    <span class="hljs-attr">schedule:</span><br>      <span class="hljs-attr">interval:</span> <span class="hljs-string">&quot;daily&quot;</span><br>  <span class="hljs-comment"># Configuration for Bundler</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">package-ecosystem:</span> <span class="hljs-string">&quot;bundler&quot;</span><br>    <span class="hljs-attr">directory:</span> <span class="hljs-string">&quot;/&quot;</span><br>    <span class="hljs-attr">schedule:</span><br>      <span class="hljs-attr">interval:</span> <span class="hljs-string">&quot;daily&quot;</span><br></code></pre></td></tr></table></figure><p>稍微解釋一些比較常用到的設定：</p><ul><li><code>package-ecosystem</code> 表示使用的 package manager</li><li><code>directory</code> 應該滿好理解的，對應的 package manager 會在哪個位置，如果都是在專案下的話就是 <code>/</code> 了～</li><li><code>schedule.interval</code> 表示偵測的頻率是多久一次</li></ul><blockquote><p>註: 其餘比較的 config options 可以就請參考<a href="https://docs.github.com/en/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/configuration-options-for-dependency-updates">文件</a>惹！</p></blockquote><p>設定完成後，就可以在 <code>github_repo_link/network/updates</code> 下看到目前 dependabot 在多久前偵測各 package manager，像上述的範例則會偵測 npm 的 <code>package.json</code> &amp; bundler 的 <code>Gemfile</code>。</p><p>此外，也會發現 Repo 的 PR 裡會有 dependabot 開的 issue 告知什麼東西可以從哪個版本升級新的版本（如果有安裝前面的 CI 的話，這邊也都會幫忙跑過）</p><p>下一篇就來介紹如何升級 Ruby gem 以及 js 吧！</p><h3 id="參考來源"><a href="#參考來源" class="headerlink" title="參考來源"></a>參考來源</h3><ul><li><a href="https://docs.github.com/en/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/enabling-and-disabling-version-updates">Enabling and disabling version updates</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>13th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>13th鐵人賽</tag>
      
      <tag>後端冒險村</tag>
      
      <tag>ruby on rails</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>冒險村05 - Release Drafter</title>
    <link href="/2021/09/20/adventurer05/"/>
    <url>/2021/09/20/adventurer05/</url>
    
    <content type="html"><![CDATA[<h1 id="05-Release-Drafter"><a href="#05-Release-Drafter" class="headerlink" title="05 - Release Drafter"></a>05 - Release Drafter</h1><p>每當專案 merge &amp; deploy 完畢時，都會產生對應的 releases log 紀錄 tag、修改的內容與打包的程式碼，就像 <a href="https://chestertang.tw/2021/09/19/adventurer04/">Create PR with default template</a> 裡撰寫 Pull requests template 時相同，會有個 default 的 template 來幫我們產生文字敘述內容及產生日期的 tag。</p><p>除了能統一團隊對專案 releases log 撰寫模式外，也能省下撰寫的時間，</p><p>在 <code>.github</code> folder（與 app 資料夾同層）下再建立 <code>workflows</code> folder，並在該資料夾下建立 <code>draft.yml</code> file 撰寫內容。</p><h2 id="Setting-workflows-gt-draft-yml"><a href="#Setting-workflows-gt-draft-yml" class="headerlink" title="Setting workflows &gt; draft.yml"></a>Setting <code>workflows &gt; draft.yml</code></h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">name:</span> <span class="hljs-string">Draft</span> <span class="hljs-string">Release</span><br><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">main</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">update_release_draft:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">release-drafter/release-drafter@v5</span><br>        <span class="hljs-attr">env:</span><br>          <span class="hljs-attr">GITHUB_TOKEN:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GITHUB_TOKEN</span> <span class="hljs-string">&#125;&#125;</span><br></code></pre></td></tr></table></figure><p>這邊在建立當哪個 branch 有新的 commit 時，會觸發 github job 來產生 release-drafter action（以前的 repo branch 可能是 master，新的則為 main）</p><p>接下來在 <code>.github</code> folder 建立 release-drafter 的 template</p><h2 id="Setting-release-drafter-yml"><a href="#Setting-release-drafter-yml" class="headerlink" title="Setting release-drafter.yml"></a>Setting <code>release-drafter.yml</code></h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">name-template:</span> <span class="hljs-string">&#x27;$NEXT_MINOR_VERSION&#x27;</span><br><span class="hljs-attr">tag-template:</span> <span class="hljs-string">&#x27;v$NEXT_MINOR_VERSION&#x27;</span><br><span class="hljs-attr">categories:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">title:</span> <span class="hljs-string">&#x27;🚀 Features&#x27;</span><br>    <span class="hljs-attr">labels:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;feature&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;enhancement&#x27;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">title:</span> <span class="hljs-string">&#x27;🐛 Bug Fixes&#x27;</span><br>    <span class="hljs-attr">labels:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;fix&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;bugfix&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;bug&#x27;</span><br><span class="hljs-attr">change-template:</span> <span class="hljs-string">&#x27;- $TITLE @$AUTHOR (#$NUMBER)&#x27;</span><br><span class="hljs-attr">template:</span> <span class="hljs-string">|</span><br>  <span class="hljs-comment">## Changes</span><br>  <span class="hljs-string">$CHANGES</span><br></code></pre></td></tr></table></figure><blockquote><p>註: 以上 template 僅供參考，可以依照團隊決定最適合的方式來制訂 releases log 想要呈現的方式。</p></blockquote><h3 id="參考來源"><a href="#參考來源" class="headerlink" title="參考來源"></a>參考來源</h3><ul><li><a href="https://github.com/release-drafter/release-drafter">release-drafter</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>13th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>13th鐵人賽</tag>
      
      <tag>後端冒險村</tag>
      
      <tag>ruby on rails</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>冒險村04 - Create PR with default template</title>
    <link href="/2021/09/19/adventurer04/"/>
    <url>/2021/09/19/adventurer04/</url>
    
    <content type="html"><![CDATA[<h1 id="04-Create-PR-with-default-template"><a href="#04-Create-PR-with-default-template" class="headerlink" title="04 - Create PR with default template"></a>04 - Create PR with default template</h1><p>在 Github 多人開發協作時，不同的工程師發的 Pull Requests 描述也寫的不ㄧ樣，而寫的方式如果每個人都有自己的風格，對於 Reviewers 來說負擔其實也滿大，也有可能因為 PR 寫的不完整造成更多的溝通成本。</p><p>除了能統一團隊的撰寫模式外，也可以將每次都會寫到相同的文字設定成 template 來節省時間，像是這個 PR 解決了哪個 issue、測試的 link 在以下、release 之後要注意什麼？</p><p>先建立 <code>.github</code> folder（與 app 資料夾同層），並在該資料夾下建立 <code>pull_request_template.md</code> file 撰寫內容。</p><h2 id="Setting-pull-request-template-md"><a href="#Setting-pull-request-template-md" class="headerlink" title="Setting pull_request_template.md"></a>Setting <code>pull_request_template.md</code></h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-string">This</span> <span class="hljs-string">PR</span> <span class="hljs-string">resolved</span> <span class="hljs-string">issue</span> <span class="hljs-comment">#issue_code</span><br><br><span class="hljs-comment">### testing link</span><br><span class="hljs-string">&gt;</span> <span class="hljs-string">url</span><br><br><span class="hljs-comment">### screenshot</span><br><span class="hljs-string">&gt;</span> <span class="hljs-string">image</span><br><br><span class="hljs-comment">### Notes</span><br><br><span class="hljs-attr">Before submitting the PR make sure the following are checked:</span><br><br><span class="hljs-bullet">-</span> [ ] <span class="hljs-string">The</span> <span class="hljs-string">PR</span> <span class="hljs-string">relates</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">one</span> <span class="hljs-string">subject</span> <span class="hljs-string">with</span> <span class="hljs-string">a</span> <span class="hljs-string">clear</span> <span class="hljs-string">title</span> <span class="hljs-string">and</span> <span class="hljs-string">description</span> <span class="hljs-string">in</span> <span class="hljs-string">grammatically</span> <span class="hljs-string">correct,</span> <span class="hljs-string">complete</span> <span class="hljs-string">sentences.</span><br> <span class="hljs-string">Wrote</span> <span class="hljs-string">good</span> <span class="hljs-string">commit</span> <span class="hljs-string">messages.</span><br><span class="hljs-bullet">-</span> [ ] <span class="hljs-string">Commit</span> <span class="hljs-string">message</span> <span class="hljs-string">starts</span> <span class="hljs-string">with</span> [<span class="hljs-string">ithome13#issue-number</span>] <span class="hljs-string">(if</span> <span class="hljs-string">the</span> <span class="hljs-string">related</span> <span class="hljs-string">issue</span> <span class="hljs-string">exists).</span><br><span class="hljs-bullet">-</span> [ ] <span class="hljs-string">Feature</span> <span class="hljs-string">branch</span> <span class="hljs-string">is</span> <span class="hljs-string">up-to-date</span> <span class="hljs-string">with</span> <span class="hljs-string">master</span> <span class="hljs-string">(if</span> <span class="hljs-string">not</span> <span class="hljs-bullet">-</span> <span class="hljs-string">rebase</span> <span class="hljs-string">it).</span><br><span class="hljs-bullet">-</span> [ ] <span class="hljs-string">Added</span> <span class="hljs-string">tests.</span><br><br><span class="hljs-string">--------------------------</span><br><br><span class="hljs-comment">### Before deploy</span><br><br><span class="hljs-bullet">-</span> [ ] <span class="hljs-string">todo</span><br><br><span class="hljs-comment">### After deploy</span><br><br><span class="hljs-bullet">-</span> [ ] <span class="hljs-string">todo</span><br><br><span class="hljs-string">--------------------------</span><br></code></pre></td></tr></table></figure><blockquote><p>註: 以上 PR template 僅供參考，可以依照團隊決定最適合的方式來制訂，方便 Reviewers 快速理解 issue 及為什麼這樣子撰寫為主，更能增加團隊協作的效率。</p></blockquote><p>merge 近 main branch 後，之後的 PR 都會有這個 file 的預設格式，也方便之後每個 PR 都能有一個公版，是不是既簡單又方便呀！</p><h3 id="參考來源"><a href="#參考來源" class="headerlink" title="參考來源"></a>參考來源</h3><ul><li><a href="https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/creating-a-pull-request-template-for-your-repository">Github Doc</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>13th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>13th鐵人賽</tag>
      
      <tag>後端冒險村</tag>
      
      <tag>ruby on rails</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>冒險村03 - Travis CI cookbook</title>
    <link href="/2021/09/18/adventurer03/"/>
    <url>/2021/09/18/adventurer03/</url>
    
    <content type="html"><![CDATA[<h1 id="03-Travis-CI-cookbook"><a href="#03-Travis-CI-cookbook" class="headerlink" title="03 - Travis CI cookbook"></a>03 - Travis CI cookbook</h1><p>既然都處理好 linter 來檢測我們的專案是否有符合規範，來把 Rails 放到 Travis CI 給它跑起來吧！</p><p>首先到 <a href="https://www.travis-ci.com/">Travis CI</a> 首頁，透過 Github 或者其他方式登入（注意如果進入的是首頁是 <a href="https://travis-ci.org/">https://travis-ci.org/</a> 可以點選上方黃色的 link 連到 <code>.com</code> 的網址，以前有分企業、免費版）</p><p>登入完成後，點選 <code>my account</code> &gt; <code>repositories</code> &gt; <code>activate</code> 並選擇要加入的 Repo 然後 「Approve and install」加入，這樣子 Repo 有更新 code 推上去 CI 就會 trigger 到。</p><blockquote><p>註: 如下述設定檔 <code>.travis.yml</code> 已經完成，還是沒有觸發 CI 的話，須先到 <a href="https://travis-ci.com/account/plan/usage">https://travis-ci.com/account/plan/usage</a> 設定 Plan usage，需要點選其中一種的 Plan 後，才會正常的執行。（第一次用應該都會碰到）</p></blockquote><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ruby">Plan information<br><br>FreePlan Activation <span class="hljs-symbol">date:</span> August <span class="hljs-number">17</span>, <span class="hljs-number">2021</span><br>Plan Add-ons <span class="hljs-symbol">list:</span><br>  - <span class="hljs-symbol">Private:</span> Free <span class="hljs-number">10</span> <span class="hljs-number">000</span> credits<br>  - User <span class="hljs-symbol">license:</span> Unlimited users<br></code></pre></td></tr></table></figure><h2 id="Setting-travis-yml"><a href="#Setting-travis-yml" class="headerlink" title="Setting .travis.yml"></a>Setting <code>.travis.yml</code></h2><p>建立設定檔案於專案根目錄下，告訴 travis ci 我們要使用的環境設定。</p><p>舉例來說：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># .travis.yml</span><br><span class="hljs-attr">language:</span> <span class="hljs-string">ruby</span><br><br><span class="hljs-comment"># 專案 ruby 版本</span><br><span class="hljs-attr">rvm:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-number">3.0</span><span class="hljs-number">.0</span><br><br><span class="hljs-comment"># 專案資料庫</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">postgresql</span><br><br><span class="hljs-attr">install:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">bundle</span> <span class="hljs-string">install</span><br><br><span class="hljs-attr">script:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RAILS_ENV=test</span> <span class="hljs-string">bundle</span> <span class="hljs-string">exec</span> <span class="hljs-string">rake</span> <span class="hljs-string">db:migrate:reset</span><br>  <span class="hljs-comment"># Rspec + 前兩篇的 linter</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">bundle</span> <span class="hljs-string">exec</span> <span class="hljs-string">rspec</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">bundle</span> <span class="hljs-string">exec</span> <span class="hljs-string">rubocop</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">bundle</span> <span class="hljs-string">exec</span> <span class="hljs-string">rails_best_practices</span><br></code></pre></td></tr></table></figure><p>再推一次 code 上 Repo 就會在 dashboard 看到 Build 了！如果成功跑過會顯示綠色  #branch passed，有問題則會是紅色 #branch failed</p><blockquote><p>註: 有可能會發生 local 驗證正確，但在 CI 上跑沒過，這時候除了可以 <code>Restart build</code> 外(<del>有問題重開機的概念(誤)</del>)，也可以點選 <code>Debug build</code> 後給的 ssh link，再透過 local ssh 進去測試。</p></blockquote><h2 id="Setting-ENV"><a href="#Setting-ENV" class="headerlink" title="Setting ENV"></a>Setting ENV</h2><p>專案時常會用到 settings 的 ENV，像是 api 的 key 或其他的 token，可以想像在 local 的時候需要另外設定，而推上 CI 上如果測試中也會使用到，則需要到 <code>More options</code> &gt; <code>Settins</code> &gt; <code>Enviroment Variables</code> 中設定</p><h2 id="Setting-time-zone-config"><a href="#Setting-time-zone-config" class="headerlink" title="Setting time_zone config"></a>Setting time_zone config</h2><p>如專案有改變 Rails timezone</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># application.rb</span><br>config.time_zone = <span class="hljs-string">&quot;Tokyo&quot;</span><br></code></pre></td></tr></table></figure><p>並在測試項目中也有寫關於時間的測試於 CI 跑，也記得要將 CI 的 config 修改</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># .travis.yml</span><br><span class="hljs-attr">language:</span> <span class="hljs-string">ruby</span><br><br><span class="hljs-attr">rvm:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-number">3.0</span><span class="hljs-number">.0</span><br><br><span class="hljs-attr">services:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">postgresql</span><br><br><span class="hljs-attr">install:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">bundle</span> <span class="hljs-string">install</span><br><br><span class="hljs-attr">script:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">RAILS_ENV=test</span> <span class="hljs-string">bundle</span> <span class="hljs-string">exec</span> <span class="hljs-string">rake</span> <span class="hljs-string">db:migrate:reset</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">bundle</span> <span class="hljs-string">exec</span> <span class="hljs-string">rspec</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">bundle</span> <span class="hljs-string">exec</span> <span class="hljs-string">rubocop</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">bundle</span> <span class="hljs-string">exec</span> <span class="hljs-string">rails_best_practices</span><br><br><span class="hljs-attr">before_install:</span><br>  <span class="hljs-comment"># setting config</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">export</span> <span class="hljs-string">TZ=Asia/Tokyo</span><br>  <span class="hljs-comment"># to check that is correct you can output the date</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">date</span><br></code></pre></td></tr></table></figure><h3 id="參考來源"><a href="#參考來源" class="headerlink" title="參考來源"></a>參考來源</h3><ul><li><a href="https://docs.travis-ci.com/user/languages/ruby/">Travis CI doc</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>13th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>13th鐵人賽</tag>
      
      <tag>後端冒險村</tag>
      
      <tag>ruby on rails</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>冒險村02 - Begin from linter(2)</title>
    <link href="/2021/09/17/adventurer02/"/>
    <url>/2021/09/17/adventurer02/</url>
    
    <content type="html"><![CDATA[<h1 id="02-Begin-from-linter-rubocop"><a href="#02-Begin-from-linter-rubocop" class="headerlink" title="02 - Begin from linter : rubocop"></a>02 - Begin from linter : rubocop</h1><p>延續上篇的 <a href="https://chestertang.tw/2021/09/17/adventurer01/">rails_best_practices</a> 後，這篇來介紹 linter <a href="https://github.com/rubocop/rubocop">Rubocop</a> 。</p><p>Rubocop 是一個可以統一規定、自訂規則及忽略規則，達到完全的客製化的 linter，把團隊的開發 coding style 都遵循在這個基石上繼續建立，可以提升專案開發效率。</p><p>如果專案沒有一個基本的規範，在工程師的協作中，想必一定常常遇到該寫單引號還是雙引號（戰）？註解該寫中文還是英文、TODO 該怎麼註釋？括號怎麼斷行、def 的寫法、程式行數限制是否該重構寫法？該如何斷行？等等的情況。</p><p>廢話不多說，直接來看要怎麼使用這個強大的 linter 吧！</p><blockquote><p>註：除了使用 <a href="https://docs.rubocop.org/rubocop/1.18/index.html">rubocop 官方</a> 的規範外，也可以參考 <a href="https://github.com/github/rubocop-github">Github</a>、<a href="https://ruby-style-guide.shopify.dev/">Shopify</a> 等各家的 Ruby Style Guide 來使用，這部分就要看團隊討論決定。</p></blockquote><h2 id="gem-install"><a href="#gem-install" class="headerlink" title="gem install"></a>gem install</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Gemfile</span><br>group <span class="hljs-symbol">:development</span>, <span class="hljs-symbol">:test</span> <span class="hljs-keyword">do</span><br>  gem <span class="hljs-string">&quot;rubocop&quot;</span>, <span class="hljs-symbol">require:</span> <span class="hljs-literal">false</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs zsh"><span class="hljs-comment"># At the root directory of a Rails app</span><br>bundle <span class="hljs-built_in">exec</span> rubocop<br><br><span class="hljs-comment"># for specific filename</span><br>bundle <span class="hljs-built_in">exec</span> rubocop app/models/users.rb<br></code></pre></td></tr></table></figure><h2 id="Code-style-checker"><a href="#Code-style-checker" class="headerlink" title="Code style checker"></a>Code style checker</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># app/models/users.rb</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> &lt; ApplicationRecord</span><br>  has_many <span class="hljs-symbol">:posts</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>透過 rubocop 執行檢查一下檔案是否符合規範！</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ruby">Inspecting <span class="hljs-number">1</span> file<br>C<br><br><span class="hljs-symbol">Offenses:</span><br><br>app/models/user.<span class="hljs-symbol">rb:</span><span class="hljs-number">1</span><span class="hljs-symbol">:</span><span class="hljs-number">1</span>: <span class="hljs-symbol">C:</span> [Correctable] Style/<span class="hljs-symbol">FrozenStringLiteralComment:</span> Missing frozen string literal comment.<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> &lt; ApplicationRecord</span><br>^<br><br><span class="hljs-number">1</span> file inspected, <span class="hljs-number">1</span> offense detected, <span class="hljs-number">1</span> offense auto-correctable<br><br><span class="hljs-symbol">Tip:</span> Based on detected gems, the following RuboCop extension libraries might be <span class="hljs-symbol">helpful:</span><br>  * rubocop-rails (<span class="hljs-symbol">https:</span>/<span class="hljs-regexp">/github.com/rubocop</span><span class="hljs-regexp">/rubocop-rails)</span><br><span class="hljs-regexp"></span><br><span class="hljs-regexp">You can opt out of this message by adding the following to your config (see https:/</span><span class="hljs-regexp">/docs.rubocop.org/rubocop</span><span class="hljs-regexp">/extensions.html#extension-suggestions for more options):</span><br><span class="hljs-regexp">  AllCops:</span><br><span class="hljs-regexp">    SuggestExtensions: false</span><br></code></pre></td></tr></table></figure><p>從錯誤的訊息中可以看到不符合規定的程式碼，不只告訴偵測檔案的數量、哪ㄧ行、錯誤的原因，以及修改的建議。</p><h2 id="Modify-with-suggest"><a href="#Modify-with-suggest" class="headerlink" title="Modify with suggest"></a>Modify with suggest</h2><blockquote><p><a href="https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/FrozenStringLiteralComment">Class: RuboCop::Cop::Style::FrozenStringLiteralComment</a></p></blockquote><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># frozen_string_literal: true</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> &lt; ApplicationRecord</span><br>  has_many <span class="hljs-symbol">:posts</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># bundle exec rubocop app/models/user.rb</span><br><span class="hljs-comment"># 1 file inspected, no offenses detected</span><br></code></pre></td></tr></table></figure><h2 id="Generate-config"><a href="#Generate-config" class="headerlink" title="Generate config"></a>Generate config</h2><p>產生規則以及需要待修改的檔案</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs zsh">bundle <span class="hljs-built_in">exec</span> rubocop --auto-gen-config<br></code></pre></td></tr></table></figure><h2 id="Setting-Rule"><a href="#Setting-Rule" class="headerlink" title="Setting Rule"></a>Setting Rule</h2><p>前面提到的單引號、雙引號的使用，也是滿常需要規範的部分，不然有時候找 string 搜尋真的挺不方便，default 開啟預設為 <code>single_quotes</code></p><p>但也可以直接選擇不開啟，不管三七二十一隨便都用</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># .rubocop.yml</span><br><br><span class="hljs-comment">#################### Style ####################</span><br>Style/<span class="hljs-symbol">StringLiterals:</span><br>  <span class="hljs-symbol">Enabled:</span> <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><p>改為 <code>doueble_quotes</code> 的規範</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># .rubocop.yml</span><br><br><span class="hljs-comment">#################### Style ####################</span><br>Style/<span class="hljs-symbol">StringLiterals:</span><br>  <span class="hljs-symbol">Enabled:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-symbol">EnforcedStyle:</span> double_quotes<br></code></pre></td></tr></table></figure><h2 id="Exclude-file"><a href="#Exclude-file" class="headerlink" title="Exclude file"></a>Exclude file</h2><p>可以將特定的檔案，不受到 rubocop 的偵測，將檔案排除在這個規則下的限制</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># .rubocop.yml</span><br><br><span class="hljs-symbol">Metrics:</span><br>  <span class="hljs-symbol">Exclude:</span><br>    - <span class="hljs-string">&#x27;.git/**/*&#x27;</span><br>    - <span class="hljs-string">&#x27;db/*.rb&#x27;</span><br>    <span class="hljs-comment"># Exclude for specific file</span><br>    - <span class="hljs-string">&#x27;app/models/user.rb&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="Auto-fix"><a href="#Auto-fix" class="headerlink" title="Auto fix"></a>Auto fix</h2><p>如前面的例子，不想要排除原本的規則，但又想要自動產生 <code>frozen_string_literal</code> 在每個檔案前該怎麼做？（以前專案還不習慣的時候常常用，因為都忘記加，但後來每次新增的時候就習慣先去 copy 過來，後來也就很少用了）</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs zsh"><span class="hljs-comment"># At the root directory of a Rails app</span><br>bundle <span class="hljs-built_in">exec</span> rubocop --auto-correct --only Style/FrozenStringLiteralComment<br></code></pre></td></tr></table></figure><p><del>最後，如果有些 file 真的不想修或者是以前有些人都沒好好照規範，中間才把 cop 規範起來，然後有一堆要重新修改又懶得改的話，不妨就通通先放在 todo 等人來修正吧（誤</del></p><h2 id="Visual-Studio-Code-Extension"><a href="#Visual-Studio-Code-Extension" class="headerlink" title="Visual Studio Code Extension"></a>Visual Studio Code Extension</h2><p>可以透過 extension 先安裝 <code>ruby-rubocop</code> 外掛，在編輯檔案時就可以先知道哪行程式碼不符合規範（外掛會在編輯器程式碼中下方標示小蝌蚪），可以省去跑指令才會出現錯誤，不過都要等存檔後一陣子才會出現！</p><blockquote><p><a href="https://marketplace.visualstudio.com/items?itemName=misogi.ruby-rubocop">https://marketplace.visualstudio.com/items?itemName=misogi.ruby-rubocop</a></p></blockquote><h2 id="Require"><a href="#Require" class="headerlink" title="Require"></a>Require</h2><p>另外如果關於 code performance checks &amp; enforcing Rails best practices and coding conventions 也可以基於 rubocop 再加入 <code>rubocop-performance</code> &amp; <code>rubocop-rails</code>，詳細就不多贅述了！</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># .rubocop.yml</span><br><span class="hljs-symbol">require:</span><br>  - rubocop-performance<br>  - rubocop-rails<br></code></pre></td></tr></table></figure><h3 id="RubyGems"><a href="#RubyGems" class="headerlink" title="RubyGems"></a>RubyGems</h3><ul><li><a href="https://rubygems.org/gems/rubocop">rubocop</a></li><li><a href="https://rubygems.org/gems/rubocop-performance?locale=zh-TW">rubocop-performance</a></li><li><a href="https://rubygems.org/gems/rubocop-rails">rubocop-rails</a></li></ul><h3 id="參考來源"><a href="#參考來源" class="headerlink" title="參考來源"></a>參考來源</h3><ul><li><a href="https://5xruby.tw/posts/rubocop-intro">機器戰警 RuboCop</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>13th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>13th鐵人賽</tag>
      
      <tag>後端冒險村</tag>
      
      <tag>ruby on rails</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>冒險村01 - Begin from linter(1)</title>
    <link href="/2021/09/16/adventurer01/"/>
    <url>/2021/09/16/adventurer01/</url>
    
    <content type="html"><![CDATA[<h1 id="01-Begin-from-linter-rails-best-practices"><a href="#01-Begin-from-linter-rails-best-practices" class="headerlink" title="01 - Begin from linter : rails_best_practices"></a>01 - Begin from linter : rails_best_practices</h1><p>好的開始，是成功的一半。</p><p>不管是前端、後端，當一個團隊每個成員撰寫程式的風格不同，對於維護、開發都相對會困難些。如果有個統一的規定，會一定程度提高專案開發效率。這類型的 tools 在每個程式都有相對應的 linter 可以使用。</p><p>這次開頭第一篇就從名字很淺顯易懂的 <code>rails_best_practices</code> 開始吧！一看就知道這個 gem 在做什麼（雖然說 <a href="https://rails-bestpractices.com/">官方網站</a> 已經有點久沒更新 &amp; <a href="https://github.com/flyerhzm/rails_best_practices/commits/master">Github Commit</a> 沒什麼新的東西，但至少還是一個不錯使用的工具，也在上個專案使用了約一年多左右）</p><h2 id="gem-install"><a href="#gem-install" class="headerlink" title="gem install"></a>gem install</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Gemfile</span><br>gem <span class="hljs-string">&quot;rails_best_practices&quot;</span><br></code></pre></td></tr></table></figure><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs zsh"><span class="hljs-comment"># At the root directory of a Rails app</span><br>bundle <span class="hljs-built_in">exec</span> rails_best_practices<br><br><span class="hljs-comment"># for HTML output</span><br>bundle <span class="hljs-built_in">exec</span> rails_best_practices -f html<br></code></pre></td></tr></table></figure><hr><h3 id="以-User-has-many-post-的例子來看："><a href="#以-User-has-many-post-的例子來看：" class="headerlink" title="以 User has_many post 的例子來看："></a>以 User has_many post 的例子來看：</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Schema</span><br>create_table <span class="hljs-string">&quot;posts&quot;</span>, <span class="hljs-symbol">force:</span> <span class="hljs-symbol">:cascade</span> <span class="hljs-keyword">do</span> <span class="hljs-params">|t|</span><br>  t.string <span class="hljs-string">&quot;title&quot;</span><br>  t.text <span class="hljs-string">&quot;content&quot;</span><br>  t.boolean <span class="hljs-string">&quot;is_available&quot;</span><br>  t.integer <span class="hljs-string">&quot;user_id&quot;</span>, <span class="hljs-symbol">null:</span> <span class="hljs-literal">false</span><br>  t.datetime <span class="hljs-string">&quot;created_at&quot;</span>, <span class="hljs-symbol">precision:</span> <span class="hljs-number">6</span>, <span class="hljs-symbol">null:</span> <span class="hljs-literal">false</span><br>  t.datetime <span class="hljs-string">&quot;updated_at&quot;</span>, <span class="hljs-symbol">precision:</span> <span class="hljs-number">6</span>, <span class="hljs-symbol">null:</span> <span class="hljs-literal">false</span><br>  t.index [<span class="hljs-string">&quot;user_id&quot;</span>], <span class="hljs-symbol">name:</span> <span class="hljs-string">&quot;index_posts_on_user_id&quot;</span><br><span class="hljs-keyword">end</span><br><br>create_table <span class="hljs-string">&quot;users&quot;</span>, <span class="hljs-symbol">force:</span> <span class="hljs-symbol">:cascade</span> <span class="hljs-keyword">do</span> <span class="hljs-params">|t|</span><br>  t.string <span class="hljs-string">&quot;name&quot;</span><br>  t.string <span class="hljs-string">&quot;email&quot;</span><br>  t.string <span class="hljs-string">&quot;tel&quot;</span><br>  t.datetime <span class="hljs-string">&quot;created_at&quot;</span>, <span class="hljs-symbol">precision:</span> <span class="hljs-number">6</span>, <span class="hljs-symbol">null:</span> <span class="hljs-literal">false</span><br>  t.datetime <span class="hljs-string">&quot;updated_at&quot;</span>, <span class="hljs-symbol">precision:</span> <span class="hljs-number">6</span>, <span class="hljs-symbol">null:</span> <span class="hljs-literal">false</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># model</span><br><span class="hljs-comment"># user.rb</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> &lt; ApplicationRecord</span><br>  has_many <span class="hljs-symbol">:posts</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># post.rb</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Post</span> &lt; ApplicationRecord</span><br>  belongs_to <span class="hljs-symbol">:user</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>在 post index 頁面中，假如想顯示 Post 所有欄位 &amp; 來自於哪個 User Name，可能會這樣子寫：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># app/views/posts/index.html.erb</span><br>&lt;% <span class="hljs-variable">@posts</span>.each <span class="hljs-keyword">do</span> <span class="hljs-params">|post|</span> %&gt;<br>  &lt;tr&gt;<br>    &lt;td&gt;&lt;%= post.title %&gt;&lt;<span class="hljs-regexp">/td&gt;</span><br><span class="hljs-regexp">    &lt;td&gt;&lt;%= post.content %&gt;&lt;/td</span>&gt;<br>    &lt;td&gt;&lt;%= post.is_available %&gt;&lt;<span class="hljs-regexp">/td&gt;</span><br><span class="hljs-regexp">    # User Name</span><br><span class="hljs-regexp">    &lt;td&gt;&lt;%= post.user.name %&gt;&lt;/td</span>&gt;<br>  &lt;<span class="hljs-regexp">/tr&gt;</span><br><span class="hljs-regexp">&lt;% end %&gt;</span><br></code></pre></td></tr></table></figure><p>執行 <code>bundle exec rails_best_practices</code> 會發現出現 <a href="https://en.wikipedia.org/wiki/Law_of_Demeter"><code>law of demeter</code></a> 的錯誤訊息，原因其實就是出在 <code>post.user.name</code> 的部分</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs zsh">/blog/app/views/posts/index.html.erb:22 - law of demeter<br><br>Please go to https://rails-bestpractices.com to see more useful Rails Best Practices.<br><br>Found 1 warnings.<br></code></pre></td></tr></table></figure><p>可以寫個 <code>user_name</code> 方法來呼叫關聯 user 的 name，不過如果要顯示 user 更多的其他欄位（<code>e.g. email</code>），等於要一直寫更多的方法，這時候其實可以用 delegate 來做，相對於行數也比較短。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># model</span><br><span class="hljs-comment"># user.rb</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> &lt; ApplicationRecord</span><br>  has_many <span class="hljs-symbol">:posts</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># post.rb</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Post</span> &lt; ApplicationRecord</span><br>  belongs_to <span class="hljs-symbol">:user</span><br><br>  <span class="hljs-comment"># (1) </span><br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">user_name</span></span><br>    user.name<br>  <span class="hljs-keyword">end</span><br><br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">user_email</span></span><br>    user.email<br>  <span class="hljs-keyword">end</span><br><br>  <span class="hljs-comment"># (2)</span><br>  delegate <span class="hljs-symbol">:name</span>, <span class="hljs-symbol">:email</span>, <span class="hljs-symbol">to:</span> <span class="hljs-symbol">:user</span>, <span class="hljs-symbol">prefix:</span> <span class="hljs-literal">true</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># app/views/posts/index.html.erb</span><br>&lt;% <span class="hljs-variable">@posts</span>.each <span class="hljs-keyword">do</span> <span class="hljs-params">|post|</span> %&gt;<br>  &lt;tr&gt;<br>    &lt;td&gt;&lt;%= post.title %&gt;&lt;<span class="hljs-regexp">/td&gt;</span><br><span class="hljs-regexp">    &lt;td&gt;&lt;%= post.content %&gt;&lt;/td</span>&gt;<br>    &lt;td&gt;&lt;%= post.is_available %&gt;&lt;<span class="hljs-regexp">/td&gt;</span><br><span class="hljs-regexp">    # User Name &amp; Email</span><br><span class="hljs-regexp">    &lt;td&gt;&lt;%= post.user_name %&gt;&lt;/td</span>&gt;<br>    &lt;td&gt;&lt;%= post.user_email %&gt;&lt;<span class="hljs-regexp">/td&gt;</span><br><span class="hljs-regexp">  &lt;/tr</span>&gt;<br>&lt;% <span class="hljs-keyword">end</span> %&gt;<br></code></pre></td></tr></table></figure><p>透過 <a href="https://apidock.com/rails/Module/delegate">Delegate</a> 來把 attributes 給關聯的 model 來使用讓邏輯更容易理解，更改後再跑一次就 No warning found，沒問題啦！</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs zsh">Source Code: |=============================================================================================================================|<br><br>Please go to https://rails-bestpractices.com to see more useful Rails Best Practices.<br><br>No warning found. Cool!<br></code></pre></td></tr></table></figure><h3 id="RubyGems"><a href="#RubyGems" class="headerlink" title="RubyGems"></a>RubyGems</h3><ul><li><a href="https://rubygems.org/gems/rails_best_practices">rails_best_practices</a></li></ul><h3 id="參考來源"><a href="#參考來源" class="headerlink" title="參考來源"></a>參考來源</h3><ul><li><a href="https://rails-bestpractices.com/posts/2010/07/24/the-law-of-demeter/">the Law of Demeter</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>13th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>13th鐵人賽</tag>
      
      <tag>後端冒險村</tag>
      
      <tag>ruby on rails</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村30 - A Chain adding function</title>
    <link href="/2020/10/15/codewars30/"/>
    <url>/2020/10/15/codewars30/</url>
    
    <content type="html"><![CDATA[<h1 id="30-A-Chain-adding-function"><a href="#30-A-Chain-adding-function" class="headerlink" title="30 - A Chain adding function"></a>30 - A Chain adding function</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>We want to create a function that will add numbers together when called in succession.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">add(<span class="hljs-number">1</span>)(<span class="hljs-number">2</span>);<br><span class="hljs-comment">// returns 3</span><br></code></pre></td></tr></table></figure><p>We also want to be able to continue to add numbers to our chain.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">add(<span class="hljs-number">1</span>)(<span class="hljs-number">2</span>)(<span class="hljs-number">3</span>); <span class="hljs-comment">// 6</span><br>add(<span class="hljs-number">1</span>)(<span class="hljs-number">2</span>)(<span class="hljs-number">3</span>)(<span class="hljs-number">4</span>); <span class="hljs-comment">// 10</span><br>add(<span class="hljs-number">1</span>)(<span class="hljs-number">2</span>)(<span class="hljs-number">3</span>)(<span class="hljs-number">4</span>)(<span class="hljs-number">5</span>); <span class="hljs-comment">// 15</span><br></code></pre></td></tr></table></figure><p>and so on.</p><p>A single call should return the number passed in.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">add(<span class="hljs-number">1</span>); <span class="hljs-comment">// 1</span><br></code></pre></td></tr></table></figure><p>We should be able to store the returned values and reuse them.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> addTwo = add(<span class="hljs-number">2</span>);<br>addTwo; <span class="hljs-comment">// 2</span><br>addTwo + <span class="hljs-number">5</span>; <span class="hljs-comment">// 7</span><br>addTwo(<span class="hljs-number">3</span>); <span class="hljs-comment">// 5</span><br>addTwo(<span class="hljs-number">3</span>)(<span class="hljs-number">5</span>); <span class="hljs-comment">// 10</span><br></code></pre></td></tr></table></figure><p>We can assume any number being passed in will be valid whole number.</p><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">add</span><span class="hljs-params">(n)</span></span><br>  <span class="hljs-comment"># ...</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby">Test.expect(add(<span class="hljs-number">1</span>) == <span class="hljs-number">1</span>);<br>Test.expect(add(<span class="hljs-number">1</span>).(<span class="hljs-number">2</span>) == <span class="hljs-number">3</span>);<br>Test.expect(add(<span class="hljs-number">1</span>).(<span class="hljs-number">2</span>).(<span class="hljs-number">3</span>) == <span class="hljs-number">6</span>);<br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add</span>(<span class="hljs-params">n</span>)</span>&#123;<br>  <span class="hljs-comment">// Let the currying begin!</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Test.expect(add(<span class="hljs-number">1</span>) == <span class="hljs-number">1</span>);<br>Test.expect(add(<span class="hljs-number">1</span>)(<span class="hljs-number">2</span>) == <span class="hljs-number">3</span>);<br>Test.expect(add(<span class="hljs-number">1</span>)(<span class="hljs-number">2</span>)(<span class="hljs-number">3</span>) == <span class="hljs-number">6</span>);<br></code></pre></td></tr></table></figure><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p><img src="https://ithelp.ithome.com.tw/upload/images/20201015/20120826uwpX2JABrn.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20201015/20120826uwpX2JABrn.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/cVUPic1cbd4">Unsplash Martin Garrido</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://ruby-doc.org/core-1.8.6/Fixnum.html">Ruby - Fixnum</a></li></ul></li><li>JavaScript<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf">JS - MDN Object.prototype.valueOf()</a></li></ul></li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">add</span><span class="hljs-params">(n)</span></span><br>  n<br><span class="hljs-keyword">end</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Fixnum</span></span><br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">call</span><span class="hljs-params">(m)</span></span><br>    <span class="hljs-keyword">self</span> + m<br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 2</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">add</span><span class="hljs-params">(n)</span></span><br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">call</span><span class="hljs-params">(m)</span></span><br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">self</span> + m<br>  <span class="hljs-keyword">end</span><br>  <span class="hljs-keyword">return</span> n<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add</span>(<span class="hljs-params">n</span>)</span>&#123;<br>  <span class="hljs-keyword">var</span> fn = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> add(n + x);<br>  &#125;;<br>  <br>  fn.valueOf = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> n;<br>  &#125;;<br>  <br>  <span class="hljs-keyword">return</span> fn;<br>&#125;<br><br><span class="hljs-comment">// Solution2</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add</span>(<span class="hljs-params">n</span>) </span>&#123;<br>  <span class="hljs-keyword">const</span> f = <span class="hljs-function"><span class="hljs-params">x</span> =&gt;</span> add(n + x)<br>  f.valueOf = <span class="hljs-function">() =&gt;</span> n<br>  <span class="hljs-keyword">return</span> f;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村29 - Sum of Intervals</title>
    <link href="/2020/10/14/codewars29/"/>
    <url>/2020/10/14/codewars29/</url>
    
    <content type="html"><![CDATA[<h1 id="29-Sum-of-Intervals"><a href="#29-Sum-of-Intervals" class="headerlink" title="29 - Sum of Intervals"></a>29 - Sum of Intervals</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>Write a function called sumIntervals/sum_intervals() that accepts an array of intervals, and returns the sum of all the interval lengths. Overlapping intervals should only be counted once.</p><p>Intervals<br>Intervals are represented by a pair of integers in the form of an array. The first value of the interval will always be less than the second value. Interval example: [1, 5] is an interval from 1 to 5. The length of this interval is 4.</p><p>Overlapping Intervals<br>List containing overlapping intervals:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ruby">[<br>   [<span class="hljs-number">1</span>,<span class="hljs-number">4</span>],<br>   [<span class="hljs-number">7</span>, <span class="hljs-number">10</span>],<br>   [<span class="hljs-number">3</span>, <span class="hljs-number">5</span>]<br>]<br></code></pre></td></tr></table></figure><p>The sum of the lengths of these intervals is 7. Since [1, 4] and [3, 5] overlap, we can treat the interval as [1, 5], which has a length of 4.</p><p>Examples:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ruby">sumIntervals( [<br>   [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>],<br>   [<span class="hljs-number">6</span>, <span class="hljs-number">10</span>],<br>   [<span class="hljs-number">11</span>, <span class="hljs-number">15</span>]<br>] ); <span class="hljs-regexp">//</span> =&gt; <span class="hljs-number">9</span><br><br>sumIntervals( [<br>   [<span class="hljs-number">1</span>,<span class="hljs-number">4</span>],<br>   [<span class="hljs-number">7</span>, <span class="hljs-number">10</span>],<br>   [<span class="hljs-number">3</span>, <span class="hljs-number">5</span>]<br>] ); <span class="hljs-regexp">//</span> =&gt; <span class="hljs-number">7</span><br><br>sumIntervals( [<br>   [<span class="hljs-number">1</span>,<span class="hljs-number">5</span>],<br>   [<span class="hljs-number">10</span>, <span class="hljs-number">20</span>],<br>   [<span class="hljs-number">1</span>, <span class="hljs-number">6</span>],<br>   [<span class="hljs-number">16</span>, <span class="hljs-number">19</span>],<br>   [<span class="hljs-number">5</span>, <span class="hljs-number">11</span>]<br>] ); <span class="hljs-regexp">//</span> =&gt; <span class="hljs-number">19</span><br></code></pre></td></tr></table></figure><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">sum_of_intervals</span><span class="hljs-params">(intervals)</span></span><br>  <span class="hljs-comment">#return</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby">Test.assert_equals(sum_of_intervals([[<span class="hljs-number">1</span>, <span class="hljs-number">5</span>]]), <span class="hljs-number">4</span>)<br>Test.assert_equals(sum_of_intervals([[<span class="hljs-number">1</span>, <span class="hljs-number">5</span>], [<span class="hljs-number">6</span>, <span class="hljs-number">10</span>]]), <span class="hljs-number">8</span>)<br>Test.assert_equals(sum_of_intervals([[<span class="hljs-number">1</span>, <span class="hljs-number">5</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">5</span>]]), <span class="hljs-number">4</span>)<br>Test.assert_equals(sum_of_intervals([[<span class="hljs-number">1</span>, <span class="hljs-number">4</span>], [<span class="hljs-number">7</span>, <span class="hljs-number">10</span>], [<span class="hljs-number">3</span>, <span class="hljs-number">5</span>]]), <span class="hljs-number">7</span>)<br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sumIntervals</span>(<span class="hljs-params">intervals</span>)</span>&#123;<br>  <span class="hljs-comment">//TODO</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript">describe(<span class="hljs-string">&#x27;sumIntervals&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>  it(<span class="hljs-string">&#x27;should return the correct sum for non overlapping intervals&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">var</span> test1 = [[<span class="hljs-number">1</span>,<span class="hljs-number">5</span>]];<br>    <span class="hljs-keyword">var</span> test2 = [[<span class="hljs-number">1</span>,<span class="hljs-number">5</span>],[<span class="hljs-number">6</span>,<span class="hljs-number">10</span>]];<br>    Test.assertEquals(sumIntervals(test1), <span class="hljs-number">4</span>);<br>    Test.assertEquals(sumIntervals(test2), <span class="hljs-number">8</span>);<br>  &#125;);<br>  <br>  it(<span class="hljs-string">&#x27;should return the correct sum for overlapping intervals&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">var</span> test1 = [[<span class="hljs-number">1</span>,<span class="hljs-number">5</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">5</span>]];<br>    <span class="hljs-keyword">var</span> test2 = [[<span class="hljs-number">1</span>,<span class="hljs-number">4</span>],[<span class="hljs-number">7</span>, <span class="hljs-number">10</span>],[<span class="hljs-number">3</span>, <span class="hljs-number">5</span>]];<br>    Test.assertEquals(sumIntervals(test1), <span class="hljs-number">4</span>);<br>    Test.assertEquals(sumIntervals(test2), <span class="hljs-number">7</span>);<br>  &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><hr><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): 第一個直覺都先 <code>map</code> 來處理，但原來發現有 <code>flat_map</code> 可以更清楚來做<br>想法(2): 注意要為 <code>uniq</code> 才是對的</p><p><img src="https://ithelp.ithome.com.tw/upload/images/20201014/20120826VfGTyC0IFD.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20201014/20120826VfGTyC0IFD.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/oRi7ansa--g">Unsplash Vishal Shanto</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://apidock.com/ruby/Enumerable/flat_map">Ruby - apidock flat_map</a></li></ul></li><li>JavaScript<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach">JS - MDN Array.prototype.forEach()</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys">JS - MDN Object.keys()</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">sum_of_intervals</span><span class="hljs-params">(intervals)</span></span><br>  intervals.map&#123; <span class="hljs-params">|a|</span> (a[<span class="hljs-number">0</span>]...a[<span class="hljs-number">1</span>]).to_a &#125;.flatten.uniq.size<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 2</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">sum_of_intervals</span><span class="hljs-params">(intervals)</span></span><br>  intervals.flat_map &#123; <span class="hljs-params">|x, y|</span> [*x...y] &#125;.uniq.size<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sumIntervals</span>(<span class="hljs-params">intervals</span>)</span>&#123;<br>  <span class="hljs-keyword">var</span> numbers = &#123;&#125;;<br>  intervals.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x</span>) </span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = x[<span class="hljs-number">0</span>]; i &lt; x[<span class="hljs-number">1</span>]; i++) &#123;<br>      numbers[i] = i;<br>    &#125;<br>  &#125;);<br>  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Object</span>.keys(numbers).length;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村28 - Find the missing letter</title>
    <link href="/2020/10/13/codewars28/"/>
    <url>/2020/10/13/codewars28/</url>
    
    <content type="html"><![CDATA[<h1 id="28-Find-the-missing-letter"><a href="#28-Find-the-missing-letter" class="headerlink" title="28 - Find the missing letter"></a>28 - Find the missing letter</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>Write a method that takes an array of consecutive (increasing) letters as input and that returns the missing letter in the array.</p><p>You will always get an valid array. And it will be always exactly one letter be missing. The length of the array will always be at least 2.<br>The array will always contain letters in only one case.</p><p>Example:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ruby">[<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-string">&#x27;b&#x27;</span>,<span class="hljs-string">&#x27;c&#x27;</span>,<span class="hljs-string">&#x27;d&#x27;</span>,<span class="hljs-string">&#x27;f&#x27;</span>] -&gt; <span class="hljs-string">&#x27;e&#x27;</span> [<span class="hljs-string">&#x27;O&#x27;</span>,<span class="hljs-string">&#x27;Q&#x27;</span>,<span class="hljs-string">&#x27;R&#x27;</span>,<span class="hljs-string">&#x27;S&#x27;</span>] -&gt; <span class="hljs-string">&#x27;P&#x27;</span><br><br>[<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-string">&quot;b&quot;</span>,<span class="hljs-string">&quot;c&quot;</span>,<span class="hljs-string">&quot;d&quot;</span>,<span class="hljs-string">&quot;f&quot;</span>] -&gt; <span class="hljs-string">&quot;e&quot;</span><br>[<span class="hljs-string">&quot;O&quot;</span>,<span class="hljs-string">&quot;Q&quot;</span>,<span class="hljs-string">&quot;R&quot;</span>,<span class="hljs-string">&quot;S&quot;</span>] -&gt; <span class="hljs-string">&quot;P&quot;</span><br>(Use the English alphabet with <span class="hljs-number">26</span> letters!)<br></code></pre></td></tr></table></figure><p>Have fun coding it and please don’t forget to vote and rank this kata! :-)</p><p>I have also created other katas. Take a look if you enjoyed this kata!</p><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">find_missing_letter</span><span class="hljs-params">(arr)</span></span><br>  <span class="hljs-comment">#your code here</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ruby">Test.describe(<span class="hljs-string">&quot;Basic tests&quot;</span>) <span class="hljs-keyword">do</span><br>   Test.assert_equals(find_missing_letter([<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-string">&quot;b&quot;</span>,<span class="hljs-string">&quot;c&quot;</span>,<span class="hljs-string">&quot;d&quot;</span>,<span class="hljs-string">&quot;f&quot;</span>]), <span class="hljs-string">&quot;e&quot;</span>)<br>   Test.assert_equals(find_missing_letter([<span class="hljs-string">&quot;O&quot;</span>,<span class="hljs-string">&quot;Q&quot;</span>,<span class="hljs-string">&quot;R&quot;</span>,<span class="hljs-string">&quot;S&quot;</span>]), <span class="hljs-string">&quot;P&quot;</span>)<br>   Test.assert_equals(find_missing_letter([<span class="hljs-string">&quot;b&quot;</span>,<span class="hljs-string">&quot;d&quot;</span>]), <span class="hljs-string">&quot;c&quot;</span>)<br>   Test.assert_equals(find_missing_letter([<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-string">&quot;b&quot;</span>,<span class="hljs-string">&quot;d&quot;</span>]), <span class="hljs-string">&quot;c&quot;</span>)<br>   Test.assert_equals(find_missing_letter([<span class="hljs-string">&quot;b&quot;</span>,<span class="hljs-string">&quot;d&quot;</span>,<span class="hljs-string">&quot;e&quot;</span>]), <span class="hljs-string">&quot;c&quot;</span>)<br> <span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">findMissingLetter</span>(<span class="hljs-params">array</span>)</span>&#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27; &#x27;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript">describe(<span class="hljs-string">&quot;KataTests&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>  it(<span class="hljs-string">&quot;exampleTests&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>    Test.assertEquals(findMissingLetter([<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-string">&#x27;b&#x27;</span>,<span class="hljs-string">&#x27;c&#x27;</span>,<span class="hljs-string">&#x27;d&#x27;</span>,<span class="hljs-string">&#x27;f&#x27;</span>]), <span class="hljs-string">&#x27;e&#x27;</span>);<br>    Test.assertEquals(findMissingLetter([<span class="hljs-string">&#x27;O&#x27;</span>,<span class="hljs-string">&#x27;Q&#x27;</span>,<span class="hljs-string">&#x27;R&#x27;</span>,<span class="hljs-string">&#x27;S&#x27;</span>]), <span class="hljs-string">&#x27;P&#x27;</span>);<br>  &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><hr><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p><img src="https://ithelp.ithome.com.tw/upload/images/20201013/20120826HwX3ZSzM9n.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20201013/20120826HwX3ZSzM9n.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/xrVDYZRGdw4">Unsplash Emile Perron</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://apidock.com/rails/String/ord">Ruby - apidock ord</a></li><li><a href="https://apidock.com/ruby/Enumerator/next">Ruby - apidock next</a></li></ul></li><li>JavaScript<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt">JS - MDN String.prototype.charCodeAt()</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode">JS - MDN String.fromCharCode()</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">find_missing_letter</span><span class="hljs-params">(arr)</span></span><br>  (arr.length-<span class="hljs-number">1</span>).times&#123; <span class="hljs-params">|num|</span> <span class="hljs-keyword">return</span> (arr[num].ord + <span class="hljs-number">1</span>).chr <span class="hljs-keyword">if</span> arr[num].ord + <span class="hljs-number">1</span> != arr[num + <span class="hljs-number">1</span>].ord &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 2</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">find_missing_letter</span><span class="hljs-params">(arr)</span></span><br>  arr[<span class="hljs-number">0</span>...-<span class="hljs-number">1</span>].each_with_index&#123; <span class="hljs-params">|num, index|</span> <span class="hljs-keyword">return</span> num.<span class="hljs-keyword">next</span> <span class="hljs-keyword">if</span> num.<span class="hljs-keyword">next</span> != arr[index + <span class="hljs-number">1</span>] &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 3</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">find_missing_letter</span><span class="hljs-params">(arr)</span></span><br>  ((arr.first..arr.last).to_a - arr).first<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">findMissingLetter</span>(<span class="hljs-params">array</span>) </span>&#123;<br>  <span class="hljs-keyword">var</span> string = array.join(<span class="hljs-string">&#x27;&#x27;</span>);<br>  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; string.length; i++) &#123;<br>    <span class="hljs-keyword">if</span>(string.charCodeAt(i + <span class="hljs-number">1</span>) - string.charCodeAt(i) != <span class="hljs-number">1</span>)&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-built_in">String</span>.fromCharCode(string.charCodeAt(i) + <span class="hljs-number">1</span>);<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村27 - First non-repeating character</title>
    <link href="/2020/10/12/codewars27/"/>
    <url>/2020/10/12/codewars27/</url>
    
    <content type="html"><![CDATA[<h1 id="27-First-non-repeating-character"><a href="#27-First-non-repeating-character" class="headerlink" title="27 - First non-repeating character"></a>27 - First non-repeating character</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>Write a function named <code>first_non_repeating_letter</code> that takes a string input, and returns the first character that is not repeated anywhere in the string.</p><p>For example, if given the input <code>&#39;stress&#39;</code>, the function should return <code>&#39;t&#39;</code>, since the letter t only occurs once in the string, and occurs first in the string.</p><p>As an added challenge, upper- and lowercase letters are considered the same character, but the function should return the correct case for the initial letter. For example, the input <code>&#39;sTreSS&#39;</code> should return <code>&#39;T&#39;</code>.</p><p>If a string contains all repeating characters, it should return an empty string (<code>&quot;&quot;</code>) or <code>None</code> – see sample tests.</p><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">tongues</span><span class="hljs-params">(code)</span></span><br>  <span class="hljs-comment">#your code here</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ruby">Test.describe(<span class="hljs-string">&#x27;Simple Tests&#x27;</span>) <span class="hljs-keyword">do</span><br>   it(<span class="hljs-string">&#x27;should handle simple tests&#x27;</span>) <span class="hljs-keyword">do</span><br>     Test.assert_equals(first_non_repeating_letter(<span class="hljs-string">&#x27;a&#x27;</span>), <span class="hljs-string">&#x27;a&#x27;</span>)<br>     Test.assert_equals(first_non_repeating_letter(<span class="hljs-string">&#x27;stress&#x27;</span>), <span class="hljs-string">&#x27;t&#x27;</span>)<br>     Test.assert_equals(first_non_repeating_letter(<span class="hljs-string">&#x27;moonmen&#x27;</span>), <span class="hljs-string">&#x27;e&#x27;</span>)<br>   <span class="hljs-keyword">end</span><br>   it(<span class="hljs-string">&#x27;should handle empty strings&#x27;</span>) <span class="hljs-keyword">do</span><br>     Test.assert_equals(first_non_repeating_letter(<span class="hljs-string">&#x27;&#x27;</span>), <span class="hljs-string">&#x27;&#x27;</span>)<br>   <span class="hljs-keyword">end</span><br> <span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">firstNonRepeatingLetter</span>(<span class="hljs-params">s</span>) </span>&#123;<br>  <span class="hljs-comment">// Add your code here</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Test.describe(<span class="hljs-string">&#x27;Simple Tests&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>  it(<span class="hljs-string">&#x27;should handle simple tests&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>    Test.assertEquals(firstNonRepeatingLetter(<span class="hljs-string">&#x27;a&#x27;</span>), <span class="hljs-string">&#x27;a&#x27;</span>);<br>    Test.assertEquals(firstNonRepeatingLetter(<span class="hljs-string">&#x27;stress&#x27;</span>), <span class="hljs-string">&#x27;t&#x27;</span>);<br>    Test.assertEquals(firstNonRepeatingLetter(<span class="hljs-string">&#x27;moonmen&#x27;</span>), <span class="hljs-string">&#x27;e&#x27;</span>);<br>  &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><hr><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p><img src="https://ithelp.ithome.com.tw/upload/images/20201012/20120826YzLdi5jaAH.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20201012/20120826YzLdi5jaAH.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/OVbeSXRk_9E">Unsplash Nikita Kachanovsky</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://apidock.com/ruby/String/chars">Ruby - apidock chars</a></li></ul></li><li>JavaScript<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp">JS - MDN RegExp</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">first_non_repeating_letter</span><span class="hljs-params">(s)</span></span><br>  letter = s.chars.find&#123; <span class="hljs-params">|char|</span> s.chars.map(&amp;<span class="hljs-symbol">:downcase</span>).count(char.downcase) == <span class="hljs-number">1</span> &#125;<br>  letter.<span class="hljs-literal">nil</span>? ? <span class="hljs-string">&#x27;&#x27;</span> : letter<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 2</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">first_non_repeating_letter</span><span class="hljs-params">(s)</span></span><br>  s.chars.find&#123; <span class="hljs-params">|i|</span> s.downcase.count(i) == <span class="hljs-number">1</span> <span class="hljs-params">||</span> s.upcase.count(i) == <span class="hljs-number">1</span> &#125; <span class="hljs-params">||</span> <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">firstNonRepeatingLetter</span>(<span class="hljs-params">s</span>) </span>&#123;<br>  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i <span class="hljs-keyword">in</span> s) &#123;<br>    <span class="hljs-keyword">if</span>(s.match(<span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(s[i],<span class="hljs-string">&quot;gi&quot;</span>)).length === <span class="hljs-number">1</span>) &#123;<br>      <span class="hljs-keyword">return</span> s[i];<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村26 - Tongues</title>
    <link href="/2020/10/11/codewars26/"/>
    <url>/2020/10/11/codewars26/</url>
    
    <content type="html"><![CDATA[<h1 id="26-Tongues"><a href="#26-Tongues" class="headerlink" title="26 - Tongues"></a>26 - Tongues</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>Gandalf’s writings have long been available for study, but no one has yet figured out what language they are written in. Recently, due to programming work by a hacker known only by the code name ROT13, it has been discovered that Gandalf used nothing but a simple letter substitution scheme, and further, that it is its own inverse|the same operation scrambles the message as unscrambles it.</p><p>This operation is performed by replacing vowels in the sequence <code>&#39;a&#39; &#39;i&#39; &#39;y&#39; &#39;e&#39; &#39;o&#39; &#39;u&#39;</code> with the vowel three advanced, cyclicly, while preserving case (i.e., lower or upper).</p><p>Similarly, consonants are replaced from the sequence <code>&#39;b&#39; &#39;k&#39; &#39;x&#39; &#39;z&#39; &#39;n&#39; &#39;h&#39; &#39;d&#39; &#39;c&#39; &#39;w&#39; &#39;g&#39; &#39;p&#39; &#39;v&#39; &#39;j&#39; &#39;q&#39; &#39;t&#39; &#39;s&#39; &#39;r&#39; &#39;l&#39; &#39;m&#39; &#39;f&#39;</code> by advancing ten letters.</p><p>So for instance the phrase <code>&#39;One ring to rule them all.&#39;</code> translates to <code>&#39;Ita dotf ni dyca nsaw ecc.&#39;</code></p><p>The fascinating thing about this transformation is that the resulting language yields pronounceable words. For this problem, you will write code to translate Gandalf’s manuscripts into plain text.</p><p>Your job is to write a function that decodes Gandalf’s writings.</p><p>Input</p><p>The function will be passed a string for the function to decode. Each string will contain up to 100 characters, representing some text written by Gandalf. All characters will be plain ASCII, in the range space (32) to tilde (126).</p><p>Output</p><p>For each string passed to the decode function return its translation.</p><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">tongues</span><span class="hljs-params">(code)</span></span><br>  <span class="hljs-comment">#your code here</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ruby">Test.assert_equals(tongues(<span class="hljs-string">&#x27;Ita dotf ni dyca nsaw ecc.&#x27;</span>), <span class="hljs-string">&#x27;One ring to rule them all.&#x27;</span>)<br>Test.assert_equals(tongues(<span class="hljs-string">&#x27;Tim oh nsa nowa gid ecc fiir wat ni liwa ni nsa eor ig nsaod liytndu.&#x27;</span>), <span class="hljs-string">&#x27;Now is the time for all good men to come to the aid of their country.&#x27;</span>)<br>Test.assert_equals(tongues(<span class="hljs-string">&#x27;Giydhlida etr hakat uaedh efi iyd gidagensadh pdiyfsn ytni nsoh&#x27;</span>), <span class="hljs-string">&#x27;Fourscore and seven years ago our forefathers brought unto this&#x27;</span>)<br>Test.assert_equals(tongues(<span class="hljs-string">&#x27;litnotatn e tam tenoit.&#x27;</span>), <span class="hljs-string">&#x27;continent a new nation.&#x27;</span>)<br>Test.assert_equals(tongues(<span class="hljs-string">&#x27;Nsa zyolv pdimt gij xywbar ikad nsa cequ rifh.&#x27;</span>), <span class="hljs-string">&#x27;The quick brown fox jumped over the lazy dogs.&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">tongues</span>(<span class="hljs-params">code</span>) </span>&#123;<br><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript">describe(<span class="hljs-string">&quot;Tongues&quot;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>  it(<span class="hljs-string">&quot;Basic tests&quot;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    assert.strictEqual(tongues(<span class="hljs-string">&#x27;Ita dotf ni dyca nsaw ecc.&#x27;</span>), <span class="hljs-string">&#x27;One ring to rule them all.&#x27;</span>);<br>    assert.strictEqual(tongues(<span class="hljs-string">&#x27;Tim oh nsa nowa gid ecc fiir wat ni liwa ni nsa eor ig nsaod liytndu.&#x27;</span>), <span class="hljs-string">&#x27;Now is the time for all good men to come to the aid of their country.&#x27;</span>);<br>    assert.strictEqual(tongues(<span class="hljs-string">&#x27;Giydhlida etr hakat uaedh efi iyd gidagensadh pdiyfsn ytni nsoh&#x27;</span>), <span class="hljs-string">&#x27;Fourscore and seven years ago our forefathers brought unto this&#x27;</span>);<br>    assert.strictEqual(tongues(<span class="hljs-string">&#x27;litnotatn e tam tenoit.&#x27;</span>), <span class="hljs-string">&#x27;continent a new nation.&#x27;</span>);<br>    assert.strictEqual(tongues(<span class="hljs-string">&#x27;Nsa zyolv pdimt gij xywbar ikad nsa cequ rifh.&#x27;</span>), <span class="hljs-string">&#x27;The quick brown fox jumped over the lazy dogs.&#x27;</span>);<br>    assert.strictEqual(tongues(<span class="hljs-string">&#x27;Tywpadh (1234567890) etr bytlnyenoit, nsau hsiycr pins pa ytlsetfar!&#x27;</span>), <span class="hljs-string">&#x27;Numbers (1234567890) and punctuation, they should both be unchanged!&#x27;</span>);<br>    assert.strictEqual(tongues(<span class="hljs-string">&#x27; &#x27;</span>), <span class="hljs-string">&#x27; &#x27;</span>);<br>    assert.strictEqual(tongues(<span class="hljs-string">&#x27;Nsoh oh tin Vcotfit pyn on liycr pa e roggadatn gidaoft cetfyefa.&#x27;</span>), <span class="hljs-string">&#x27;This is not Klingon but it could be a different foreign language.&#x27;</span>);<br>    assert.strictEqual(tongues(<span class="hljs-string">&#x27;0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789&#x27;</span>), <span class="hljs-string">&#x27;0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789&#x27;</span>);<br>    assert.strictEqual(tongues(<span class="hljs-string">&#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&#x27;</span>), <span class="hljs-string">&#x27;eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee&#x27;</span>);<br>    assert.strictEqual(tongues(<span class="hljs-string">&#x27;mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm&#x27;</span>), <span class="hljs-string">&#x27;wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww&#x27;</span>);<br>    assert.strictEqual(tongues(<span class="hljs-string">&#x27;z&#x27;</span>), <span class="hljs-string">&#x27;q&#x27;</span>);<br>    assert.strictEqual(tongues(<span class="hljs-string">&#x27;n&#x27;</span>), <span class="hljs-string">&#x27;t&#x27;</span>);<br>    assert.strictEqual(tongues(<span class="hljs-string">&#x27;****************************************************************************************************&#x27;</span>), <span class="hljs-string">&#x27;****************************************************************************************************&#x27;</span>);<br>    assert.strictEqual(tongues(<span class="hljs-string">&#x27;q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1q1&#x27;</span>), <span class="hljs-string">&#x27;z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1z1&#x27;</span>);<br>  &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><hr><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): 大小寫得轉換字，沒想到有 <code>tr</code> 這種方法，真的平常都不會有機會用到 ·＿·</p><p><img src="https://ithelp.ithome.com.tw/upload/images/20201011/2012082662JAenI2IR.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20201011/2012082662JAenI2IR.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/SqAcgMAWIaM">Unsplash Thought Catalog</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://apidock.com/ruby/String/tr">Ruby - apidock tr</a></li></ul></li><li>JavaScript<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase">JS - MDN String.prototype.toLowerCase()</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase">JS - MDN String.prototype.toUpperCase()</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf">JS - MDN Array.prototype.indexOf()</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">tongues</span><span class="hljs-params">(code)</span></span><br>  code = code.tr(<span class="hljs-string">&#x27;aeiouy&#x27;</span>,<span class="hljs-string">&#x27;eaoiyu&#x27;</span>)<br>  code = code.tr(<span class="hljs-string">&#x27;AEIOUY&#x27;</span>,<span class="hljs-string">&#x27;EAOIYU&#x27;</span>)<br>  code = code.tr(<span class="hljs-string">&#x27;bkxznhdcwgpvjqtsrlmf&#x27;</span>,<span class="hljs-string">&#x27;pvjqtsrlmfbkxznhdcwg&#x27;</span>)<br>  code = code.tr(<span class="hljs-string">&#x27;BKXZNHDCWGPVJQTSRLMF&#x27;</span>,<span class="hljs-string">&#x27;PVJQTSRLMFBKXZNHDCWG&#x27;</span>)<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 2</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">tongues</span><span class="hljs-params">(code)</span></span><br>  code.tr(<span class="hljs-string">&#x27;eouaiypvjqtsrlmfbkxznhdcwg&#x27;</span>, <span class="hljs-string">&#x27;aiyeoubkxznhdcwgpvjqtsrlmf&#x27;</span>).tr(<span class="hljs-string">&#x27;eouaiypvjqtsrlmfbkxznhdcwg&#x27;</span>.upcase, <span class="hljs-string">&#x27;aiyeoubkxznhdcwgpvjqtsrlmf&#x27;</span>.upcase)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">tongues</span>(<span class="hljs-params">code</span>) </span>&#123;<br>  <span class="hljs-keyword">var</span> alpha = <span class="hljs-string">&#x27;aiyeoubkxznhdcwgpvjqtsrlmf&#x27;</span>, repl = <span class="hljs-string">&#x27;eouaiypvjqtsrlmfbkxznhdcwg&#x27;</span>;<br>  <span class="hljs-keyword">return</span> code.replace(<span class="hljs-regexp">/[a-z]/gi</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">m</span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> lower = m.toLowerCase();<br>    <span class="hljs-keyword">return</span> lower == m ? repl[alpha.indexOf(lower)] : repl[alpha.indexOf(lower)].toUpperCase();<br>  &#125;);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村25 - Range Extraction</title>
    <link href="/2020/10/10/codewars25/"/>
    <url>/2020/10/10/codewars25/</url>
    
    <content type="html"><![CDATA[<h1 id="25-Range-Extraction"><a href="#25-Range-Extraction" class="headerlink" title="25 - Range Extraction"></a>25 - Range Extraction</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>A format for expressing an ordered list of integers is to use a comma separated list of either</p><ul><li>individual integers</li><li>or a range of integers denoted by the starting integer separated from the end integer in the range by a dash, ‘-‘. The range includes all integers in the interval including both endpoints. It is not considered a range unless it spans at least 3 numbers. For example (“12, 13, 15-17”)</li></ul><p>Complete the solution so that it takes a list of integers in increasing order and returns a correctly formatted string in the range format.</p><p>Example:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs ruby">  solution([-<span class="hljs-number">6</span>, -<span class="hljs-number">3</span>, -<span class="hljs-number">2</span>, -<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">17</span>, <span class="hljs-number">18</span>, <span class="hljs-number">19</span>, <span class="hljs-number">20</span>])<br>  <span class="hljs-comment"># returns &quot;-6,-3-1,3-5,7-11,14,15,17-20&quot;</span><br><span class="hljs-string">``</span>  <br><br><span class="hljs-comment">### Ruby</span><br><br><span class="hljs-comment">#### Init</span><br><br><span class="hljs-string">``</span><span class="hljs-string">`ruby</span><br><span class="hljs-string">  def solution(list)</span><br><span class="hljs-string">    #todo: complete solution</span><br><span class="hljs-string">  end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">Test.assert_equals(solution([-<span class="hljs-number">6</span>, -<span class="hljs-number">3</span>, -<span class="hljs-number">2</span>, -<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">17</span>, <span class="hljs-number">18</span>, <span class="hljs-number">19</span>, <span class="hljs-number">20</span>]), <span class="hljs-string">&quot;-6,-3-1,3-5,7-11,14,15,17-20&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">list</span>)</span>&#123;<br> <span class="hljs-comment">//<span class="hljs-doctag">TODO:</span> complete solution </span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Test.assertEquals(solution([-<span class="hljs-number">6</span>, -<span class="hljs-number">3</span>, -<span class="hljs-number">2</span>, -<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">17</span>, <span class="hljs-number">18</span>, <span class="hljs-number">19</span>, <span class="hljs-number">20</span>]), <span class="hljs-string">&quot;-6,-3-1,3-5,7-11,14,15,17-20&quot;</span>)<br></code></pre></td></tr></table></figure><hr><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): 如果現在的數 +1 跟下一位數相等，就會被算在同個區間<br>想法(2): 如果只有一位數的話回傳該數，一位到兩位數之間回傳該兩位數，超過則回傳區間並且加上符號 <code>-</code></p><p><img src="https://ithelp.ithome.com.tw/upload/images/20201010/201208261dOJS0P7LB.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20201010/201208261dOJS0P7LB.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/nGrfKmtwv24">Unsplash Sincerely Media</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://apidock.com/ruby/Enumerable/chunk_while">Ruby - apidock chunk_while</a></li><li><a href="https://apidock.com/ruby/Enumerable/flat_map">Ruby - apidock flat_map</a></li></ul></li><li>JavaScript<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice">JS - MDN Array.prototype.splice()</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">solution</span><span class="hljs-params">(list)</span></span><br>  list.chunk_while &#123; <span class="hljs-params">|i, j|</span> i + <span class="hljs-number">1</span> == j &#125;<br>      .flat_map &#123; <span class="hljs-params">|a|</span><br>        <span class="hljs-keyword">if</span> a.size == <span class="hljs-number">1</span><br>          a.first.to_s<br>        <span class="hljs-keyword">elsif</span> a.size == <span class="hljs-number">2</span> <br>          [a.first.to_s, a.last.to_s]<br>        <span class="hljs-keyword">else</span><br>          <span class="hljs-string">&quot;<span class="hljs-subst">#&#123;a.first&#125;</span>-<span class="hljs-subst">#&#123;a.last&#125;</span>&quot;</span><br>        <span class="hljs-keyword">end</span><br>      &#125;<br>      .join(<span class="hljs-string">&#x27;,&#x27;</span>)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">list</span>)</span>&#123;<br>   <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; list.length; i++)&#123;<br>      <span class="hljs-keyword">var</span> j = i;<br>      <span class="hljs-keyword">while</span>(list[j] - list[j + <span class="hljs-number">1</span>] == -<span class="hljs-number">1</span>) j++;<br>      <span class="hljs-keyword">if</span>(j != i &amp;&amp; j-i &gt; <span class="hljs-number">1</span>) list.splice(i, j - i+<span class="hljs-number">1</span>, list[i] + <span class="hljs-string">&#x27;-&#x27;</span> + list[j]);<br>  &#125;<br>  <span class="hljs-keyword">return</span> list.join();<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村24 - Best travel</title>
    <link href="/2020/10/09/codewars24/"/>
    <url>/2020/10/09/codewars24/</url>
    
    <content type="html"><![CDATA[<h1 id="24-Best-travel"><a href="#24-Best-travel" class="headerlink" title="24 - Best travel"></a>24 - Best travel</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>John and Mary want to travel between a few towns A, B, C … Mary has on a sheet of paper a list of distances between these towns. <code>ls = [50, 55, 57, 58, 60]</code>. John is tired of driving and he says to Mary that he doesn’t want to drive more than <code>t = 174</code> miles and he will visit only <code>3</code> towns.</p><p>Which distances, hence which towns, they will choose so that the sum of the distances is the biggest possible to please Mary and John?</p><p>Example:</p><p>With list <code>ls</code> and 3 towns to visit they can make a choice between: <code>[50,55,57],[50,55,58],[50,55,60],[50,57,58],[50,57,60],[50,58,60],[55,57,58],[55,57,60],[55,58,60],[57,58,60]</code>.</p><p>The sums of distances are then: <code>162, 163, 165, 165, 167, 168, 170, 172, 173, 175</code>.</p><p>The biggest possible sum taking a limit of 174 into account is then 173 and the distances of the 3 corresponding towns is <code>[55, 58, 60]</code>.</p><p>The function chooseBestSum (or <code>choose_best_sum</code> or … depending on the language) will take as parameters t (maximum sum of distances, integer &gt;= 0), <code>k</code> (number of towns to visit, k &gt;= 1) and <code>ls</code> (list of distances, all distances are positive or null integers and this list has at least one element). The function returns the “best” sum ie the biggest possible sum of k distances less than or equal to the given limit t, if that sum exists, or otherwise nil, null, None, Nothing, depending on the language. With C++, C, Rust, Swift, Go, Kotlin return <code>-1</code>.</p><p>Examples:</p><p><code>ts = [50, 55, 56, 57, 58] choose_best_sum(163, 3, ts) -&gt; 163</code></p><p><code>xs = [50] choose_best_sum(163, 3, xs) -&gt; nil (or null or ... or -1 (C++, C, Rust, Swift, Go)</code></p><p><code>ys = [91, 74, 73, 85, 73, 81, 87] choose_best_sum(230, 3, ys) -&gt; 228</code></p><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">choose_best_sum</span><span class="hljs-params">(t, k, ls)</span></span><br>    <span class="hljs-comment"># your code</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ruby">Test.describe(<span class="hljs-string">&quot;choose_best_sum&quot;</span>) <span class="hljs-keyword">do</span><br>  Test.it(<span class="hljs-string">&quot;Basic Tests&quot;</span>) <span class="hljs-keyword">do</span><br>    ts = [<span class="hljs-number">50</span>, <span class="hljs-number">55</span>, <span class="hljs-number">56</span>, <span class="hljs-number">57</span>, <span class="hljs-number">58</span>]<br>    Test.assert_equals(choose_best_sum(<span class="hljs-number">163</span>, <span class="hljs-number">3</span>, ts), <span class="hljs-number">163</span>)<br>    ts = [<span class="hljs-number">50</span>]<br>    Test.assert_equals(choose_best_sum(<span class="hljs-number">163</span>, <span class="hljs-number">3</span>, ts), <span class="hljs-literal">nil</span>)<br>    ts = [<span class="hljs-number">91</span>, <span class="hljs-number">74</span>, <span class="hljs-number">73</span>, <span class="hljs-number">85</span>, <span class="hljs-number">73</span>, <span class="hljs-number">81</span>, <span class="hljs-number">87</span>]<br>    Test.assert_equals(choose_best_sum(<span class="hljs-number">230</span>, <span class="hljs-number">3</span>, ts), <span class="hljs-number">228</span>)<br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">chooseBestSum</span>(<span class="hljs-params">t, k, ls</span>) </span>&#123;<br>  <span class="hljs-comment">// your code</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Test.describe(<span class="hljs-string">&quot;chooseBestSum&quot;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>  Test.it(<span class="hljs-string">&quot;Basic tests &quot;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;        <br>    <span class="hljs-keyword">var</span> ts = [<span class="hljs-number">50</span>, <span class="hljs-number">55</span>, <span class="hljs-number">56</span>, <span class="hljs-number">57</span>, <span class="hljs-number">58</span>]<br>    Test.assertEquals(chooseBestSum(<span class="hljs-number">163</span>, <span class="hljs-number">3</span>, ts), <span class="hljs-number">163</span>)<br>    ts = [<span class="hljs-number">50</span>]<br>    Test.assertEquals(chooseBestSum(<span class="hljs-number">163</span>, <span class="hljs-number">3</span>, ts), <span class="hljs-literal">null</span>)<br>    ts = [<span class="hljs-number">91</span>, <span class="hljs-number">74</span>, <span class="hljs-number">73</span>, <span class="hljs-number">85</span>, <span class="hljs-number">73</span>, <span class="hljs-number">81</span>, <span class="hljs-number">87</span>]<br>    Test.assertEquals(chooseBestSum(<span class="hljs-number">230</span>, <span class="hljs-number">3</span>, ts), <span class="hljs-number">228</span>)<br>&#125;)&#125;)<br></code></pre></td></tr></table></figure><hr><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): 以 <code>k</code> 個 towns 來作為陣列，並且加總然後選擇小於 <code>t</code> miles 的數字，並且找出最大值<br>想法(2): 這邊查到 <code>combination</code> 這個 ruby 的方法減少很多麻煩… 寫了好幾題覺得 ruby 真好 ·＿·</p><p><img src="https://ithelp.ithome.com.tw/upload/images/20201009/20120826gfkMqRiDI0.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20201009/20120826gfkMqRiDI0.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/rjm78PEyYLc">Unsplash Ergita Sela</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://apidock.com/ruby/Array/combination">Ruby - apidock combination</a></li></ul></li><li>JavaScript<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat">JS - MDN Array.prototype.concat()</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">choose_best_sum</span><span class="hljs-params">(t, k, ls)</span></span><br>  ls.combination(k)<br>    .map&#123; <span class="hljs-params">|array|</span> array.reduce(<span class="hljs-symbol">:+</span>) &#125;<br>    .select&#123; <span class="hljs-params">|sum|</span> sum &lt;= t &#125;<br>    .max<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 2</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">choose_best_sum</span><span class="hljs-params">(t, k, ls)</span></span><br>  ls.combination(k).map(&amp;<span class="hljs-symbol">:sum</span>).reject &#123; <span class="hljs-params">|n|</span> n &gt; t &#125;.max<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">chooseBestSum</span>(<span class="hljs-params">t, k, ls</span>) </span>&#123;<br>  <span class="hljs-keyword">var</span> biggestCount = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">var</span> recurseTowns = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">townsSoFar, lastIndex</span>) </span>&#123;<br>    townsSoFar = townsSoFar || [];<br><br>    <span class="hljs-keyword">if</span> (townsSoFar.length === k) &#123;<br>      <span class="hljs-keyword">var</span> sumDistance = townsSoFar.reduce(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a+b);<br>      <span class="hljs-keyword">if</span> (sumDistance &lt;= t &amp;&amp; sumDistance &gt; biggestCount) &#123;<br>        biggestCount = sumDistance;<br>      &#125;      <br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = lastIndex + <span class="hljs-number">1</span> || <span class="hljs-number">0</span>; i &lt; ls.length; i++) &#123;<br>      recurseTowns(townsSoFar.concat(ls[i]), i);<br>    &#125;<br>  &#125;<br>  recurseTowns();<br>  <br>  <span class="hljs-keyword">return</span> biggestCount || <span class="hljs-literal">null</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村23 - Number of Proper Fractions with Denominator d</title>
    <link href="/2020/10/08/codewars23/"/>
    <url>/2020/10/08/codewars23/</url>
    
    <content type="html"><![CDATA[<h1 id="23-Number-of-Proper-Fractions-with-Denominator-d"><a href="#23-Number-of-Proper-Fractions-with-Denominator-d" class="headerlink" title="23 - Number of Proper Fractions with Denominator d"></a>23 - Number of Proper Fractions with Denominator d</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>If n is the numerator and d the denominator of a fraction, that fraction is defined a (reduced) proper fraction if and only if GCD(n,d)==1.</p><p>For example <code>5/16</code> is a proper fraction, while <code>6/16</code> is not, as both 6 and 16 are divisible by 2, thus the fraction can be reduced to <code>3/8</code>.</p><p>Now, if you consider a given number d, how many proper fractions can be built using d as a denominator?</p><p>For example, let’s assume that d is 15: you can build a total of 8 different proper fractions between 0 and 1 with it: 1/15, 2/15, 4/15, 7/15, 8/15, 11/15, 13/15 and 14/15.</p><p>You are to build a function that computes how many proper fractions you can build with a given denominator:</p><p>The order of the permutations doesn’t matter.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">proper_fractions(<span class="hljs-number">1</span>)==<span class="hljs-number">0</span><br>proper_fractions(<span class="hljs-number">2</span>)==<span class="hljs-number">1</span><br>proper_fractions(<span class="hljs-number">5</span>)==<span class="hljs-number">4</span><br>proper_fractions(<span class="hljs-number">15</span>)==<span class="hljs-number">8</span><br>proper_fractions(<span class="hljs-number">25</span>)==<span class="hljs-number">20</span><br></code></pre></td></tr></table></figure><p>Be ready to handle big numbers.</p><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">proper_fractions</span><span class="hljs-params">(n)</span></span><br>  <span class="hljs-comment">#your code here</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ruby">Test.assert_equals(proper_fractions(<span class="hljs-number">1</span>),<span class="hljs-number">0</span>)<br>Test.assert_equals(proper_fractions(<span class="hljs-number">2</span>),<span class="hljs-number">1</span>)<br>Test.assert_equals(proper_fractions(<span class="hljs-number">5</span>),<span class="hljs-number">4</span>)<br>Test.assert_equals(proper_fractions(<span class="hljs-number">15</span>),<span class="hljs-number">8</span>)<br>Test.assert_equals(proper_fractions(<span class="hljs-number">25</span>),<span class="hljs-number">20</span>)<br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">properFractions</span>(<span class="hljs-params">n</span>)</span>&#123;<br>  <span class="hljs-comment">//your code here</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Test.assertEquals(properFractions(<span class="hljs-number">1</span>),<span class="hljs-number">0</span>);<br>Test.assertEquals(properFractions(<span class="hljs-number">2</span>),<span class="hljs-number">1</span>);<br>Test.assertEquals(properFractions(<span class="hljs-number">5</span>),<span class="hljs-number">4</span>);<br>Test.assertEquals(properFractions(<span class="hljs-number">15</span>),<span class="hljs-number">8</span>);<br>Test.assertEquals(properFractions(<span class="hljs-number">25</span>),<span class="hljs-number">20</span>);<br></code></pre></td></tr></table></figure><hr><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): 一開始我是直接暴力破解的，但發現時間複雜度很高，所以沒過 ·＿＿·<br>想法(2): 其實題目就是 <code>1 ~ N 中與 N 互質的數</code>，後來找到原來是 <code>歐拉函示(?)</code></p><p><img src="https://ithelp.ithome.com.tw/upload/images/20201008/201208262DGebhLPVN.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20201008/201208262DGebhLPVN.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/GogyKfxfA8o">Unsplash Annie Spratt</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://ruby-doc.org/core-2.5.0/Math.html">Ruby - apidock doc Rational</a></li></ul></li><li>JavaScript<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sqrt">JS - MDN Math.sqrt()</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">proper_fractions</span><span class="hljs-params">(n)</span></span><br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span> <span class="hljs-keyword">if</span> n == <span class="hljs-number">1</span><br><br>  result = n<br>  (<span class="hljs-number">2</span>..Math.sqrt(n).to_i).each&#123; <span class="hljs-params">|x|</span><br>    <span class="hljs-keyword">if</span> n % x &lt; <span class="hljs-number">1</span><br>      n = n / x <span class="hljs-keyword">while</span> n % x &lt; <span class="hljs-number">1</span> <br>      result = result - result / x<br>    <span class="hljs-keyword">end</span><br>  &#125;<br>    <br>  result = result - result / n <span class="hljs-keyword">if</span> n &gt; <span class="hljs-number">1</span><br>  result<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">properFractions</span>(<span class="hljs-params">n</span>)</span>&#123;<br>  <span class="hljs-keyword">if</span> (n === <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><br>  <span class="hljs-keyword">let</span> res = n, a = n;<br>  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">2</span>; i &lt;= <span class="hljs-built_in">Math</span>.sqrt(a); i++) &#123;<br>    <span class="hljs-keyword">if</span>(a % i === <span class="hljs-number">0</span>) &#123;<br>      res = res / i * (i - <span class="hljs-number">1</span>);<br>      <span class="hljs-keyword">while</span>(a % i === <span class="hljs-number">0</span>) a /= i;<br>    &#125;<br>  &#125;<br><br>  <span class="hljs-keyword">if</span>(a &gt; <span class="hljs-number">1</span>)<br>    res = res / a * (a - <span class="hljs-number">1</span>)<br>  <br>  <span class="hljs-keyword">return</span> res<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村22 - Permutations</title>
    <link href="/2020/10/07/codewars22/"/>
    <url>/2020/10/07/codewars22/</url>
    
    <content type="html"><![CDATA[<h1 id="22-Permutations"><a href="#22-Permutations" class="headerlink" title="22 - Permutations"></a>22 - Permutations</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>In this kata you have to create all permutations of an input string and remove duplicates, if present. This means, you have to shuffle all letters from the input in all possible orders.</p><p>Examples:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">permutations(&#x27;a&#x27;); # [&#x27;a&#x27;]<br>permutations(&#x27;ab&#x27;); # [&#x27;ab&#x27;, &#x27;ba&#x27;]<br>permutations(&#x27;aabb&#x27;); # [&#x27;aabb&#x27;, &#x27;abab&#x27;, &#x27;abba&#x27;, &#x27;baab&#x27;, &#x27;baba&#x27;, &#x27;bbaa&#x27;]<br></code></pre></td></tr></table></figure><p>The order of the permutations doesn’t matter.</p><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">permutations</span><span class="hljs-params">(string)</span></span><br>  <span class="hljs-comment">#your code here</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment">#Test.assert_equals(permutations(&#x27;a&#x27;).sort, [&#x27;a&#x27;]);</span><br>Test.assert_equals(permutations(<span class="hljs-string">&#x27;ab&#x27;</span>).sort, [<span class="hljs-string">&#x27;ab&#x27;</span>, <span class="hljs-string">&#x27;ba&#x27;</span>])<br>Test.assert_equals(permutations(<span class="hljs-string">&#x27;aabb&#x27;</span>).sort, [<span class="hljs-string">&#x27;aabb&#x27;</span>, <span class="hljs-string">&#x27;abab&#x27;</span>, <span class="hljs-string">&#x27;abba&#x27;</span>, <span class="hljs-string">&#x27;baab&#x27;</span>, <span class="hljs-string">&#x27;baba&#x27;</span>, <span class="hljs-string">&#x27;bbaa&#x27;</span>])<br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">permutations</span>(<span class="hljs-params">string</span>) </span>&#123;<br>  <span class="hljs-comment">//your code here</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">describe(<span class="hljs-string">&#x27;permutations&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>  it(<span class="hljs-string">&#x27;examples from description&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>    Test.assertSimilar(permutations(<span class="hljs-string">&#x27;a&#x27;</span>), [<span class="hljs-string">&#x27;a&#x27;</span>]);<br>    Test.assertSimilar(permutations(<span class="hljs-string">&#x27;ab&#x27;</span>).sort(), [<span class="hljs-string">&#x27;ab&#x27;</span>, <span class="hljs-string">&#x27;ba&#x27;</span>].sort());<br>    Test.assertSimilar(permutations(<span class="hljs-string">&#x27;aabb&#x27;</span>).sort(), [<span class="hljs-string">&#x27;aabb&#x27;</span>, <span class="hljs-string">&#x27;abab&#x27;</span>, <span class="hljs-string">&#x27;abba&#x27;</span>, <span class="hljs-string">&#x27;baab&#x27;</span>, <span class="hljs-string">&#x27;baba&#x27;</span>, <span class="hljs-string">&#x27;bbaa&#x27;</span>].sort());<br>  &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><hr><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): 字組的所有排列組合，發現 ruby 連這種東西都有，寫起來就是簡潔又快速，真的方便 ·＿＿·</p><p><img src="https://ithelp.ithome.com.tw/upload/images/20201007/20120826ivLm6ehvW5.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20201007/20120826ivLm6ehvW5.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/8pb7Hq539Zw">Unsplash XPS</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://apidock.com/ruby/Array/permutation">Ruby - apidock permutation</a></li></ul></li><li>JavaScript<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf">JS - Array.prototype.indexOf()</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substring">JS - String.prototype.substring()</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat">JS - Array.prototype.concat()</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">permutations</span><span class="hljs-params">(string)</span></span><br>  string.chars.permutation.map(&amp;<span class="hljs-symbol">:join</span>).uniq<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">permutations</span>(<span class="hljs-params">string</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (string.length &lt;= <span class="hljs-number">1</span>)<br>      <span class="hljs-keyword">return</span> [string];<br><br>    <span class="hljs-keyword">var</span> result = [];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; string.length; i++)&#123;<br>      result = result.concat(permutations(string.substring(<span class="hljs-number">0</span>, i) + string.substring(i + <span class="hljs-number">1</span>)).map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) </span>&#123;<br>        <span class="hljs-keyword">return</span> string[i] + e;<br>      &#125;).filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) </span>&#123;<br>        <span class="hljs-keyword">return</span> result.indexOf(e) === -<span class="hljs-number">1</span>;<br>      &#125;));<br>    &#125;<br>    <span class="hljs-keyword">return</span> result;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村21 - Snail</title>
    <link href="/2020/10/06/codewars21/"/>
    <url>/2020/10/06/codewars21/</url>
    
    <content type="html"><![CDATA[<h1 id="21-Snail"><a href="#21-Snail" class="headerlink" title="21 - Snail"></a>21 - Snail</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>Snail Sort</p><p>Given an <code>n x n</code> array, return the array elements arranged from outermost elements to the middle element, traveling clockwise.</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby">array = [[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>],<br>         [<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>],<br>         [<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>]]<br>snail(array) <span class="hljs-comment">#=&gt; [1,2,3,6,9,8,7,4,5]</span><br></code></pre></td></tr></table></figure><p>For better understanding, please follow the numbers of the next array consecutively:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby">array = [[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>],<br>         [<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">4</span>],<br>         [<span class="hljs-number">7</span>,<span class="hljs-number">6</span>,<span class="hljs-number">5</span>]]<br>snail(array) <span class="hljs-comment">#=&gt; [1,2,3,4,5,6,7,8,9]</span><br></code></pre></td></tr></table></figure><p>NOTE: The idea is not sort the elements from the lowest value to the highest; the idea is to traverse the 2-d array in a clockwise snailshell pattern.</p><p>NOTE 2: The 0x0 (empty matrix) is represented as en empty array inside an array <code>[[]]</code>.</p><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">snail</span><span class="hljs-params">(array)</span></span><br>  <span class="hljs-comment"># enjoy</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ruby">def test input , expected<br>  output = snail(input)<br>  Test.expect(expected == output, <span class="hljs-string">&quot;When snail(<span class="hljs-subst">#&#123;input&#125;</span>) expected <span class="hljs-subst">#&#123;expected&#125;</span> but got <span class="hljs-subst">#&#123;output&#125;</span>&quot;</span>)<br><span class="hljs-keyword">end</span><br><br>test( [[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>],[<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>],[<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>]] , [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">8</span>, <span class="hljs-number">7</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>])<br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">snail = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">array</span>) </span>&#123;<br>  <span class="hljs-comment">// enjoy</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Test.assertDeepEquals(snail([[]]), []);<br>Test.assertDeepEquals(snail([[<span class="hljs-number">1</span>]]), [<span class="hljs-number">1</span>]);<br>Test.assertDeepEquals(snail([[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>], [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>], [<span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>]]), [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">8</span>, <span class="hljs-number">7</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]);<br>Test.assertDeepEquals(snail([[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>], [<span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>], [<span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>], [<span class="hljs-number">16</span>, <span class="hljs-number">17</span>, <span class="hljs-number">18</span>, <span class="hljs-number">19</span>, <span class="hljs-number">20</span>], [<span class="hljs-number">21</span>, <span class="hljs-number">22</span>, <span class="hljs-number">23</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>]]), [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">10</span>, <span class="hljs-number">15</span>, <span class="hljs-number">20</span>, <span class="hljs-number">25</span>, <span class="hljs-number">24</span>, <span class="hljs-number">23</span>, <span class="hljs-number">22</span>, <span class="hljs-number">21</span>, <span class="hljs-number">16</span>, <span class="hljs-number">11</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">14</span>, <span class="hljs-number">19</span>, <span class="hljs-number">18</span>, <span class="hljs-number">17</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>]);<br>Test.assertDeepEquals(snail([[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>], [<span class="hljs-number">20</span>, <span class="hljs-number">21</span>, <span class="hljs-number">22</span>, <span class="hljs-number">23</span>, <span class="hljs-number">24</span>, <span class="hljs-number">7</span>], [<span class="hljs-number">19</span>, <span class="hljs-number">32</span>, <span class="hljs-number">33</span>, <span class="hljs-number">34</span>, <span class="hljs-number">25</span>, <span class="hljs-number">8</span>], [<span class="hljs-number">18</span>, <span class="hljs-number">31</span>, <span class="hljs-number">36</span>, <span class="hljs-number">35</span>, <span class="hljs-number">26</span>, <span class="hljs-number">9</span>], [<span class="hljs-number">17</span>, <span class="hljs-number">30</span>, <span class="hljs-number">29</span>, <span class="hljs-number">28</span>, <span class="hljs-number">27</span>, <span class="hljs-number">10</span>], [<span class="hljs-number">16</span>, <span class="hljs-number">15</span>, <span class="hljs-number">14</span>, <span class="hljs-number">13</span>, <span class="hljs-number">12</span>, <span class="hljs-number">11</span>]]), [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">16</span>, <span class="hljs-number">17</span>, <span class="hljs-number">18</span>, <span class="hljs-number">19</span>, <span class="hljs-number">20</span>, <span class="hljs-number">21</span>, <span class="hljs-number">22</span>, <span class="hljs-number">23</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">26</span>, <span class="hljs-number">27</span>, <span class="hljs-number">28</span>, <span class="hljs-number">29</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>, <span class="hljs-number">32</span>, <span class="hljs-number">33</span>, <span class="hljs-number">34</span>, <span class="hljs-number">35</span>, <span class="hljs-number">36</span>]);<br></code></pre></td></tr></table></figure><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): 需要花時間找一下規律，每次將陣列取第一個的時候，後面剩餘的陣列必須還有些動作來轉換<br>想法(2): 轉換直至陣列為空為止，可以透過遞迴或者是 while 迴圈來寫</p><p><img src="https://ithelp.ithome.com.tw/upload/images/20201006/20120826BoD8viU9wc.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20201006/20120826BoD8viU9wc.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/sTo3IYhYC_c">Unsplash Dagny Reese</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://apidock.com/ruby/Array/flatten">Ruby - apidock flatten</a></li><li><a href="https://apidock.com/ruby/Array/transpose">Ruby - apidock transpose</a></li><li><a href="https://apidock.com/ruby/Array/reverse">Ruby - apidock reverse</a></li></ul></li><li>JavaScript<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/shift">JS - MDN shift</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/pop">JS - MDN pop</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse">JS - MDN reverse</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">snail</span><span class="hljs-params">(array)</span></span><br>  result = []<br>  <span class="hljs-keyword">while</span> array.flatten.any?<br>    result &lt;&lt; array.shift<br>    array = array.transpose.reverse<br>  <span class="hljs-keyword">end</span><br>  result.flatten<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 2</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">snail</span><span class="hljs-params">(array)</span></span><br>  array.empty? ? [] : array.shift + snail(array.transpose.reverse)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">snail</span>(<span class="hljs-params">array</span>) </span>&#123;<br>  <span class="hljs-keyword">var</span> vector = [];<br>  <span class="hljs-keyword">while</span> (array.length) &#123;<br>    vector.push(...array.shift());<br>    array.map(<span class="hljs-function"><span class="hljs-params">row</span> =&gt;</span> vector.push(row.pop()));<br>    array.reverse().map(<span class="hljs-function"><span class="hljs-params">row</span> =&gt;</span> row.reverse());<br>  &#125;<br>  <span class="hljs-keyword">return</span> vector;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村20 - Scramblies</title>
    <link href="/2020/10/05/codewars20/"/>
    <url>/2020/10/05/codewars20/</url>
    
    <content type="html"><![CDATA[<h1 id="20-Scramblies"><a href="#20-Scramblies" class="headerlink" title="20 - Scramblies"></a>20 - Scramblies</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>Complete the function scramble(str1, str2) that returns true if a portion of str1 characters can be rearranged to match str2, otherwise returns false.</p><p>Notes:</p><ul><li>Only lower case letters will be used (a-z). No punctuation or digits will be included.</li><li>Performance needs to be considered</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Input strings s1 and s2 are <span class="hljs-literal">null</span> terminated.<br></code></pre></td></tr></table></figure><p>Examples</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">scramble(<span class="hljs-string">&#x27;rkqodlw&#x27;</span>, <span class="hljs-string">&#x27;world&#x27;</span>) ==&gt; True<br>scramble(<span class="hljs-string">&#x27;cedewaraaossoqqyt&#x27;</span>, <span class="hljs-string">&#x27;codewars&#x27;</span>) ==&gt; True<br>scramble(<span class="hljs-string">&#x27;katas&#x27;</span>, <span class="hljs-string">&#x27;steak&#x27;</span>) ==&gt; False<br></code></pre></td></tr></table></figure><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">scramble</span><span class="hljs-params">(s1,s2)</span></span><br>  <span class="hljs-comment">#your code here</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ruby">Test.assert_equals(scramble(<span class="hljs-string">&#x27;rkqodlw&#x27;</span>,<span class="hljs-string">&#x27;world&#x27;</span>),<span class="hljs-literal">true</span>)<br>Test.assert_equals(scramble(<span class="hljs-string">&#x27;cedewaraaossoqqyt&#x27;</span>,<span class="hljs-string">&#x27;codewars&#x27;</span>),<span class="hljs-literal">true</span>)<br>Test.assert_equals(scramble(<span class="hljs-string">&#x27;katas&#x27;</span>,<span class="hljs-string">&#x27;steak&#x27;</span>),<span class="hljs-literal">false</span>)<br>Test.assert_equals(scramble(<span class="hljs-string">&#x27;scriptjava&#x27;</span>,<span class="hljs-string">&#x27;javascript&#x27;</span>),<span class="hljs-literal">true</span>)<br>Test.assert_equals(scramble(<span class="hljs-string">&#x27;scriptingjava&#x27;</span>,<span class="hljs-string">&#x27;javascript&#x27;</span>),<span class="hljs-literal">true</span>)<br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">scramble</span>(<span class="hljs-params">str1, str2</span>) </span>&#123;<br> <span class="hljs-comment">//code me</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript">describe(<span class="hljs-string">&#x27;Example Tests&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>  Test.assertEquals(scramble(<span class="hljs-string">&#x27;rkqodlw&#x27;</span>,<span class="hljs-string">&#x27;world&#x27;</span>),<span class="hljs-literal">true</span>);<br>  Test.assertEquals(scramble(<span class="hljs-string">&#x27;cedewaraaossoqqyt&#x27;</span>,<span class="hljs-string">&#x27;codewars&#x27;</span>),<span class="hljs-literal">true</span>);<br>  Test.assertEquals(scramble(<span class="hljs-string">&#x27;katas&#x27;</span>,<span class="hljs-string">&#x27;steak&#x27;</span>),<span class="hljs-literal">false</span>);<br>  Test.assertEquals(scramble(<span class="hljs-string">&#x27;scriptjava&#x27;</span>,<span class="hljs-string">&#x27;javascript&#x27;</span>),<span class="hljs-literal">true</span>);<br>  Test.assertEquals(scramble(<span class="hljs-string">&#x27;scriptingjava&#x27;</span>,<span class="hljs-string">&#x27;javascript&#x27;</span>),<span class="hljs-literal">true</span>);<br>  Test.assertEquals(scramble(<span class="hljs-string">&#x27;scriptsjava&#x27;</span>,<span class="hljs-string">&#x27;javascripts&#x27;</span>),<span class="hljs-literal">true</span>);<br>  Test.assertEquals(scramble(<span class="hljs-string">&#x27;jscripts&#x27;</span>,<span class="hljs-string">&#x27;javascript&#x27;</span>),<span class="hljs-literal">false</span>);<br>  Test.assertEquals(scramble(<span class="hljs-string">&#x27;aabbcamaomsccdd&#x27;</span>,<span class="hljs-string">&#x27;commas&#x27;</span>),<span class="hljs-literal">true</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): 後者的值，跟前者比較時，要所有的字都有在前者且數量也要ㄧ樣<br>想法(2): 將後者的值透過 <code>uniq</code> 後，跑迴圈來比較 <code>count</code> 有無 <code>小於等於</code> 前者</p><p><img src="https://ithelp.ithome.com.tw/upload/images/20201005/20120826IN9SHwnVlw.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20201005/20120826IN9SHwnVlw.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/VKzSN-Xv6So">Unsplash Buse Doga Ay</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://apidock.com/ruby/Array/uniq">Ruby - apidock Uniq</a></li><li><a href="https://apidock.com/ruby/Enumerable/all%3F">Ruby - apidock All?</a></li></ul></li><li>JavaScript<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every">JS - MDN Array.prototype.every()</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">scramble</span><span class="hljs-params">(s1,s2)</span></span><br>  s3 = s1.split(<span class="hljs-string">&quot;&quot;</span>)<br>  s2.split(<span class="hljs-string">&quot;&quot;</span>).each <span class="hljs-keyword">do</span> <span class="hljs-params">|x|</span><br>    s3.each_with_index&#123; <span class="hljs-params">|y,i|</span> (s3.delete_at i ; <span class="hljs-keyword">break</span>) <span class="hljs-keyword">if</span> y == x &#125;<br>  <span class="hljs-keyword">end</span><br>  s1.length - s2.length == s3.join.length ? <span class="hljs-literal">true</span> : <span class="hljs-literal">false</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 2</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">scramble</span><span class="hljs-params">(s1,s2)</span></span><br>  s2.chars.uniq.all?&#123; <span class="hljs-params">|x|</span> s2.count(x) &lt;= s1.count(x) &#125;<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">scramble</span>(<span class="hljs-params">str1, str2</span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> [...str2].every(<span class="hljs-function"><span class="hljs-params">val</span> =&gt;</span> str2.split(val).length &lt;= str1.split(val).length);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村19 - RGB To Hex Conversion</title>
    <link href="/2020/10/04/codewars19/"/>
    <url>/2020/10/04/codewars19/</url>
    
    <content type="html"><![CDATA[<h1 id="19-RGB-To-Hex-Conversion"><a href="#19-RGB-To-Hex-Conversion" class="headerlink" title="19 - RGB To Hex Conversion"></a>19 - RGB To Hex Conversion</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>The rgb function is incomplete. Complete it so that passing in RGB decimal values will result in a hexadecimal representation being returned. Valid decimal values for RGB are 0 - 255. Any values that fall out of that range must be rounded to the closest valid value.</p><p>Note: Your answer should always be 6 characters long, the shorthand with 3 will not work here.</p><p>The following are examples of expected output values:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">rgb(255, 255, 255) # returns FFFFFF<br>rgb(255, 255, 300) # returns FFFFFF<br>rgb(0,0,0) # returns 000000<br>rgb(148, 0, 211) # returns 9400D3<br></code></pre></td></tr></table></figure><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">rgb</span><span class="hljs-params">(r, g, b)</span></span><br>  <span class="hljs-comment"># complete this function</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby">Test.assert_equals(rgb(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>), <span class="hljs-string">&#x27;000000&#x27;</span>)<br>Test.assert_equals(rgb(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">20</span>), <span class="hljs-string">&#x27;000000&#x27;</span>)<br>Test.assert_equals(rgb(<span class="hljs-number">300</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>), <span class="hljs-string">&#x27;FFFFFF&#x27;</span>)<br>Test.assert_equals(rgb(<span class="hljs-number">173</span>,<span class="hljs-number">255</span>,<span class="hljs-number">47</span>), <span class="hljs-string">&#x27;ADFF2F&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">rgb</span>(<span class="hljs-params">r, g, b</span>)</span>&#123;<br>  <span class="hljs-comment">// complete this function  </span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Test.assertEquals(rgb(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>), <span class="hljs-string">&#x27;000000&#x27;</span>)<br>Test.assertEquals(rgb(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">20</span>), <span class="hljs-string">&#x27;000000&#x27;</span>)<br>Test.assertEquals(rgb(<span class="hljs-number">300</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>), <span class="hljs-string">&#x27;FFFFFF&#x27;</span>)<br>Test.assertEquals(rgb(<span class="hljs-number">173</span>,<span class="hljs-number">255</span>,<span class="hljs-number">47</span>), <span class="hljs-string">&#x27;ADFF2F&#x27;</span>)<br></code></pre></td></tr></table></figure><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): 不管傳進來的值 <code>(r, g, b)</code> 都先考慮當數字不在 <code>0 ~ 255</code> 時，需要給最大、小值<br>想法(2): 判斷完成後，再轉為 <code>16</code> 進位 </p><p><img src="https://ithelp.ithome.com.tw/upload/images/20201004/20120826ebtZaU8Oav.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20201004/20120826ebtZaU8Oav.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/zSCHyhiRSeQ">Unsplash Jonathan Kemper</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://ruby-doc.org/core-2.4.0/Comparable.html">Ruby - apidock Clamp</a></li></ul></li><li>JavaScript<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number">JS - MDN Number</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">rgb</span><span class="hljs-params">(r, g, b)</span></span><br>  [r, g, b].map <span class="hljs-keyword">do</span> <span class="hljs-params">|c|</span><br>    <span class="hljs-keyword">if</span> c &lt;= <span class="hljs-number">0</span> <br>      <span class="hljs-string">&quot;00&quot;</span><br>    <span class="hljs-keyword">elsif</span> c &gt; <span class="hljs-number">255</span><br>      <span class="hljs-string">&quot;FF&quot;</span><br>    <span class="hljs-keyword">else</span><br>      c.to_s(<span class="hljs-number">16</span>).upcase    <br>    <span class="hljs-keyword">end</span><br>  <span class="hljs-keyword">end</span>.join(<span class="hljs-string">&#x27;&#x27;</span>)<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 2</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">rgb</span><span class="hljs-params">(r, g, b)</span></span><br>  <span class="hljs-string">&quot;%.2X&quot;</span> * <span class="hljs-number">3</span> % [r, g, b].map&#123; <span class="hljs-params">|i|</span> [[i, <span class="hljs-number">255</span>].min, <span class="hljs-number">0</span>].max &#125;<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 3</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">rgb</span><span class="hljs-params">(r, g, b)</span></span><br>  <span class="hljs-string">&quot;%.2X&quot;</span> * <span class="hljs-number">3</span> % [r, g, b].map&#123; <span class="hljs-params">|i|</span> i.clamp(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>) &#125;<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">rgb</span>(<span class="hljs-params">r, g, b</span>)</span>&#123;<br>  <span class="hljs-keyword">return</span> toHex(r) + toHex(g) + toHex(b);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">toHex</span>(<span class="hljs-params">color</span>) </span>&#123;<br>  <span class="hljs-keyword">if</span>(color &lt; <span class="hljs-number">0</span>)<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;00&quot;</span>;<br>  <span class="hljs-keyword">if</span>(color &gt; <span class="hljs-number">255</span>)<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;FF&quot;</span>;<br>  <span class="hljs-keyword">return</span> ( <span class="hljs-string">&quot;0&quot;</span> + (<span class="hljs-built_in">Number</span>(color).toString(<span class="hljs-number">16</span>)) )<br>                               .slice(-<span class="hljs-number">2</span>)<br>                               .toUpperCase()<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村18 - Maximum subarray sum</title>
    <link href="/2020/10/03/codewars18/"/>
    <url>/2020/10/03/codewars18/</url>
    
    <content type="html"><![CDATA[<h1 id="18-Maximum-subarray-sum"><a href="#18-Maximum-subarray-sum" class="headerlink" title="18 - Maximum subarray sum"></a>18 - Maximum subarray sum</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>The maximum sum subarray problem consists in finding the maximum sum of a contiguous subsequence in an array or list of integers:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">maxSequence [-<span class="hljs-number">2</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">3</span>, <span class="hljs-number">4</span>, -<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">5</span>, <span class="hljs-number">4</span>]<br><span class="hljs-comment">// should be 6: [4, -1, 2, 1]</span><br></code></pre></td></tr></table></figure><p>Easy case is when the list is made up of only positive numbers and the maximum sum is the sum of the whole array. If the list is made up of only negative numbers, return 0 instead.</p><p>Empty list is considered to have zero greatest sum. Note that the empty list or array is also a valid sublist/subarray.</p><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">max_sequence</span><span class="hljs-params">(arr)</span></span><br>  <span class="hljs-comment">#your code here</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ruby">Test.describe(<span class="hljs-string">&quot;Tests&quot;</span>) <span class="hljs-keyword">do</span><br>Test.assert_equals(max_sequence([]), <span class="hljs-number">0</span>)<br>Test.assert_equals(max_sequence([-<span class="hljs-number">2</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">3</span>, <span class="hljs-number">4</span>, -<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">5</span>, <span class="hljs-number">4</span>]), <span class="hljs-number">6</span>)<br>Test.assert_equals(max_sequence([<span class="hljs-number">11</span>]), <span class="hljs-number">11</span>)<br>Test.assert_equals(max_sequence([-<span class="hljs-number">32</span>]), <span class="hljs-number">0</span>)<br>Test.assert_equals(max_sequence([-<span class="hljs-number">2</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">7</span>, <span class="hljs-number">4</span>, -<span class="hljs-number">10</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>]), <span class="hljs-number">12</span>)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> maxSequence = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">arr</span>)</span>&#123;<br>  <span class="hljs-comment">// ...</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">describe( <span class="hljs-string">&quot;maxSequence&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>  it(<span class="hljs-string">&quot;should work on an empty array&quot;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>    Test.assertEquals(maxSequence([]), <span class="hljs-number">0</span>);<br>  &#125;);<br>  it(<span class="hljs-string">&quot;should work on the example&quot;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>    Test.assertEquals(maxSequence([-<span class="hljs-number">2</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">3</span>, <span class="hljs-number">4</span>, -<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">5</span>, <span class="hljs-number">4</span>]), <span class="hljs-number">6</span>);<br>  &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): 透過迴圈從 <code>1 ~ x</code> 群來計算所有加總後，再來比較所有算出來的結果哪個是最大的而得到答案。</p><p><img src="https://ithelp.ithome.com.tw/upload/images/20201003/201208268AC5hxNboA.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20201003/201208268AC5hxNboA.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/k2Kcwkandwg">Unsplash Christin Hume</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://apidock.com/ruby/Enumerable/each_cons">Ruby - apidock Each_cons</a></li><li><a href="https://apidock.com/ruby/Array/flatten">Ruby - apidock flatten</a></li></ul></li><li>JavaScript<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/max">JS - MDN Math.max()</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">max_sequence</span><span class="hljs-params">(arr)</span></span><br>  (<span class="hljs-number">1</span>..arr.size).map &#123; <span class="hljs-params">|i|</span> arr.each_cons(i).map(&amp;<span class="hljs-symbol">:sum</span>) &#125;<br>               .flatten<br>               .push(<span class="hljs-number">0</span>)<br>               .max<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-keyword">var</span> maxSequence = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">arr</span>)</span>&#123;<br>  <span class="hljs-keyword">var</span> maxSum = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">var</span> currentSum = <span class="hljs-number">0</span>;<br>  <br>  <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; arr.length; i++) &#123;<br>    currentSum += arr[i];<br>    <br>    <span class="hljs-keyword">if</span> (currentSum &lt;= <span class="hljs-number">0</span>) <br>      currentSum = <span class="hljs-number">0</span><br>    maxSum = <span class="hljs-built_in">Math</span>.max(maxSum, currentSum);<br>  &#125;<br>  <br>  <span class="hljs-keyword">return</span> maxSum;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村17 - Valid Parentheses</title>
    <link href="/2020/10/02/codewars17/"/>
    <url>/2020/10/02/codewars17/</url>
    
    <content type="html"><![CDATA[<h1 id="17-Valid-Parentheses"><a href="#17-Valid-Parentheses" class="headerlink" title="17 - Valid Parentheses"></a>17 - Valid Parentheses</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>Write a function called that takes a string of parentheses, and determines if the order of the parentheses is valid. The function should return true if the string is valid, and false if it’s invalid.</p><p>Examples</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-string">&quot;()&quot;</span>              =&gt;  <span class="hljs-literal">true</span><br><span class="hljs-string">&quot;)(()))&quot;</span>          =&gt;  <span class="hljs-literal">false</span><br><span class="hljs-string">&quot;(&quot;</span>               =&gt;  <span class="hljs-literal">false</span><br><span class="hljs-string">&quot;(())((()())())&quot;</span>  =&gt;  <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>Constraints</p><p><code>0 &lt;= input.length &lt;= 100</code></p><p>Along with opening (<code>(</code>) and closing (<code>)</code>) parenthesis, input may contain any valid ASCII characters. Furthermore, the input string may be empty and/or not contain any parentheses at all. Do not treat other forms of brackets as parentheses (e.g. <code>[]</code>, <code>&#123;&#125;</code>, <code>&lt;&gt;</code>).</p><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">valid_parentheses</span><span class="hljs-params">(string)</span></span><br>  <span class="hljs-comment">#your code here</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ruby">Test.assert_equals(valid_parentheses(<span class="hljs-string">&quot;  (&quot;</span>),<span class="hljs-literal">false</span>)<br>Test.assert_equals(valid_parentheses(<span class="hljs-string">&quot;)test&quot;</span>),<span class="hljs-literal">false</span>)<br>Test.assert_equals(valid_parentheses(<span class="hljs-string">&quot;&quot;</span>),<span class="hljs-literal">true</span>)<br>Test.assert_equals(valid_parentheses(<span class="hljs-string">&quot;hi())(&quot;</span>),<span class="hljs-literal">false</span>)<br>Test.assert_equals(valid_parentheses(<span class="hljs-string">&quot;hi(hi)()&quot;</span>),<span class="hljs-literal">true</span>)<br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">validParentheses</span>(<span class="hljs-params">parens</span>)</span>&#123;<br>  <span class="hljs-comment">//TODO </span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Test.assertEquals(validParentheses( <span class="hljs-string">&quot;()&quot;</span> ), <span class="hljs-literal">true</span>);<br>Test.assertEquals(validParentheses( <span class="hljs-string">&quot;())&quot;</span> ), <span class="hljs-literal">false</span>);<br></code></pre></td></tr></table></figure><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): 唯有先左括弧 <code>(</code> 再配上 <code>)</code> 才可以有機會回傳 <code>true</code>，反之先 <code>)</code> 再左 <code>(</code> 還是應該回傳 <code>false</code></p><p><img src="https://ithelp.ithome.com.tw/upload/images/20201002/20120826gDzqXRaQ1t.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20201002/20120826gDzqXRaQ1t.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/UGkKSDjQKUQ">Unsplash Thought Catalog</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://apidock.com/ruby/Fixnum/zero%3F">Ruby - apidock Zero?</a></li></ul></li><li>JavaScript<ul><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/includes">JS - MDN Array.prototype.includes()</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">valid_parentheses</span><span class="hljs-params">(string)</span></span><br>  count = <span class="hljs-number">0</span><br>  string.chars.each <span class="hljs-keyword">do</span> <span class="hljs-params">|char|</span><br>    count += <span class="hljs-number">1</span> <span class="hljs-keyword">if</span> char == <span class="hljs-string">&quot;(&quot;</span><br>    count -= <span class="hljs-number">1</span> <span class="hljs-keyword">if</span> char == <span class="hljs-string">&quot;)&quot;</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span> <span class="hljs-keyword">if</span> count &lt; <span class="hljs-number">0</span><br>  <span class="hljs-keyword">end</span><br>  count.zero?<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">validParentheses</span>(<span class="hljs-params">parens</span>)</span>&#123;<br><span class="hljs-keyword">var</span> count = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; parens.length; i++) &#123;<br>    <span class="hljs-keyword">if</span> (parens[i] === <span class="hljs-string">&#x27;(&#x27;</span>) count++;<br>    <span class="hljs-keyword">if</span> (parens[i] === <span class="hljs-string">&#x27;)&#x27;</span>) count--;<br>    <span class="hljs-keyword">if</span> (count &lt; <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>  &#125;<br>  <br>  <span class="hljs-keyword">return</span> count === <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-comment">// Solution 2</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">validParentheses</span>(<span class="hljs-params">parens</span>)</span>&#123;<br>  <span class="hljs-keyword">while</span>(parens.includes(<span class="hljs-string">&quot;()&quot;</span>))&#123;<br>    parens = parens.replace(<span class="hljs-string">&quot;()&quot;</span>, <span class="hljs-string">&quot;&quot;</span>)<br>  &#125;<br>  <br>  <span class="hljs-keyword">return</span> (parens === <span class="hljs-string">&quot;&quot;</span>) ? <span class="hljs-literal">true</span> : <span class="hljs-literal">false</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村16 - Memoized Fibonacci</title>
    <link href="/2020/10/01/codewars16/"/>
    <url>/2020/10/01/codewars16/</url>
    
    <content type="html"><![CDATA[<h1 id="16-Memoized-Fibonacci"><a href="#16-Memoized-Fibonacci" class="headerlink" title="16 - Memoized Fibonacci"></a>16 - Memoized Fibonacci</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>Problem Context</p><p>The <a href="https://en.wikipedia.org/wiki/Fibonacci_number">Fibonacci</a> sequence is traditionally used to explain tree recursion.</p><p>This algorithm serves welll its educative purpose but it’s <a href="https://mitpress.mit.edu/sicp/full-text/book/book-Z-H-11.html#%_sec_1.2.2">tremendously inefficient</a>, not only because of recursion, but because we invoke the fibonacci function twice, and the right branch of recursion (i.e. <code>fibonacci(n-2)</code>) recalculates all the Fibonacci numbers already calculated by the left branch (i.e. <code>fibonacci(n-1)</code>).</p><p>This algorithm is so inefficient that the time to calculate any Fibonacci number over 50 is simply too much. You may go for a cup of coffee or go take a nap while you wait for the answer. But if you try it here in Code Wars you will most likely get a code timeout before any answers.</p><p>For this particular Kata we want to implement the memoization solution. This will be cool because it will let us keep using the tree recursion algorithm while still keeping it sufficiently optimized to get an answer very rapidly.</p><p>The trick of the memoized version is that we will keep a cache data structure (most likely an associative array) where we will store the Fibonacci numbers as we calculate them. When a Fibonacci number is calculated, we first look it up in the cache, if it’s not there, we calculate it and put it in the cache, otherwise we returned the cached number.</p><p>Refactor the function into a recursive Fibonacci function that using a memoized data structure avoids the deficiencies of tree recursion Can you make it so the memoization cache is private to this function?</p><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">fibonacci</span><span class="hljs-params">(n)</span></span><br>  <span class="hljs-keyword">return</span> n <span class="hljs-keyword">if</span> (<span class="hljs-number">0</span>..<span class="hljs-number">1</span>).<span class="hljs-keyword">include</span>? n<br>  fibonacci(n - <span class="hljs-number">1</span>) + fibonacci(n - <span class="hljs-number">2</span>)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby">Test.assert_equals(fibonacci(<span class="hljs-number">50</span>), <span class="hljs-number">12586269025</span>)<br>Test.assert_equals(fibonacci(<span class="hljs-number">60</span>), <span class="hljs-number">1548008755920</span>)<br>Test.assert_equals(fibonacci(<span class="hljs-number">70</span>), <span class="hljs-number">190392490709135</span>)<br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> fibonacci = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>&#123;<br>  <span class="hljs-keyword">if</span>(n == <span class="hljs-number">0</span> || n == <span class="hljs-number">1</span>)<br>      <span class="hljs-keyword">return</span> n;<br>  <span class="hljs-keyword">return</span> fibonacci(n-<span class="hljs-number">1</span>) + fibonacci(n-<span class="hljs-number">2</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">describe(<span class="hljs-string">&quot;Kata Test Suite&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>  it(<span class="hljs-string">&quot;should calculate large Fibonacci numbers&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>    Test.assertEquals(fibonacci(<span class="hljs-number">70</span>), <span class="hljs-number">190392490709135</span>);<br>    Test.assertEquals(fibonacci(<span class="hljs-number">60</span>), <span class="hljs-number">1548008755920</span>);<br>    Test.assertEquals(fibonacci(<span class="hljs-number">50</span>), <span class="hljs-number">12586269025</span>);<br>  &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): <code>斐波那契数列</code> 為最經典的面試考題，從 <code>Init</code> 初始化的題目可以看出來不考慮到記憶體的情況下的解法及想法。<br>想法(2): 小於 <code>1~2</code> 的時候應該回傳傳進來的值，更大的數可以透過 <a href="https://en.wikipedia.org/wiki/Recursive_function">遞迴</a> 來執行</p><p><img src="https://ithelp.ithome.com.tw/upload/images/20201001/20120826slBAZSDayi.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20201001/20120826slBAZSDayi.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/eBRTYyjwpRY">Unsplash Radek Grzybowski</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://apidock.com/ruby/Hash/keys">Ruby - apidock Keys</a></li><li><a href="https://apidock.com/ruby/Array/include%3F">Ruby - apidock Include?</a></li></ul></li><li>JavaScript<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof">JS - MDN Typeof</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br>Fibs = &#123;&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">fibonacci</span><span class="hljs-params">(n)</span></span><br>  <span class="hljs-keyword">return</span> n <span class="hljs-keyword">if</span> n == <span class="hljs-number">0</span> <span class="hljs-params">||</span> n == <span class="hljs-number">1</span><br>  <span class="hljs-keyword">return</span> Fibs[n] <span class="hljs-keyword">if</span> Fibs.keys.<span class="hljs-keyword">include</span>?(n)<br>  Fibs[n] = fibonacci(n - <span class="hljs-number">1</span>) + fibonacci(n - <span class="hljs-number">2</span>)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-keyword">var</span> fibonacci = (<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">var</span> memo = [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>];<br>  <span class="hljs-keyword">var</span> fib = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>)</span>&#123;<br>      <span class="hljs-keyword">var</span> result = memo[n];<br>      <span class="hljs-keyword">if</span>(<span class="hljs-keyword">typeof</span> result !== <span class="hljs-string">&#x27;number&#x27;</span>)&#123;<br>        result = fib(n - <span class="hljs-number">1</span>) + fib(n - <span class="hljs-number">2</span>);<br>        memo[n] = result;<br>      &#125;<br>      <span class="hljs-keyword">return</span> result;<br>  &#125;<br>  <span class="hljs-keyword">return</span> fib;<br>&#125;)();<br><br><span class="hljs-comment">// Solution 2</span><br><span class="hljs-keyword">var</span> fibonacci = (<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> cache = &#123;&#125;;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>&#123;<br><br>      <span class="hljs-keyword">if</span>(n==<span class="hljs-number">0</span> || n == <span class="hljs-number">1</span>)<br>          <span class="hljs-keyword">return</span> n;<br>      <span class="hljs-keyword">if</span>(cache[n-<span class="hljs-number">2</span>] === <span class="hljs-literal">undefined</span>)<br>        cache[n-<span class="hljs-number">2</span>] = fibonacci(n-<span class="hljs-number">2</span>);<br>      <span class="hljs-keyword">if</span>(cache[n-<span class="hljs-number">1</span>] === <span class="hljs-literal">undefined</span>)<br>        cache[n-<span class="hljs-number">1</span>] = fibonacci(n-<span class="hljs-number">1</span>);<br><br>      <span class="hljs-keyword">return</span> cache[n-<span class="hljs-number">1</span>] + cache[n-<span class="hljs-number">2</span>];<br>    &#125;;<br>  &#125;)();<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村15 - Directions Reduction</title>
    <link href="/2020/09/30/codewars15/"/>
    <url>/2020/09/30/codewars15/</url>
    
    <content type="html"><![CDATA[<h1 id="15-Directions-Reduction"><a href="#15-Directions-Reduction" class="headerlink" title="15 - Directions Reduction"></a>15 - Directions Reduction</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>Once upon a time, on a way through the old wild mountainous west,…<br>… a man was given directions to go from one point to another. The directions were “NORTH”, “SOUTH”, “WEST”, “EAST”. Clearly “NORTH” and “SOUTH” are opposite, “WEST” and “EAST” too.</p><p>Going to one direction and coming back the opposite direction right away is a needless effort. Since this is the wild west, with dreadfull weather and not much water, it’s important to save yourself some energy, otherwise you might die of thirst!</p><p>How I crossed a mountain desert the smart way.<br>The directions given to the man are, for example, the following (depending on the language):</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">[<span class="hljs-string">&quot;NORTH&quot;</span>, <span class="hljs-string">&quot;SOUTH&quot;</span>, <span class="hljs-string">&quot;SOUTH&quot;</span>, <span class="hljs-string">&quot;EAST&quot;</span>, <span class="hljs-string">&quot;WEST&quot;</span>, <span class="hljs-string">&quot;NORTH&quot;</span>, <span class="hljs-string">&quot;WEST&quot;</span>].<br></code></pre></td></tr></table></figure><p>You can immediatly see that going “NORTH” and immediately “SOUTH” is not reasonable, better stay to the same place! So the task is to give to the man a simplified version of the plan. A better plan in this case is simply:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">[<span class="hljs-string">&quot;WEST&quot;</span>]<br></code></pre></td></tr></table></figure><p>Other examples:</p><p>In <code>[&quot;NORTH&quot;, &quot;SOUTH&quot;, &quot;EAST&quot;, &quot;WEST&quot;]</code>, the direction “NORTH” + “SOUTH” is going north and coming back right away.</p><p>The path becomes <code>[&quot;EAST&quot;, &quot;WEST&quot;]</code>, now “EAST” and “WEST” annihilate each other, therefore, the final result is [] (nil in Clojure).</p><p>In [“NORTH”, “EAST”, “WEST”, “SOUTH”, “WEST”, “WEST”], “NORTH” and “SOUTH” are not directly opposite but they become directly opposite after the reduction of “EAST” and “WEST” so the whole path is reducible to [“WEST”, “WEST”].</p><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dirReduc</span><span class="hljs-params">(arr)</span></span><br>  ... your code ...<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby">a = [<span class="hljs-string">&quot;NORTH&quot;</span>, <span class="hljs-string">&quot;SOUTH&quot;</span>, <span class="hljs-string">&quot;SOUTH&quot;</span>, <span class="hljs-string">&quot;EAST&quot;</span>, <span class="hljs-string">&quot;WEST&quot;</span>, <span class="hljs-string">&quot;NORTH&quot;</span>, <span class="hljs-string">&quot;WEST&quot;</span>]<br>Test.assert_equals(dirReduc(a), [<span class="hljs-string">&quot;WEST&quot;</span>])<br>u=[<span class="hljs-string">&quot;NORTH&quot;</span>, <span class="hljs-string">&quot;WEST&quot;</span>, <span class="hljs-string">&quot;SOUTH&quot;</span>, <span class="hljs-string">&quot;EAST&quot;</span>]<br>Test.assert_equals(dirReduc(u), [<span class="hljs-string">&quot;NORTH&quot;</span>, <span class="hljs-string">&quot;WEST&quot;</span>, <span class="hljs-string">&quot;SOUTH&quot;</span>, <span class="hljs-string">&quot;EAST&quot;</span>])<br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dirReduc</span>(<span class="hljs-params">arr</span>)</span>&#123;<br>  <span class="hljs-comment">// ...</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Test.assertSimilar(dirReduc([<span class="hljs-string">&quot;NORTH&quot;</span>, <span class="hljs-string">&quot;SOUTH&quot;</span>, <span class="hljs-string">&quot;SOUTH&quot;</span>, <span class="hljs-string">&quot;EAST&quot;</span>, <span class="hljs-string">&quot;WEST&quot;</span>, <span class="hljs-string">&quot;NORTH&quot;</span>, <span class="hljs-string">&quot;WEST&quot;</span>]), [<span class="hljs-string">&quot;WEST&quot;</span>])<br>Test.assertSimilar(dirReduc([<span class="hljs-string">&quot;NORTH&quot;</span>, <span class="hljs-string">&quot;WEST&quot;</span>, <span class="hljs-string">&quot;SOUTH&quot;</span>, <span class="hljs-string">&quot;EAST&quot;</span>]), [<span class="hljs-string">&quot;NORTH&quot;</span>, <span class="hljs-string">&quot;WEST&quot;</span>, <span class="hljs-string">&quot;SOUTH&quot;</span>, <span class="hljs-string">&quot;EAST&quot;</span>])<br>Test.assertSimilar(dirReduc([<span class="hljs-string">&quot;NORTH&quot;</span>, <span class="hljs-string">&quot;SOUTH&quot;</span>, <span class="hljs-string">&quot;EAST&quot;</span>, <span class="hljs-string">&quot;WEST&quot;</span>, <span class="hljs-string">&quot;EAST&quot;</span>, <span class="hljs-string">&quot;WEST&quot;</span>]), [])<br></code></pre></td></tr></table></figure><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): 這邊的想法要稍微想一下，如果是南北、東西互相抵銷的時候必須不能顯示，這就會先要一開始定義然後去比比對了。<br>想法(2): 比對宣告的陣列中，如果進來的值對應到相同的，必須被移除在陣列中，沒有的話，則會被推進去。</p><p><img src="https://ithelp.ithome.com.tw/upload/images/20200930/20120826EqNRv3mPkX.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20200930/20120826EqNRv3mPkX.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/j3aqw_0cNQM">Unsplash Aleks Marinkovic</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://apidock.com/ruby/Array/pop">Ruby - apidock Pop</a></li><li><a href="https://apidock.com/ruby/Array/push">Ruby - apidock Push</a></li></ul></li><li>JavaScript<ul><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/pop">JS - MDN Array.prototype.pop()</a></li><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/push">JS - MDN Array.prototype.push()</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br>OPPOSITE = &#123;<br>  <span class="hljs-string">&quot;NORTH&quot;</span> =&gt; <span class="hljs-string">&quot;SOUTH&quot;</span>,<br>  <span class="hljs-string">&quot;SOUTH&quot;</span> =&gt; <span class="hljs-string">&quot;NORTH&quot;</span>,<br>  <span class="hljs-string">&quot;EAST&quot;</span>  =&gt; <span class="hljs-string">&quot;WEST&quot;</span>,<br>  <span class="hljs-string">&quot;WEST&quot;</span>  =&gt; <span class="hljs-string">&quot;EAST&quot;</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dirReduc</span><span class="hljs-params">(arr)</span></span><br>  result = []<br>  arr.each <span class="hljs-keyword">do</span> <span class="hljs-params">|dir|</span><br>    OPPOSITE[dir] == result.last ? result.pop : result.push(dir)<br>  <span class="hljs-keyword">end</span><br>  result<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-keyword">const</span> OPPOSITE = &#123;<br>  <span class="hljs-string">&quot;NORTH&quot;</span>: <span class="hljs-string">&quot;SOUTH&quot;</span>,<br>  <span class="hljs-string">&quot;SOUTH&quot;</span>: <span class="hljs-string">&quot;NORTH&quot;</span>,<br>  <span class="hljs-string">&quot;EAST&quot;</span> : <span class="hljs-string">&quot;WEST&quot;</span>,<br>  <span class="hljs-string">&quot;WEST&quot;</span> : <span class="hljs-string">&quot;EAST&quot;</span>,<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dirReduc</span>(<span class="hljs-params">arr</span>)</span>&#123;<br>  <span class="hljs-keyword">return</span> arr.reduce(<span class="hljs-function">(<span class="hljs-params">result, item</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (OPPOSITE[item] === result[result.length - <span class="hljs-number">1</span>]) &#123;<br>      result.pop();<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      result.push(item);<br>    &#125;<br>    <span class="hljs-keyword">return</span> result;<br>  &#125;, []);<br>&#125;<br><br><span class="hljs-comment">// Solution 2</span><br><span class="hljs-keyword">const</span> OPPOSITE = &#123;<br>  <span class="hljs-string">&quot;NORTH&quot;</span>: <span class="hljs-string">&quot;SOUTH&quot;</span>,<br>  <span class="hljs-string">&quot;SOUTH&quot;</span>: <span class="hljs-string">&quot;NORTH&quot;</span>,<br>  <span class="hljs-string">&quot;EAST&quot;</span> : <span class="hljs-string">&quot;WEST&quot;</span>,<br>  <span class="hljs-string">&quot;WEST&quot;</span> : <span class="hljs-string">&quot;EAST&quot;</span>,<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dirReduc</span>(<span class="hljs-params">arr</span>)</span>&#123;<br>  <span class="hljs-keyword">return</span> arr.reduce(<span class="hljs-function">(<span class="hljs-params">result, item</span>) =&gt;</span> &#123;<br>    OPPOSITE[item] === result[result.length - <span class="hljs-number">1</span>] ? result.pop() : result.push(item)<br>    <span class="hljs-keyword">return</span> result;<br>  &#125;, []);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村14 - Simple Pig Latin</title>
    <link href="/2020/09/29/codewars14/"/>
    <url>/2020/09/29/codewars14/</url>
    
    <content type="html"><![CDATA[<h1 id="14-Simple-Pig-Latin"><a href="#14-Simple-Pig-Latin" class="headerlink" title="14 - Simple Pig Latin"></a>14 - Simple Pig Latin</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>Move the first letter of each word to the end of it, then add “ay” to the end of the word. Leave punctuation marks untouched.</p><p>Examples</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">pig_it(&#x27;Pig latin is cool&#x27;) # igPay atinlay siay oolcay<br>pig_it(&#x27;Hello world !&#x27;)     # elloHay orldway !<br></code></pre></td></tr></table></figure><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby">def pig_it text<br>  <span class="hljs-comment"># ...</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ruby">Test.assert_equals(pig_it(<span class="hljs-string">&#x27;Pig latin is cool&#x27;</span>),<span class="hljs-string">&#x27;igPay atinlay siay oolcay&#x27;</span>)<br>Test.assert_equals(pig_it(<span class="hljs-string">&#x27;This is my string&#x27;</span>),<span class="hljs-string">&#x27;hisTay siay ymay tringsay&#x27;</span>);<br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">pigIt</span>(<span class="hljs-params">str</span>)</span>&#123;<br>  <span class="hljs-comment">//Code here</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Test.assertEquals(pigIt(<span class="hljs-string">&#x27;Pig latin is cool&#x27;</span>),<span class="hljs-string">&#x27;igPay atinlay siay oolcay&#x27;</span>)<br>Test.assertEquals(pigIt(<span class="hljs-string">&#x27;This is my string&#x27;</span>),<span class="hljs-string">&#x27;hisTay siay ymay tringsay&#x27;</span>)<br></code></pre></td></tr></table></figure><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): 第一個想法就是 <code>regex</code> 直接切兩群，然後把第一群接到第二群後面再加上 <code>ay</code> 的字<br>想法(2): 不過畢竟 regex 如果像我ㄧ樣爛，就想說可以繞開看看，把第一個字組在 slice 掉第一個字後，然後再加上 <code>ay</code> 也是可以（傳入值有可能有<code>驚嘆號!</code>、<code>問號?</code>）</p><p><img src="https://ithelp.ithome.com.tw/upload/images/20200929/201208261punaj8vOx.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20200929/201208261punaj8vOx.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/SL5d_8ywAAA">Unsplash Glenn Carstens-Peters</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://apidock.com/ruby/String/gsub">Ruby - apidock Gsub</a></li></ul></li><li>JavaScript<ul><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/slice">JS - MDN String.prototype.slice()</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charAt">JS - MDN String.prototype.charAt()</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br>def pig_it text<br>  text.gsub(<span class="hljs-regexp">/(\w)(\w+)*/</span>, <span class="hljs-string">&#x27;\2\1ay&#x27;</span>)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">pigIt</span>(<span class="hljs-params">str</span>)</span>&#123;<br>  <span class="hljs-keyword">let</span> <span class="hljs-built_in">Array</span> = [];<br>  <span class="hljs-keyword">let</span> split = str.split(<span class="hljs-string">&#x27; &#x27;</span>);<br>  <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; split.length; i++) &#123;<br>    <span class="hljs-keyword">if</span> (split[i] != <span class="hljs-string">&#x27;?&#x27;</span> &amp;&amp; split[i] != <span class="hljs-string">&#x27;!&#x27;</span>) &#123;<br>      <span class="hljs-built_in">Array</span>.push(split[i].slice(<span class="hljs-number">1</span>) + split[i].charAt(<span class="hljs-number">0</span>) + <span class="hljs-string">&#x27;ay&#x27;</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-built_in">Array</span>.push(split[i]);<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Array</span>.join(<span class="hljs-string">&#x27; &#x27;</span>);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村13 - int32 to IPv4</title>
    <link href="/2020/09/28/codewars13/"/>
    <url>/2020/09/28/codewars13/</url>
    
    <content type="html"><![CDATA[<h1 id="13-int32-to-IPv4"><a href="#13-int32-to-IPv4" class="headerlink" title="13 - int32 to IPv4"></a>13 - int32 to IPv4</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>Take the following IPv4 address: <code>128.32.10.1</code></p><p>This address has 4 octets where each octet is a single byte (or 8 bits).</p><ul><li>1st octet 128 has the binary representation: <code>10000000</code></li><li>2nd octet 32 has the binary representation: <code>00100000</code></li><li>3rd octet 10 has the binary representation: <code>00001010</code></li><li>4th octet 1 has the binary representation: <code>00000001</code></li></ul><p>So <code>128.32.10.1</code> == <code>10000000.00100000.00001010.00000001</code></p><p>Because the above IP address has 32 bits, we can represent it as the unsigned 32 bit number: <code>2149583361</code></p><p>Complete the function that takes an unsigned 32 bit number and returns a string representation of its IPv4 address.</p><p>Examples</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-number">2149583361</span> ==&gt; <span class="hljs-string">&quot;128.32.10.1&quot;</span><br><span class="hljs-number">32</span>         ==&gt; <span class="hljs-string">&quot;0.0.0.32&quot;</span><br><span class="hljs-number">0</span>          ==&gt; <span class="hljs-string">&quot;0.0.0.0&quot;</span><br></code></pre></td></tr></table></figure><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">int32_to_ip</span><span class="hljs-params">(int32)</span></span><br>  <span class="hljs-comment"># your solution</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby">Test.assert_equals(int32_to_ip(<span class="hljs-number">2154959208</span>), <span class="hljs-string">&quot;128.114.17.104&quot;</span>) <br>Test.assert_equals(int32_to_ip(<span class="hljs-number">0</span>), <span class="hljs-string">&quot;0.0.0.0&quot;</span>)<br>Test.assert_equals(int32_to_ip(<span class="hljs-number">2149583361</span>), <span class="hljs-string">&quot;128.32.10.1&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">int32ToIp</span>(<span class="hljs-params">int32</span>)</span>&#123;<br>  <span class="hljs-comment">//...</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Test.assertEquals( int32ToIp(<span class="hljs-number">2154959208</span>), <span class="hljs-string">&quot;128.114.17.104&quot;</span>, <span class="hljs-string">&quot;wrong ip for interger: 2154959208&quot;</span>) <br>Test.assertEquals( int32ToIp(<span class="hljs-number">0</span>), <span class="hljs-string">&quot;0.0.0.0&quot;</span>, <span class="hljs-string">&quot;wrong ip for integer: 0&quot;</span>)<br>Test.assertEquals( int32ToIp(<span class="hljs-number">2149583361</span>), <span class="hljs-string">&quot;128.32.10.1&quot;</span>, <span class="hljs-string">&quot;wrong ip for integer: 2149583361&quot;</span>)<br></code></pre></td></tr></table></figure><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): 先需要去了解 <a href="https://zh.wikipedia.org/wiki/IPv4">IPv4</a> 是什麼<br>想法(2): 轉為 <code>binary</code> 後還要 <code>8</code> 個為一群，並且補 <code>0</code></p><p><img src="https://ithelp.ithome.com.tw/upload/images/20200928/20120826hZNjejxq8g.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20200928/20120826hZNjejxq8g.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/RYyr-k3Ysqg">Unsplash Damian Zaleski</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://apidock.com/ruby/String/rjust">Ruby - apidock Rjust</a></li><li><a href="https://apidock.com/ruby/String/scan">Ruby - apidock Scan</a></li><li><a href="https://apidock.com/ruby/Socket">Ruby - apidock Socket</a></li><li><a href="https://ruby-doc.org/stdlib-2.5.1/libdoc/ipaddr/rdoc/IPAddr.html">Ruby - rubydocs IPAddr</a></li></ul></li><li>JavaScript<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart">JS - MDN String.prototype.padStart()</a></li><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/String/match">JS - MDN String.prototype.match()</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">int32_to_ip</span><span class="hljs-params">(int32)</span></span><br>  int32.to_s(<span class="hljs-number">2</span>)<br>       .rjust(<span class="hljs-number">32</span>, <span class="hljs-string">&#x27;0&#x27;</span>)<br>       .scan(<span class="hljs-regexp">/.&#123;8&#125;/</span>)<br>       .map&#123; <span class="hljs-params">|s|</span> s.to_i(<span class="hljs-number">2</span>) &#125;<br>       .join(<span class="hljs-string">&#x27;.&#x27;</span>)<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 2</span><br><span class="hljs-keyword">require</span> <span class="hljs-string">&#x27;ipaddr&#x27;</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">int32_to_ip</span><span class="hljs-params">(int32)</span></span><br>  IPAddr.new(int32, Socket::AF_INET).to_s<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">int32ToIp</span>(<span class="hljs-params">int32</span>)</span>&#123;<br>  <span class="hljs-keyword">return</span> int32.toString(<span class="hljs-number">2</span>)<br>              .padStart(<span class="hljs-number">32</span>, <span class="hljs-string">&#x27;0&#x27;</span>)<br>              .match(<span class="hljs-regexp">/([01]&#123;8&#125;)/g</span>)<br>              .map(<span class="hljs-function"><span class="hljs-params">x</span> =&gt;</span> <span class="hljs-built_in">parseInt</span>(x, <span class="hljs-number">2</span>))<br>              .join(<span class="hljs-string">&#x27;.&#x27;</span>)<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村12 - Greed is Dice</title>
    <link href="/2020/09/27/codewars12/"/>
    <url>/2020/09/27/codewars12/</url>
    
    <content type="html"><![CDATA[<h1 id="12-Greed-is-Dice"><a href="#12-Greed-is-Dice" class="headerlink" title="12 - Greed is Dice"></a>12 - Greed is Dice</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>Greed is a dice game played with five six-sided dice. Your mission, should you choose to accept it, is to score a throw according to these rules. You will always be given an array with five six-sided dice values.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Three <span class="hljs-number">1</span><span class="hljs-string">&#x27;s =&gt; 1000 points</span><br><span class="hljs-string">Three 6&#x27;</span>s =&gt;  <span class="hljs-number">600</span> points<br>Three <span class="hljs-number">5</span><span class="hljs-string">&#x27;s =&gt;  500 points</span><br><span class="hljs-string">Three 4&#x27;</span>s =&gt;  <span class="hljs-number">400</span> points<br>Three <span class="hljs-number">3</span><span class="hljs-string">&#x27;s =&gt;  300 points</span><br><span class="hljs-string">Three 2&#x27;</span>s =&gt;  <span class="hljs-number">200</span> points<br>One   <span class="hljs-number">1</span>   =&gt;  <span class="hljs-number">100</span> points<br>One   <span class="hljs-number">5</span>   =&gt;   <span class="hljs-number">50</span> point<br></code></pre></td></tr></table></figure><p>A single die can only be counted once in each roll. For example, a given “5” can only count as part of a triplet (contributing to the 500 points) or as a single 50 points, but not both in the same roll.</p><p>Example scoring</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Throw       Score<br>---------   ------------------<br><span class="hljs-number">5</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span> <span class="hljs-number">1</span>   <span class="hljs-number">250</span>:  <span class="hljs-number">50</span> (<span class="hljs-keyword">for</span> the <span class="hljs-number">5</span>) + <span class="hljs-number">2</span> * <span class="hljs-number">100</span> (<span class="hljs-keyword">for</span> the 1s)<br><span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">1</span>   <span class="hljs-number">1100</span>: <span class="hljs-number">1000</span> (<span class="hljs-keyword">for</span> three 1s) + <span class="hljs-number">100</span> (<span class="hljs-keyword">for</span> the other <span class="hljs-number">1</span>)<br><span class="hljs-number">2</span> <span class="hljs-number">4</span> <span class="hljs-number">4</span> <span class="hljs-number">5</span> <span class="hljs-number">4</span>   <span class="hljs-number">450</span>:  <span class="hljs-number">400</span> (<span class="hljs-keyword">for</span> three 4s) + <span class="hljs-number">50</span> (<span class="hljs-keyword">for</span> the <span class="hljs-number">5</span>)<br></code></pre></td></tr></table></figure><p>In some languages, it is possible to mutate the input to the function. This is something that you should never do. If you mutate the input, you will not be able to pass all the tests.</p><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">score</span><span class="hljs-params">( dice )</span></span><br>  <span class="hljs-comment"># Fill me in!</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ruby">describe <span class="hljs-string">&quot;Scorer Function&quot;</span> <span class="hljs-keyword">do</span><br>  it <span class="hljs-string">&quot;should value this as worthless&quot;</span> <span class="hljs-keyword">do</span><br>    Test.expect( score( [<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">2</span>] ) == <span class="hljs-number">0</span>,   <span class="hljs-string">&quot;Should be 0 :-(&quot;</span> );<br>  <span class="hljs-keyword">end</span><br>  <br>  it <span class="hljs-string">&quot;should value this triplet correctly&quot;</span> <span class="hljs-keyword">do</span><br>    Test.expect( score( [<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>] ) == <span class="hljs-number">200</span>, <span class="hljs-string">&quot;Should be 200&quot;</span> );<br>  <span class="hljs-keyword">end</span><br>  <br>  it <span class="hljs-string">&quot;should value this mixed set correctly&quot;</span> <span class="hljs-keyword">do</span><br>    Test.expect( score( [<span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>] ) == <span class="hljs-number">450</span>, <span class="hljs-string">&quot;Should be 450&quot;</span> );<br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">score</span>(<span class="hljs-params"> dice </span>) </span>&#123;<br>  <span class="hljs-comment">// Fill me in!</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript">describe( <span class="hljs-string">&quot;Scorer Function&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>  it( <span class="hljs-string">&quot;should value this as worthless&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>    Test.expect( score( [<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">2</span>] ) == <span class="hljs-number">0</span>,   <span class="hljs-string">&quot;Should be 0 :-(&quot;</span> );<br>  &#125;);<br>  <br>  it( <span class="hljs-string">&quot;should value this triplet correctly&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>    Test.expect( score( [<span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>] ) == <span class="hljs-number">400</span>, <span class="hljs-string">&quot;Should be 400&quot;</span> );<br>  &#125;);<br>  <br>  it( <span class="hljs-string">&quot;should value this mixed set correctly&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>    Test.expect( score( [<span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>] ) == <span class="hljs-number">450</span>, <span class="hljs-string">&quot;Should be 450&quot;</span> );<br>  &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1):<br>想法(2):</p><p>圖片—<br>圖片來源：<a href="https://unsplash.com/photos/SYTO3xs06fU">Unsplash Marvin Meyer</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://apidock.com/ruby/String/start_with%3F">Ruby - apidock Start_with?</a></li><li><a href="https://apidock.com/ruby/String/gsub">Ruby - apidock Gsub</a></li><li><a href="https://docs.ruby-lang.org/en/2.1.0/URI.html">Ruby - rubydocs URI</a></li></ul></li><li>JavaScript<ul><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/String/replace">JS - MDN String.prototype.replace()</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">score</span><span class="hljs-params">(dice)</span></span><br>  [<br>    dice.count(<span class="hljs-number">1</span>) / <span class="hljs-number">3</span> * <span class="hljs-number">1000</span>,<br>    dice.count(<span class="hljs-number">6</span>) / <span class="hljs-number">3</span> * <span class="hljs-number">600</span>,<br>    dice.count(<span class="hljs-number">5</span>) / <span class="hljs-number">3</span> * <span class="hljs-number">500</span>,<br>    dice.count(<span class="hljs-number">4</span>) / <span class="hljs-number">3</span> * <span class="hljs-number">400</span>,<br>    dice.count(<span class="hljs-number">3</span>) / <span class="hljs-number">3</span> * <span class="hljs-number">300</span>,<br>    dice.count(<span class="hljs-number">2</span>) / <span class="hljs-number">3</span> * <span class="hljs-number">200</span>,<br>    dice.count(<span class="hljs-number">1</span>) % <span class="hljs-number">1</span> * <span class="hljs-number">100</span>,<br>    dice.count(<span class="hljs-number">5</span>) % <span class="hljs-number">5</span> * <span class="hljs-number">50</span>,<br>  ].reduce(<span class="hljs-symbol">:+</span>)<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 2</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">score</span> <span class="hljs-params">(dice)</span></span><br>  sum = <span class="hljs-number">0</span><br>  (<span class="hljs-number">1</span>..<span class="hljs-number">6</span>).each <span class="hljs-keyword">do</span> <span class="hljs-params">|i|</span><br>    count = dice.select &#123; <span class="hljs-params">|d|</span> d == i &#125;.size<br><br>    sum += (i==<span class="hljs-number">1</span> ? <span class="hljs-number">1000</span> : i*<span class="hljs-number">100</span>) <span class="hljs-keyword">if</span> count &gt;= <span class="hljs-number">3</span><br>    sum += (count % <span class="hljs-number">3</span>)  * <span class="hljs-number">100</span>    <span class="hljs-keyword">if</span> i == <span class="hljs-number">1</span><br>    sum += (count % <span class="hljs-number">3</span>)  *  <span class="hljs-number">50</span>    <span class="hljs-keyword">if</span> i == <span class="hljs-number">5</span><br>  <span class="hljs-keyword">end</span><br><br>  sum<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">score</span>(<span class="hljs-params">dice</span>) </span>&#123;<br>  <span class="hljs-keyword">var</span> sum = <span class="hljs-number">0</span><br>  <span class="hljs-keyword">for</span>(i=<span class="hljs-number">1</span>; i&lt;=<span class="hljs-number">6</span>; i++)&#123;<br>    <span class="hljs-keyword">var</span> count = dice.filter( <span class="hljs-function"><span class="hljs-params">d</span> =&gt;</span> d == i).length<br>    <span class="hljs-keyword">if</span>(count &gt;= <span class="hljs-number">3</span>)&#123;<br>      sum += (i==<span class="hljs-number">1</span> ? <span class="hljs-number">1000</span> : i*<span class="hljs-number">100</span>)<br>    &#125;<br>    <span class="hljs-keyword">if</span>(i == <span class="hljs-number">1</span>)&#123;<br>      sum += (count % <span class="hljs-number">3</span>) * <span class="hljs-number">100</span> <br>    &#125;<br>    <span class="hljs-keyword">if</span>(i == <span class="hljs-number">5</span>)&#123;<br>      sum += (count % <span class="hljs-number">3</span>) * <span class="hljs-number">50</span><br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> sum<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村11 - Extract the domain name from a URL</title>
    <link href="/2020/09/26/codewars11/"/>
    <url>/2020/09/26/codewars11/</url>
    
    <content type="html"><![CDATA[<h1 id="11-Extract-the-domain-name-from-a-URL"><a href="#11-Extract-the-domain-name-from-a-URL" class="headerlink" title="11 - Extract the domain name from a URL"></a>11 - Extract the domain name from a URL</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>Write a function that when given a URL as a string, parses out just the domain name and returns it as a string. For example:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">domain_name(<span class="hljs-string">&quot;http://github.com/carbonfive/raygun&quot;</span>) == <span class="hljs-string">&quot;github&quot;</span> <br>domain_name(<span class="hljs-string">&quot;http://www.zombie-bites.com&quot;</span>) == <span class="hljs-string">&quot;zombie-bites&quot;</span><br>domain_name(<span class="hljs-string">&quot;https://www.cnet.com&quot;</span>) == <span class="hljs-string">&quot;cnet&quot;</span><br></code></pre></td></tr></table></figure><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">domain_name</span><span class="hljs-params">(url)</span></span><br>  <span class="hljs-comment"># return just the domain name</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby">Test.assert_equals(domain_name(<span class="hljs-string">&quot;http://google.com&quot;</span>), <span class="hljs-string">&quot;google&quot;</span>)<br>Test.assert_equals(domain_name(<span class="hljs-string">&quot;http://google.co.jp&quot;</span>), <span class="hljs-string">&quot;google&quot;</span>)<br>Test.assert_equals(domain_name(<span class="hljs-string">&quot;www.xakep.ru&quot;</span>), <span class="hljs-string">&quot;xakep&quot;</span>)<br>Test.assert_equals(domain_name(<span class="hljs-string">&quot;https://youtube.com&quot;</span>), <span class="hljs-string">&quot;youtube&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">domainName</span>(<span class="hljs-params">url</span>)</span>&#123;<br>  <span class="hljs-comment">//your code here</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Test.assertEquals(domainName(<span class="hljs-string">&quot;http://google.com&quot;</span>), <span class="hljs-string">&quot;google&quot;</span>);<br>Test.assertEquals(domainName(<span class="hljs-string">&quot;http://google.co.jp&quot;</span>), <span class="hljs-string">&quot;google&quot;</span>);<br>Test.assertEquals(domainName(<span class="hljs-string">&quot;www.xakep.ru&quot;</span>), <span class="hljs-string">&quot;xakep&quot;</span>);<br>Test.assertEquals(domainName(<span class="hljs-string">&quot;https://youtube.com&quot;</span>), <span class="hljs-string">&quot;youtube&quot;</span>);<br></code></pre></td></tr></table></figure><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): 原本其實是從 <code>URI</code> 的方式寫完的，不過發現要處理的東西有點多，後來覺得 <code>start_with</code> 來解決就可以，也不用 <code>regex</code> 去 metch 所有條件（regex 就爛）<br>想法(2): 用 <code>gsub</code> 把所有要篩選的條件寫進來也不錯</p><p><img src="https://ithelp.ithome.com.tw/upload/images/20200926/20120826iQVDzANvdd.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20200926/20120826iQVDzANvdd.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/SYTO3xs06fU">Unsplash Marvin Meyer</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://apidock.com/ruby/String/start_with%3F">Ruby - apidock Start_with?</a></li><li><a href="https://apidock.com/ruby/String/gsub">Ruby - apidock Gsub</a></li><li><a href="https://docs.ruby-lang.org/en/2.1.0/URI.html">Ruby - rubydocs URI</a></li></ul></li><li>JavaScript<ul><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/String/replace">JS - MDN String.prototype.replace()</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">domain_name</span><span class="hljs-params">(url)</span></span><br>  url = url.start_with?(<span class="hljs-string">&#x27;www.&#x27;</span>) ? url.split(<span class="hljs-string">&#x27;www.&#x27;</span>).last : url.split(<span class="hljs-string">&#x27;//&#x27;</span>).last<br>  url.split(<span class="hljs-string">&#x27;.&#x27;</span>).first<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 2</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">domain_name</span><span class="hljs-params">(url)</span></span><br>  url.start_with?(<span class="hljs-string">&#x27;www.&#x27;</span>) ? url.split(<span class="hljs-string">&#x27;www.&#x27;</span>).last.split(<span class="hljs-string">&#x27;.&#x27;</span>).first<br>                          : url.split(<span class="hljs-string">&#x27;//&#x27;</span>).last.split(<span class="hljs-string">&#x27;.&#x27;</span>).first<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 3</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">domain_name</span><span class="hljs-params">(url)</span></span><br>  url.gsub(<span class="hljs-string">&#x27;http://&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br>     .gsub(<span class="hljs-string">&#x27;https://&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br>     .gsub(<span class="hljs-string">&#x27;www.&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br>     .split(<span class="hljs-string">&quot;.&quot;</span>)[<span class="hljs-number">0</span>]<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1 gsub to replace XDDD</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">domainName</span>(<span class="hljs-params">url</span>)</span>&#123;<br>  <span class="hljs-keyword">return</span> url.replace(<span class="hljs-string">&#x27;http://&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br>            .replace(<span class="hljs-string">&#x27;https://&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br>            .replace(<span class="hljs-string">&#x27;www.&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br>            .split(<span class="hljs-string">&#x27;.&#x27;</span>)[<span class="hljs-number">0</span>];<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村10 - Playing with digits</title>
    <link href="/2020/09/25/codewars10/"/>
    <url>/2020/09/25/codewars10/</url>
    
    <content type="html"><![CDATA[<h1 id="10-Playing-with-digits"><a href="#10-Playing-with-digits" class="headerlink" title="10 - Playing with digits"></a>10 - Playing with digits</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>Some numbers have funny properties. For example:</p><blockquote><p>89 –&gt; 8¹ + 9² = 89 * 1</p></blockquote><blockquote><p>695 –&gt; 6² + 9³ + 5⁴= 1390 = 695 * 2</p></blockquote><blockquote><p>46288 –&gt; 4³ + 6⁴+ 2⁵ + 8⁶ + 8⁷ = 2360688 = 46288 * 51</p></blockquote><p>Given a positive integer n written as abcd… (a, b, c, d… being digits) and a positive integer p</p><blockquote><p>we want to find a positive integer k, if it exists, such as the sum of the digits of n taken to the successive powers of p is equal to k * n.</p></blockquote><p>In other words:</p><blockquote><p>Is there an integer k such as : (a ^ p + b ^ (p+1) + c ^(p+2) + d ^ (p+3) + …) = n * k</p></blockquote><p>If it is the case we will return k, if not return -1.</p><p>Note: n and p will always be given as strictly positive integers.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">dig_pow(<span class="hljs-number">89</span>, <span class="hljs-number">1</span>) should <span class="hljs-keyword">return</span> <span class="hljs-number">1</span> since <span class="hljs-number">8</span>¹ + <span class="hljs-number">9</span>² = <span class="hljs-number">89</span> = <span class="hljs-number">89</span> * <span class="hljs-number">1</span><br>dig_pow(<span class="hljs-number">92</span>, <span class="hljs-number">1</span>) should <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span> since there is no k such <span class="hljs-keyword">as</span> <span class="hljs-number">9</span>¹ + <span class="hljs-number">2</span>² equals <span class="hljs-number">92</span> * k<br>dig_pow(<span class="hljs-number">695</span>, <span class="hljs-number">2</span>) should <span class="hljs-keyword">return</span> <span class="hljs-number">2</span> since <span class="hljs-number">6</span>² + <span class="hljs-number">9</span>³ + <span class="hljs-number">5</span>⁴= <span class="hljs-number">1390</span> = <span class="hljs-number">695</span> * <span class="hljs-number">2</span><br>dig_pow(<span class="hljs-number">46288</span>, <span class="hljs-number">3</span>) should <span class="hljs-keyword">return</span> <span class="hljs-number">51</span> since <span class="hljs-number">4</span>³ + <span class="hljs-number">6</span>⁴+ <span class="hljs-number">2</span>⁵ + <span class="hljs-number">8</span>⁶ + <span class="hljs-number">8</span>⁷ = <span class="hljs-number">2360688</span> = <span class="hljs-number">46288</span> * <span class="hljs-number">51</span><br></code></pre></td></tr></table></figure><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dig_pow</span><span class="hljs-params">(n, p)</span></span><br>  <span class="hljs-comment"># your code</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby">Test.assert_equals(dig_pow(<span class="hljs-number">89</span>, <span class="hljs-number">1</span>), <span class="hljs-number">1</span>)<br>Test.assert_equals(dig_pow(<span class="hljs-number">92</span>, <span class="hljs-number">1</span>), -<span class="hljs-number">1</span>)<br>Test.assert_equals(dig_pow(<span class="hljs-number">46288</span>, <span class="hljs-number">3</span>), <span class="hljs-number">51</span>)<br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">digPow</span>(<span class="hljs-params">n, p</span>)</span>&#123;<br>  <span class="hljs-comment">// ...</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Test.assertEquals(digPow(<span class="hljs-number">89</span>, <span class="hljs-number">1</span>), <span class="hljs-number">1</span>)<br>Test.assertEquals(digPow(<span class="hljs-number">92</span>, <span class="hljs-number">1</span>), -<span class="hljs-number">1</span>)<br>Test.assertEquals(digPow(<span class="hljs-number">46288</span>, <span class="hljs-number">3</span>), <span class="hljs-number">51</span>)<br></code></pre></td></tr></table></figure><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): 與 <a href="https://ithelp.ithome.com.tw/articles/10241748">見習村07 - Sum of Digits / Digital Root</a> 中運用的 <code>recursive</code> 類似<br>想法(2): 要多判斷今天傳進來的值有可能不是從 <code>1</code> 開始，然後再給他平方後加總，再取餘數來判斷回傳值</p><p><img src="https://ithelp.ithome.com.tw/upload/images/20200925/20120826vy9gRts9zq.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20200925/20120826vy9gRts9zq.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/KQ0C6WtEGlo">Unsplash Jason Strull</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://apidock.com/ruby/Enumerator/with_index">Ruby - apidock With_index</a></li></ul></li><li>JavaScript<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/pow">JS - MDN Math.pow()</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dig_pow</span><span class="hljs-params">(n, p)</span></span><br>  number = n.to_s.split(<span class="hljs-string">&#x27;&#x27;</span>).map(&amp;<span class="hljs-symbol">:to_i</span>)<br>  sum = number.map.with_index(p) &#123; <span class="hljs-params">|num, idx|</span> num ** idx &#125;.reduce(<span class="hljs-symbol">:+</span>)<br>  sum % n == <span class="hljs-number">0</span> ? sum/n : -<span class="hljs-number">1</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dig_pow</span><span class="hljs-params">(n, p)</span></span><br>  sum = n.to_s.chars.map.with_index(p) &#123; <span class="hljs-params">|num, idx|</span> num.to_i ** idx &#125;.reduce(<span class="hljs-symbol">:+</span>)<br>  sum % n == <span class="hljs-number">0</span> ? sum / n : -<span class="hljs-number">1</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">digPow</span>(<span class="hljs-params">n, p</span>)</span>&#123;<br>  <span class="hljs-keyword">var</span> sum = n.toString().split(<span class="hljs-string">&#x27;&#x27;</span>)<br>             .map(<span class="hljs-function">(<span class="hljs-params">num, idx</span>) =&gt;</span> <span class="hljs-built_in">Math</span>.pow(<span class="hljs-built_in">parseInt</span>(num), idx+p))<br>             .reduce(<span class="hljs-function">(<span class="hljs-params">a,b</span>) =&gt;</span> a + b) / n;<br>  <span class="hljs-keyword">return</span> sum % <span class="hljs-number">1</span> == <span class="hljs-number">0</span> ? sum : -<span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村09 - Sums of Parts</title>
    <link href="/2020/09/24/codewars09/"/>
    <url>/2020/09/24/codewars09/</url>
    
    <content type="html"><![CDATA[<h1 id="09-Sums-of-Parts"><a href="#09-Sums-of-Parts" class="headerlink" title="09 - Sums of Parts"></a>09 - Sums of Parts</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>Let us consider this example (array written in general format):</p><p><code>ls = [0, 1, 3, 6, 10]</code></p><p>Its following parts:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript">  ls = [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">6</span>, <span class="hljs-number">10</span>]<br>  ls = [<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">6</span>, <span class="hljs-number">10</span>]<br>  ls = [<span class="hljs-number">3</span>, <span class="hljs-number">6</span>, <span class="hljs-number">10</span>]<br>  ls = [6, 10]# 09 - Sums of Parts<br><br>Don<span class="hljs-string">&#x27;t say so much, just coding...</span><br><span class="hljs-string"></span><br><span class="hljs-string">## Instruction</span><br><span class="hljs-string"></span><br><span class="hljs-string">Let us consider this example (array written in general format):</span><br><span class="hljs-string"></span><br><span class="hljs-string">`ls = [0, 1, 3, 6, 10]`</span><br><span class="hljs-string"></span><br><span class="hljs-string">Its following parts:</span><br><span class="hljs-string"></span><br><span class="hljs-string">```javascript</span><br><span class="hljs-string">  ls = [0, 1, 3, 6, 10]</span><br><span class="hljs-string">  ls = [1, 3, 6, 10]</span><br><span class="hljs-string">  ls = [3, 6, 10]</span><br><span class="hljs-string">  ls = [6, 10]</span><br><span class="hljs-string">  ls = [10]</span><br><span class="hljs-string">  ls = []</span><br></code></pre></td></tr></table></figure><p>The corresponding sums are (put together in a list): <code>[20, 20, 19, 16, 10, 0]</code></p><p>The function parts_sums (or its variants in other languages) will take as parameter a list ls and return a list of the sums of its parts as defined above.</p><p>Other Examples:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">ls = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>] <br>parts_sums(ls) -&gt; [<span class="hljs-number">21</span>, <span class="hljs-number">20</span>, <span class="hljs-number">18</span>, <span class="hljs-number">15</span>, <span class="hljs-number">11</span>, <span class="hljs-number">6</span>, <span class="hljs-number">0</span>]<br><br>ls = [<span class="hljs-number">744125</span>, <span class="hljs-number">935</span>, <span class="hljs-number">407</span>, <span class="hljs-number">454</span>, <span class="hljs-number">430</span>, <span class="hljs-number">90</span>, <span class="hljs-number">144</span>, <span class="hljs-number">6710213</span>, <span class="hljs-number">889</span>, <span class="hljs-number">810</span>, <span class="hljs-number">2579358</span>]<br>parts_sums(ls) -&gt; [<span class="hljs-number">10037855</span>, <span class="hljs-number">9293730</span>, <span class="hljs-number">9292795</span>, <span class="hljs-number">9292388</span>, <span class="hljs-number">9291934</span>, <span class="hljs-number">9291504</span>, <span class="hljs-number">9291414</span>, <span class="hljs-number">9291270</span>, <span class="hljs-number">2581057</span>, <span class="hljs-number">2580168</span>, <span class="hljs-number">2579358</span>, <span class="hljs-number">0</span>]<br></code></pre></td></tr></table></figure><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">parts_sums</span><span class="hljs-params">(ls)</span></span><br>  <span class="hljs-comment">#...</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs ruby">describe(<span class="hljs-string">&quot;parts_sums&quot;</span>) <span class="hljs-keyword">do</span><br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dotest</span><span class="hljs-params">(ls, expect)</span></span><br>    actual = parts_sums(ls)<br>    Test.assert_equals(actual, expect, <span class="hljs-string">&quot;&quot;</span>)<br>  <span class="hljs-keyword">end</span><br><br>  it(<span class="hljs-string">&quot;Basic tests&quot;</span>) <span class="hljs-keyword">do</span>    <br>    dotest([], [<span class="hljs-number">0</span>])<br>    dotest([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">6</span>, <span class="hljs-number">10</span>], [<span class="hljs-number">20</span>, <span class="hljs-number">20</span>, <span class="hljs-number">19</span>, <span class="hljs-number">16</span>, <span class="hljs-number">10</span>, <span class="hljs-number">0</span>])<br>    dotest([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>], [<span class="hljs-number">21</span>, <span class="hljs-number">20</span>, <span class="hljs-number">18</span>, <span class="hljs-number">15</span>, <span class="hljs-number">11</span>, <span class="hljs-number">6</span>, <span class="hljs-number">0</span>])<br>    dotest([<span class="hljs-number">744125</span>, <span class="hljs-number">935</span>, <span class="hljs-number">407</span>, <span class="hljs-number">454</span>, <span class="hljs-number">430</span>, <span class="hljs-number">90</span>, <span class="hljs-number">144</span>, <span class="hljs-number">6710213</span>, <span class="hljs-number">889</span>, <span class="hljs-number">810</span>, <span class="hljs-number">2579358</span>], <br>    [<span class="hljs-number">10037855</span>, <span class="hljs-number">9293730</span>, <span class="hljs-number">9292795</span>, <span class="hljs-number">9292388</span>, <span class="hljs-number">9291934</span>, <span class="hljs-number">9291504</span>, <span class="hljs-number">9291414</span>, <span class="hljs-number">9291270</span>, <span class="hljs-number">2581057</span>, <span class="hljs-number">2580168</span>, <span class="hljs-number">2579358</span>, <span class="hljs-number">0</span>])<br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">partsSums</span>(<span class="hljs-params">ls</span>) </span>&#123;<br>  <span class="hljs-comment">// your code</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> chai = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;chai&quot;</span>);<br><span class="hljs-keyword">const</span> assert = chai.assert;<br>chai.config.truncateThreshold = <span class="hljs-number">0</span>;<br><br>describe(<span class="hljs-string">&quot;partsSums&quot;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dotest</span>(<span class="hljs-params">ls, expect</span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> actual = partsSums(ls);<br>    assert.deepEqual(actual, expect);<br>&#125;<br><br>it(<span class="hljs-string">&quot;Basic tests&quot;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>    dotest([], [<span class="hljs-number">0</span>]);<br>    dotest([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">6</span>, <span class="hljs-number">10</span>], [<span class="hljs-number">20</span>, <span class="hljs-number">20</span>, <span class="hljs-number">19</span>, <span class="hljs-number">16</span>, <span class="hljs-number">10</span>, <span class="hljs-number">0</span>]); <br>    dotest([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>], [<span class="hljs-number">21</span>, <span class="hljs-number">20</span>, <span class="hljs-number">18</span>, <span class="hljs-number">15</span>, <span class="hljs-number">11</span>, <span class="hljs-number">6</span>, <span class="hljs-number">0</span>]); <br>    dotest([<span class="hljs-number">744125</span>, <span class="hljs-number">935</span>, <span class="hljs-number">407</span>, <span class="hljs-number">454</span>, <span class="hljs-number">430</span>, <span class="hljs-number">90</span>, <span class="hljs-number">144</span>, <span class="hljs-number">6710213</span>, <span class="hljs-number">889</span>, <span class="hljs-number">810</span>, <span class="hljs-number">2579358</span>], <br>            [<span class="hljs-number">10037855</span>, <span class="hljs-number">9293730</span>, <span class="hljs-number">9292795</span>, <span class="hljs-number">9292388</span>, <span class="hljs-number">9291934</span>, <span class="hljs-number">9291504</span>, <span class="hljs-number">9291414</span>, <span class="hljs-number">9291270</span>, <span class="hljs-number">2581057</span>, <span class="hljs-number">2580168</span>, <span class="hljs-number">2579358</span>, <span class="hljs-number">0</span>]); <br>&#125;)&#125;)<br></code></pre></td></tr></table></figure><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): 這題應該來算是數學題，傳進來的值（陣列）會先加總，並且減掉陣列第一項<br>想法(2): 直至把所有值都扣除完，會得到一個新的陣列，並帶有每次扣除的總和</p><p><img src="https://ithelp.ithome.com.tw/upload/images/20200924/20120826GsGyEU0V2s.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20200924/20120826GsGyEU0V2s.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/Hcfwew744z4">Unsplash Christin Hume</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby </li><li>JavaScript</li></ul><blockquote><p>之前前幾篇應該都介紹到可以用到的方法了，接下來的十天也開始挑戰更高一個階級的題目ouo</p></blockquote><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">parts_sums</span><span class="hljs-params">(ls)</span></span><br>  sum = ls.sum<br>  result = [sum]<br>  (<span class="hljs-number">0</span>...ls.size).each &#123; <span class="hljs-params">|index|</span><br>    result &lt;&lt; result.last - ls[index]<br>  &#125;<br>  result<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 2</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">parts_sums</span><span class="hljs-params">(ls)</span></span><br>  sum = ls.sum<br>  [sum] + ls.map&#123; <span class="hljs-params">|el|</span> sum -= el &#125;<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">partsSums</span>(<span class="hljs-params">ls</span>) </span>&#123;<br>  <span class="hljs-keyword">var</span> sum = ls.reduce(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a + b, <span class="hljs-number">0</span>);<br>  <span class="hljs-keyword">var</span> result = [sum];<br><br>  <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; ls.length; i++)&#123;<br>    result.push((result[result.length-<span class="hljs-number">1</span>]) - ls[i]);<br>  &#125;;<br>  <span class="hljs-keyword">return</span> result<br>&#125;<br></code></pre></td></tr></table></figure><p>  ls = [10]<br>  ls = []</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs dns"><br>The corresponding sums are (put together in a list): `[<span class="hljs-number">20</span>, <span class="hljs-number">20</span>, <span class="hljs-number">19</span>, <span class="hljs-number">16</span>, <span class="hljs-number">10</span>, <span class="hljs-number">0</span>]`<br><br>The function parts_sums (or its variants in other languages) will take as parameter a list ls and return a list of the sums of its parts as defined above.<br><br>Other Examples:<br><br>```javascript<br>  ls = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>] <br>  parts_sums(ls) -&gt; [<span class="hljs-number">21</span>, <span class="hljs-number">20</span>, <span class="hljs-number">18</span>, <span class="hljs-number">15</span>, <span class="hljs-number">11</span>, <span class="hljs-number">6</span>, <span class="hljs-number">0</span>]<br>  <br>  ls = [<span class="hljs-number">744125</span>, <span class="hljs-number">935</span>, <span class="hljs-number">407</span>, <span class="hljs-number">454</span>, <span class="hljs-number">430</span>, <span class="hljs-number">90</span>, <span class="hljs-number">144</span>, <span class="hljs-number">6710213</span>, <span class="hljs-number">889</span>, <span class="hljs-number">810</span>, <span class="hljs-number">2579358</span>]<br>  parts_sums(ls) -&gt; [<span class="hljs-number">10037855</span>, <span class="hljs-number">9293730</span>, <span class="hljs-number">9292795</span>, <span class="hljs-number">9292388</span>, <span class="hljs-number">9291934</span>, <span class="hljs-number">9291504</span>, <span class="hljs-number">9291414</span>, <span class="hljs-number">9291270</span>, <span class="hljs-number">2581057</span>, <span class="hljs-number">2580168</span>, <span class="hljs-number">2579358</span>, <span class="hljs-number">0</span>]<br></code></pre></td></tr></table></figure><h3 id="Ruby-2"><a href="#Ruby-2" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init-2"><a href="#Init-2" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">parts_sums</span><span class="hljs-params">(ls)</span></span><br>  <span class="hljs-comment">#...</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-2"><a href="#Sample-Testing-2" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs ruby">describe(<span class="hljs-string">&quot;parts_sums&quot;</span>) <span class="hljs-keyword">do</span><br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dotest</span><span class="hljs-params">(ls, expect)</span></span><br>    actual = parts_sums(ls)<br>    Test.assert_equals(actual, expect, <span class="hljs-string">&quot;&quot;</span>)<br>  <span class="hljs-keyword">end</span><br><br>  it(<span class="hljs-string">&quot;Basic tests&quot;</span>) <span class="hljs-keyword">do</span>    <br>    dotest([], [<span class="hljs-number">0</span>])<br>    dotest([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">6</span>, <span class="hljs-number">10</span>], [<span class="hljs-number">20</span>, <span class="hljs-number">20</span>, <span class="hljs-number">19</span>, <span class="hljs-number">16</span>, <span class="hljs-number">10</span>, <span class="hljs-number">0</span>])<br>    dotest([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>], [<span class="hljs-number">21</span>, <span class="hljs-number">20</span>, <span class="hljs-number">18</span>, <span class="hljs-number">15</span>, <span class="hljs-number">11</span>, <span class="hljs-number">6</span>, <span class="hljs-number">0</span>])<br>    dotest([<span class="hljs-number">744125</span>, <span class="hljs-number">935</span>, <span class="hljs-number">407</span>, <span class="hljs-number">454</span>, <span class="hljs-number">430</span>, <span class="hljs-number">90</span>, <span class="hljs-number">144</span>, <span class="hljs-number">6710213</span>, <span class="hljs-number">889</span>, <span class="hljs-number">810</span>, <span class="hljs-number">2579358</span>], <br>    [<span class="hljs-number">10037855</span>, <span class="hljs-number">9293730</span>, <span class="hljs-number">9292795</span>, <span class="hljs-number">9292388</span>, <span class="hljs-number">9291934</span>, <span class="hljs-number">9291504</span>, <span class="hljs-number">9291414</span>, <span class="hljs-number">9291270</span>, <span class="hljs-number">2581057</span>, <span class="hljs-number">2580168</span>, <span class="hljs-number">2579358</span>, <span class="hljs-number">0</span>])<br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-2"><a href="#Javascript-2" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-3"><a href="#Init-3" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">partsSums</span>(<span class="hljs-params">ls</span>) </span>&#123;<br>  <span class="hljs-comment">// your code</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-3"><a href="#Sample-Testing-3" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> chai = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;chai&quot;</span>);<br><span class="hljs-keyword">const</span> assert = chai.assert;<br>chai.config.truncateThreshold = <span class="hljs-number">0</span>;<br><br>describe(<span class="hljs-string">&quot;partsSums&quot;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dotest</span>(<span class="hljs-params">ls, expect</span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> actual = partsSums(ls);<br>    assert.deepEqual(actual, expect);<br>&#125;<br><br>it(<span class="hljs-string">&quot;Basic tests&quot;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>    dotest([], [<span class="hljs-number">0</span>]);<br>    dotest([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">6</span>, <span class="hljs-number">10</span>], [<span class="hljs-number">20</span>, <span class="hljs-number">20</span>, <span class="hljs-number">19</span>, <span class="hljs-number">16</span>, <span class="hljs-number">10</span>, <span class="hljs-number">0</span>]); <br>    dotest([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>], [<span class="hljs-number">21</span>, <span class="hljs-number">20</span>, <span class="hljs-number">18</span>, <span class="hljs-number">15</span>, <span class="hljs-number">11</span>, <span class="hljs-number">6</span>, <span class="hljs-number">0</span>]); <br>    dotest([<span class="hljs-number">744125</span>, <span class="hljs-number">935</span>, <span class="hljs-number">407</span>, <span class="hljs-number">454</span>, <span class="hljs-number">430</span>, <span class="hljs-number">90</span>, <span class="hljs-number">144</span>, <span class="hljs-number">6710213</span>, <span class="hljs-number">889</span>, <span class="hljs-number">810</span>, <span class="hljs-number">2579358</span>], <br>            [<span class="hljs-number">10037855</span>, <span class="hljs-number">9293730</span>, <span class="hljs-number">9292795</span>, <span class="hljs-number">9292388</span>, <span class="hljs-number">9291934</span>, <span class="hljs-number">9291504</span>, <span class="hljs-number">9291414</span>, <span class="hljs-number">9291270</span>, <span class="hljs-number">2581057</span>, <span class="hljs-number">2580168</span>, <span class="hljs-number">2579358</span>, <span class="hljs-number">0</span>]); <br>&#125;)&#125;)<br></code></pre></td></tr></table></figure><h1 id="Thinking-1"><a href="#Thinking-1" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1):<br>想法(2):<br>想法(3): </p><p>圖片—<br>圖片來源：<a href="https://unsplash.com/photos/PypjzKTUqLo">Unsplash Roman Bozhko</a></p><h3 id="Hint-amp-Reference-1"><a href="#Hint-amp-Reference-1" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://apidock.com/ruby/Enumerable/chunk">Ruby - apidock Chunk</a></li><li><a href="https://apidock.com/ruby/String/squeeze">Ruby - apidock Squeeze</a></li></ul></li><li>JavaScript<ul><li><a href="https://www.samanthaming.com/tidbits/83-4-ways-to-convert-string-to-character-array/">JS - 4 Ways to Convert String to Character Array in JavaScript</a></li><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/push">JS - MDN Array.prototype.push</a></li></ul></li></ul><h1 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-3"><a href="#Ruby-3" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">parts_sums</span><span class="hljs-params">(ls)</span></span><br>  sum = ls.sum<br>  result = [sum]<br>  (<span class="hljs-number">0</span>...ls.size).each &#123; <span class="hljs-params">|index|</span><br>    result &lt;&lt; result.last - ls[index]<br>  &#125;<br>  result<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 2</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">parts_sums</span><span class="hljs-params">(ls)</span></span><br>  sum = ls.sum<br>  [sum] + ls.map&#123; <span class="hljs-params">|el|</span> sum -= el &#125;<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-3"><a href="#Javascript-3" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">partsSums</span>(<span class="hljs-params">ls</span>) </span>&#123;<br>  <span class="hljs-keyword">var</span> sum = ls.reduce(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a + b, <span class="hljs-number">0</span>);<br>  <span class="hljs-keyword">var</span> result = [sum];<br><br>  <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; ls.length; i++)&#123;<br>    result.push((result[result.length-<span class="hljs-number">1</span>]) - ls[i]);<br>  &#125;;<br>  <span class="hljs-keyword">return</span> result<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村08 - Mexican Wave</title>
    <link href="/2020/09/23/codewars08/"/>
    <url>/2020/09/23/codewars08/</url>
    
    <content type="html"><![CDATA[<h1 id="08-Mexican-Wave"><a href="#08-Mexican-Wave" class="headerlink" title="08 - Mexican Wave"></a>08 - Mexican Wave</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>In this simple Kata your task is to create a function that turns a string into a Mexican Wave. You will be passed a string and you must return that string in an array where an uppercase letter is a person standing up. </p><p>Rules:</p><ol><li> The input string will always be lower case but maybe empty.</li><li> If the character in the string is whitespace then pass over it as if it was an empty seat</li></ol><p>Examples:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">wave(<span class="hljs-string">&quot;hello&quot;</span>) =&gt; [<span class="hljs-string">&quot;Hello&quot;</span>, <span class="hljs-string">&quot;hEllo&quot;</span>, <span class="hljs-string">&quot;heLlo&quot;</span>, <span class="hljs-string">&quot;helLo&quot;</span>, <span class="hljs-string">&quot;hellO&quot;</span>]<br></code></pre></td></tr></table></figure><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">wave</span><span class="hljs-params">(str)</span></span><br>  <span class="hljs-comment"># ...</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs ruby">result = [<span class="hljs-string">&quot;Hello&quot;</span>, <span class="hljs-string">&quot;hEllo&quot;</span>, <span class="hljs-string">&quot;heLlo&quot;</span>, <span class="hljs-string">&quot;helLo&quot;</span>, <span class="hljs-string">&quot;hellO&quot;</span>];<br>Test.assertDeepEquals(wave(<span class="hljs-string">&quot;hello&quot;</span>),result, <span class="hljs-string">&quot;Should return: &#x27;&quot;</span>+result+<span class="hljs-string">&quot;&#x27;&quot;</span>);<br><br>result = [<span class="hljs-string">&quot;Codewars&quot;</span>, <span class="hljs-string">&quot;cOdewars&quot;</span>, <span class="hljs-string">&quot;coDewars&quot;</span>, <span class="hljs-string">&quot;codEwars&quot;</span>, <span class="hljs-string">&quot;codeWars&quot;</span>, <span class="hljs-string">&quot;codewArs&quot;</span>, <span class="hljs-string">&quot;codewaRs&quot;</span>, <span class="hljs-string">&quot;codewarS&quot;</span>];<br>Test.assertDeepEquals(wave(<span class="hljs-string">&quot;codewars&quot;</span>), result, <span class="hljs-string">&quot;Should return: &#x27;&quot;</span>+result+<span class="hljs-string">&quot;&#x27;&quot;</span>);<br><br>result = [];<br>Test.assertDeepEquals(wave(<span class="hljs-string">&quot;&quot;</span>), result, <span class="hljs-string">&quot;Should return: &#x27;&quot;</span>+result+<span class="hljs-string">&quot;&#x27;&quot;</span>);<br><br>result = [<span class="hljs-string">&quot;Two words&quot;</span>, <span class="hljs-string">&quot;tWo words&quot;</span>, <span class="hljs-string">&quot;twO words&quot;</span>, <span class="hljs-string">&quot;two Words&quot;</span>, <span class="hljs-string">&quot;two wOrds&quot;</span>, <span class="hljs-string">&quot;two woRds&quot;</span>, <span class="hljs-string">&quot;two worDs&quot;</span>, <span class="hljs-string">&quot;two wordS&quot;</span>];<br>Test.assertDeepEquals(wave(<span class="hljs-string">&quot;two words&quot;</span>), result, <span class="hljs-string">&quot;Should return: &#x27;&quot;</span>+result+<span class="hljs-string">&quot;&#x27;&quot;</span>);<br><br>result = [<span class="hljs-string">&quot; Gap &quot;</span>, <span class="hljs-string">&quot; gAp &quot;</span>, <span class="hljs-string">&quot; gaP &quot;</span>];<br>Test.assertDeepEquals(wave(<span class="hljs-string">&quot; gap &quot;</span>), result, <span class="hljs-string">&quot;Should return: &#x27;&quot;</span>+result+<span class="hljs-string">&quot;&#x27;&quot;</span>);<br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">wave</span>(<span class="hljs-params">str</span>)</span>&#123;<br>  <span class="hljs-comment">// Code here</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript">result = [<span class="hljs-string">&quot;Hello&quot;</span>, <span class="hljs-string">&quot;hEllo&quot;</span>, <span class="hljs-string">&quot;heLlo&quot;</span>, <span class="hljs-string">&quot;helLo&quot;</span>, <span class="hljs-string">&quot;hellO&quot;</span>];<br>Test.assertDeepEquals(wave(<span class="hljs-string">&quot;hello&quot;</span>),result, <span class="hljs-string">&quot;Should return: &#x27;&quot;</span>+result+<span class="hljs-string">&quot;&#x27;&quot;</span>);<br><br>result = [<span class="hljs-string">&quot;Codewars&quot;</span>, <span class="hljs-string">&quot;cOdewars&quot;</span>, <span class="hljs-string">&quot;coDewars&quot;</span>, <span class="hljs-string">&quot;codEwars&quot;</span>, <span class="hljs-string">&quot;codeWars&quot;</span>, <span class="hljs-string">&quot;codewArs&quot;</span>, <span class="hljs-string">&quot;codewaRs&quot;</span>, <span class="hljs-string">&quot;codewarS&quot;</span>];<br>Test.assertDeepEquals(wave(<span class="hljs-string">&quot;codewars&quot;</span>), result, <span class="hljs-string">&quot;Should return: &#x27;&quot;</span>+result+<span class="hljs-string">&quot;&#x27;&quot;</span>);<br><br>result = [];<br>Test.assertDeepEquals(wave(<span class="hljs-string">&quot;&quot;</span>), result, <span class="hljs-string">&quot;Should return: &#x27;&quot;</span>+result+<span class="hljs-string">&quot;&#x27;&quot;</span>);<br><br>result = [<span class="hljs-string">&quot;Two words&quot;</span>, <span class="hljs-string">&quot;tWo words&quot;</span>, <span class="hljs-string">&quot;twO words&quot;</span>, <span class="hljs-string">&quot;two Words&quot;</span>, <span class="hljs-string">&quot;two wOrds&quot;</span>, <span class="hljs-string">&quot;two woRds&quot;</span>, <span class="hljs-string">&quot;two worDs&quot;</span>, <span class="hljs-string">&quot;two wordS&quot;</span>];<br>Test.assertDeepEquals(wave(<span class="hljs-string">&quot;two words&quot;</span>), result, <span class="hljs-string">&quot;Should return: &#x27;&quot;</span>+result+<span class="hljs-string">&quot;&#x27;&quot;</span>);<br><br>result = [<span class="hljs-string">&quot; Gap &quot;</span>, <span class="hljs-string">&quot; gAp &quot;</span>, <span class="hljs-string">&quot; gaP &quot;</span>];<br>Test.assertDeepEquals(wave(<span class="hljs-string">&quot; gap &quot;</span>), result, <span class="hljs-string">&quot;Should return: &#x27;&quot;</span>+result+<span class="hljs-string">&quot;&#x27;&quot;</span>);<br></code></pre></td></tr></table></figure><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): 將所有字都先轉為小寫，在透過跑迴圈來看第幾個字為大寫 + 其餘小寫<br>想法(2): 複製原本傳入的值出來後，再將大寫的字 assign 回複製出來的值</p><p><img src="https://ithelp.ithome.com.tw/upload/images/20200923/20120826UtmZFyXlPA.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20200923/20120826UtmZFyXlPA.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/85XLV4Po2mk">Unsplash C D-X</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://apidock.com/ruby/Enumerator/each_with_index">Ruby - apidock each_with_index</a></li><li><a href="https://apidock.com/ruby/v2_5_5/String/downcase">Ruby - apidock downcase</a></li><li><a href="https://apidock.com/ruby/String/upcase">Ruby - apidock upcase</a></li></ul></li><li>JavaScript<ul><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/slice">JS - MDN Array.prototype.slice</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase">JS - MDN String.prototype.toUpperCase</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">wave</span><span class="hljs-params">(str)</span></span><br>  result = []<br>  chars = str.downcase.chars<br>  chars.each_with_index <span class="hljs-keyword">do</span> <span class="hljs-params">|char, index|</span><br>    <span class="hljs-keyword">next</span> <span class="hljs-keyword">if</span> char == <span class="hljs-string">&quot; &quot;</span><br>    result &lt;&lt; str[<span class="hljs-number">0</span>...index] + char.upcase + str[index+<span class="hljs-number">1</span>..-<span class="hljs-number">1</span>]<br>  <span class="hljs-keyword">end</span><br>  result<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 2</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">wave</span><span class="hljs-params">(str)</span></span><br>  result = []<br>  str.size.times <span class="hljs-keyword">do</span> <span class="hljs-params">|index|</span><br>    <span class="hljs-keyword">next</span> <span class="hljs-keyword">if</span> str[index] == <span class="hljs-string">&#x27; &#x27;</span><br>    result &lt;&lt; str.dup<br>    result[-<span class="hljs-number">1</span>][index] = result[-<span class="hljs-number">1</span>][index].upcase<br>  <span class="hljs-keyword">end</span><br>  result<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">wave</span>(<span class="hljs-params">str</span>)</span>&#123;<br>  <span class="hljs-keyword">var</span> result = [];<br>  <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; str.length; i++) &#123;<br>    <span class="hljs-keyword">if</span> (str[i] != <span class="hljs-string">&#x27; &#x27;</span>) <br>    result.push(str.slice(<span class="hljs-number">0</span>, i) + str[i].toUpperCase() + str.slice(i + <span class="hljs-number">1</span>))<br>  &#125;<br>  <span class="hljs-keyword">return</span> result;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村07 - Sum of Digits / Digital Root</title>
    <link href="/2020/09/22/codewars07/"/>
    <url>/2020/09/22/codewars07/</url>
    
    <content type="html"><![CDATA[<h1 id="07-Sum-of-Digits-Digital-Root"><a href="#07-Sum-of-Digits-Digital-Root" class="headerlink" title="07 - Sum of Digits / Digital Root"></a>07 - Sum of Digits / Digital Root</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p><a href="https://en.wikipedia.org/wiki/Digital_root">Digital root</a> is the recursive sum of all the digits in a number.</p><p>Given n, take the sum of the digits of n. If that value has more than one digit, continue reducing in this way until a single-digit number is produced. This is only applicable to the natural numbers.</p><p>Examples:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">   <span class="hljs-number">16</span>   --&gt;  <span class="hljs-number">1</span> + <span class="hljs-number">6</span> = <span class="hljs-number">7</span><br>   <span class="hljs-number">942</span>  --&gt;  <span class="hljs-number">9</span> + <span class="hljs-number">4</span> + <span class="hljs-number">2</span> = <span class="hljs-number">15</span>  --&gt;  <span class="hljs-number">1</span> + <span class="hljs-number">5</span> = <span class="hljs-number">6</span><br><span class="hljs-number">132189</span>  --&gt;  <span class="hljs-number">1</span> + <span class="hljs-number">3</span> + <span class="hljs-number">2</span> + <span class="hljs-number">1</span> + <span class="hljs-number">8</span> + <span class="hljs-number">9</span> = <span class="hljs-number">24</span>  --&gt;  <span class="hljs-number">2</span> + <span class="hljs-number">4</span> = <span class="hljs-number">6</span><br><span class="hljs-number">493193</span>  --&gt;  <span class="hljs-number">4</span> + <span class="hljs-number">9</span> + <span class="hljs-number">3</span> + <span class="hljs-number">1</span> + <span class="hljs-number">9</span> + <span class="hljs-number">3</span> = <span class="hljs-number">29</span>  --&gt;  <span class="hljs-number">2</span> + <span class="hljs-number">9</span> = <span class="hljs-number">11</span>  --&gt;  <span class="hljs-number">1</span> + <span class="hljs-number">1</span> = <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">digital_root</span><span class="hljs-params">(n)</span></span><br>  <span class="hljs-comment"># ...</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby">Test.assert_equals(digital_root(<span class="hljs-number">16</span>), <span class="hljs-number">7</span>)<br>Test.assert_equals(digital_root(<span class="hljs-number">942</span>), <span class="hljs-number">6</span>)<br>Test.assert_equals(digital_root(<span class="hljs-number">132189</span>), <span class="hljs-number">6</span>)<br>Test.assert_equals(digital_root(<span class="hljs-number">493193</span>), <span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">digital_root</span>(<span class="hljs-params">n</span>) </span>&#123;<br>  <span class="hljs-comment">// ...</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Test.assertEquals( digital_root(<span class="hljs-number">16</span>), <span class="hljs-number">7</span> )<br>Test.assertEquals( digital_root(<span class="hljs-number">456</span>), <span class="hljs-number">6</span> )<br></code></pre></td></tr></table></figure><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): 將傳進來的值，先切開之後進行相加<br>想法(2): 需要判斷如果是兩位數以上的話，還需要在進行上述的動作，可以聯想到遞迴</p><p><img src="https://ithelp.ithome.com.tw/upload/images/20200922/20120826PSUp8bSOU0.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20200922/20120826PSUp8bSOU0.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/omeaHbEFlN4">Unsplash Alexis Brown</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li><a href="https://zh.wikipedia.org/zh-tw/%E9%80%92%E5%BD%92_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6)">遞迴 Recursive</a></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">digital_root</span><span class="hljs-params">(n)</span></span><br>  recursive = n.to_s.split(<span class="hljs-string">&#x27;&#x27;</span>).map(&amp;<span class="hljs-symbol">:to_i</span>).sum<br>  recursive &gt;= <span class="hljs-number">10</span> ? digital_root(recursive) : recursive<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 2</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">digital_root</span><span class="hljs-params">(n)</span></span><br>  <span class="hljs-keyword">return</span> n <span class="hljs-keyword">if</span> n &lt; <span class="hljs-number">10</span><br>  digital_root(n.to_s.chars.map(&amp;<span class="hljs-symbol">:to_i</span>).reduce(&amp;<span class="hljs-symbol">:+</span>))<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 3</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">digital_root</span><span class="hljs-params">(n)</span></span><br>  n &lt; <span class="hljs-number">10</span> ? n : digital_root(n.to_s.chars.map(&amp;<span class="hljs-symbol">:to_i</span>).reduce(<span class="hljs-symbol">:+</span>))<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">digital_root</span>(<span class="hljs-params">n</span>) </span>&#123;<br>  recursive = n.toString().split(<span class="hljs-string">&#x27;&#x27;</span>).reduce(<span class="hljs-function">(<span class="hljs-params">sum, s</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> sum += <span class="hljs-built_in">Number</span>(s);<br>  &#125;, <span class="hljs-number">0</span>);<br><br>  <span class="hljs-keyword">return</span> recursive &lt; <span class="hljs-number">10</span> ? recursive : digital_root(recursive);<br>&#125;<br><br><span class="hljs-comment">// wait, what?</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">digital_root</span>(<span class="hljs-params">n</span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> (n - <span class="hljs-number">1</span>) % <span class="hljs-number">9</span> + <span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村06 - Character with longest consecutive repetition</title>
    <link href="/2020/09/21/codewars06/"/>
    <url>/2020/09/21/codewars06/</url>
    
    <content type="html"><![CDATA[<h1 id="06-Character-with-longest-consecutive-repetition"><a href="#06-Character-with-longest-consecutive-repetition" class="headerlink" title="06 - Character with longest consecutive repetition"></a>06 - Character with longest consecutive repetition</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>For a given string s find the character c (or C) with longest consecutive repetition and return:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">[c, l]<br></code></pre></td></tr></table></figure><p>where l (or L) is the length of the repetition. If there are two or more characters with the same l return the first in order of appearance.</p><p>For empty string return:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">[<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-number">0</span>]<br></code></pre></td></tr></table></figure><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby">def longest_repetition chars<br>  <span class="hljs-comment"># &quot;Implement me!&quot;</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs ruby">describe <span class="hljs-string">&quot;Solution&quot;</span> <span class="hljs-keyword">do</span><br>  it <span class="hljs-string">&quot;should work for example tests&quot;</span> <span class="hljs-keyword">do</span><br>    Test.assert_equals(longest_repetition(<span class="hljs-string">&quot;aaaabb&quot;</span>), [<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-number">4</span>])<br>    Test.assert_equals(longest_repetition(<span class="hljs-string">&quot;bbbaaabaaaa&quot;</span>), [<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-number">4</span>])<br>    Test.assert_equals(longest_repetition(<span class="hljs-string">&quot;cbdeuuu900&quot;</span>), [<span class="hljs-string">&#x27;u&#x27;</span>, <span class="hljs-number">3</span>])<br>    Test.assert_equals(longest_repetition(<span class="hljs-string">&quot;abbbbb&quot;</span>), [<span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-number">5</span>])<br>    Test.assert_equals(longest_repetition(<span class="hljs-string">&quot;aabb&quot;</span>), [<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-number">2</span>])<br>    Test.assert_equals(longest_repetition(<span class="hljs-string">&quot;ba&quot;</span>), [<span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-number">1</span>])<br>    Test.assert_equals(longest_repetition(<span class="hljs-string">&quot;&quot;</span>), [<span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-number">0</span>])<br>    Test.assert_equals(longest_repetition(<span class="hljs-string">&quot;aaabbcccddd&quot;</span>), [<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-number">3</span>])<br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">longestRepetition</span>(<span class="hljs-params">s</span>) </span>&#123;<br>  <span class="hljs-comment">// return [&quot;&quot;, 0];</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Test.describe(<span class="hljs-string">&quot;Longest repetition&quot;</span>, <span class="hljs-function">()=&gt;</span>&#123;<br>  Test.it(<span class="hljs-string">&quot;Example tests&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>    Test.assertDeepEquals( longestRepetition(<span class="hljs-string">&quot;aaaabb&quot;</span>),      [<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-number">4</span>] );<br>    Test.assertDeepEquals( longestRepetition(<span class="hljs-string">&quot;bbbaaabaaaa&quot;</span>), [<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-number">4</span>] );<br>    Test.assertDeepEquals( longestRepetition(<span class="hljs-string">&quot;cbdeuuu900&quot;</span>),  [<span class="hljs-string">&quot;u&quot;</span>,<span class="hljs-number">3</span>] );<br>    Test.assertDeepEquals( longestRepetition(<span class="hljs-string">&quot;abbbbb&quot;</span>),      [<span class="hljs-string">&quot;b&quot;</span>,<span class="hljs-number">5</span>] );<br>    Test.assertDeepEquals( longestRepetition(<span class="hljs-string">&quot;aabb&quot;</span>),        [<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-number">2</span>] );<br>    Test.assertDeepEquals( longestRepetition(<span class="hljs-string">&quot;&quot;</span>),            [<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-number">0</span>] );<br>    Test.assertDeepEquals( longestRepetition(<span class="hljs-string">&quot;ba&quot;</span>),          [<span class="hljs-string">&quot;b&quot;</span>,<span class="hljs-number">1</span>] );<br>  &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): 與 <a href="https://ithelp.ithome.com.tw/articles/10238433">見習村02 - Unique In Order</a> 有點類似，都可以先將輸入的值分群<br>想法(2): 分群後的陣列，可以再來排序由大到小<br>想法(3): 排序完成後再來判斷如果傳進來的值是空的要另外回傳 <code>[&quot;&quot;, 0]</code></p><p><img src="https://ithelp.ithome.com.tw/upload/images/20200921/20120826gqBHgls5v7.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20200921/20120826gqBHgls5v7.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/cB10K2ugb-4">Unsplash Dayne Topkin</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://apidock.com/ruby/Enumerable/chunk">Ruby - apidock Chunk</a></li><li><a href="https://apidock.com/ruby/String/gsub">Ruby - apidock gsub</a></li><li><a href="https://apidock.com/ruby/Enumerable/max_by">Ruby - apidock max_by</a></li></ul></li><li>JavaScript<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/while">JS - MDN while</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br>def longest_repetition chars<br>  char = chars.gsub(<span class="hljs-regexp">/(.)\1*/</span>).max_by(&amp;<span class="hljs-symbol">:size</span>)<br>  <span class="hljs-keyword">if</span> char.<span class="hljs-literal">nil</span>? <br>    [<span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-number">0</span>] <br>  <span class="hljs-keyword">else</span> <br>    [char.split(<span class="hljs-string">&#x27;&#x27;</span>).first, char.split(<span class="hljs-string">&#x27;&#x27;</span>).count]<br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 2</span><br>def longest_repetition chars<br>  char = chars.gsub(<span class="hljs-regexp">/(.)\1*/</span>).max_by(&amp;<span class="hljs-symbol">:size</span>)<br>  char.<span class="hljs-literal">nil</span>? ? [<span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-number">0</span>] : [char.split(<span class="hljs-string">&#x27;&#x27;</span>).first, char.split(<span class="hljs-string">&#x27;&#x27;</span>).count]<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 3</span><br>def longest_repetition chars<br>  <span class="hljs-keyword">return</span> [<span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-number">0</span>] <span class="hljs-keyword">if</span> chars.empty?<br>  <br>  char = chars.gsub(<span class="hljs-regexp">/(.)\1*/</span>).max_by(&amp;<span class="hljs-symbol">:size</span>).split(<span class="hljs-string">&#x27;&#x27;</span>)<br>  [char.first, char.count]<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 4</span><br>def longest_repetition chars<br>  <span class="hljs-keyword">return</span> [<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-number">0</span>] <span class="hljs-keyword">if</span> chars.empty?<br>  <br>  chars.chars.chunk(&amp;<span class="hljs-symbol">:itself</span>)<br>             .map&#123; <span class="hljs-params">|char, chars|</span> [char, chars.size] &#125;<br>             .max_by &#123; <span class="hljs-params">|char, size|</span> size &#125;     <br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">longestRepetition</span>(<span class="hljs-params">s</span>) </span>&#123;<br>  <span class="hljs-keyword">let</span> string = s.split(<span class="hljs-string">&quot;&quot;</span>);<br>  <span class="hljs-keyword">let</span> result = [<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-number">0</span>];<br><br>  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; string.length; i++)&#123;<br>    <span class="hljs-keyword">let</span> repetitions = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span>(string[i] == string[i+repetitions])&#123;<br>      repetitions++;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(repetitions &gt; result[<span class="hljs-number">1</span>])&#123;<br>      result = [string[i],repetitions]<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> result;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村05 - The Hashtag Generator</title>
    <link href="/2020/09/20/codewars05/"/>
    <url>/2020/09/20/codewars05/</url>
    
    <content type="html"><![CDATA[<h1 id="05-The-Hashtag-Generator"><a href="#05-The-Hashtag-Generator" class="headerlink" title="05 - The Hashtag Generator"></a>05 - The Hashtag Generator</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>The marketing team is spending way too much time typing in hashtags.<br>Let’s help them with our own Hashtag Generator!</p><p>Here’s the deal:</p><p>It must start with a hashtag (<code>#</code>).<br>All words must have their first letter capitalized.<br>If the final result is longer than 140 chars it must return <code>false</code>.<br>If the input or the result is an empty string it must return <code>false</code>.</p><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-string">&quot; Hello there thanks for trying my Kata&quot;</span>  =&gt;  <span class="hljs-string">&quot;#HelloThereThanksForTryingMyKata&quot;</span><br><span class="hljs-string">&quot;    Hello     World   &quot;</span>                  =&gt;  <span class="hljs-string">&quot;#HelloWorld&quot;</span><br><span class="hljs-string">&quot;&quot;</span>                                        =&gt;  <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">generateHashtag</span><span class="hljs-params">(str)</span></span><br>  <span class="hljs-comment"># ...</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ruby">Test.assert_equals(generateHashtag(<span class="hljs-string">&quot;&quot;</span>), <span class="hljs-literal">false</span>, <span class="hljs-string">&quot;Expected an empty string to return false&quot;</span>)<br>Test.assert_equals(generateHashtag(<span class="hljs-string">&quot; &quot;</span> * <span class="hljs-number">200</span>), <span class="hljs-literal">false</span>, <span class="hljs-string">&quot;Still an empty string&quot;</span>)<br>Test.assert_equals(generateHashtag(<span class="hljs-string">&quot;Do We have A Hashtag&quot;</span>), <span class="hljs-string">&quot;#DoWeHaveAHashtag&quot;</span>, <span class="hljs-string">&quot;Expected a Hashtag (#) at the beginning.&quot;</span>)<br>Test.assert_equals(generateHashtag(<span class="hljs-string">&quot;Codewars&quot;</span>), <span class="hljs-string">&quot;#Codewars&quot;</span>, <span class="hljs-string">&quot;Should handle a single word.&quot;</span>)<br>Test.assert_equals(generateHashtag(<span class="hljs-string">&quot;Codewars Is Nice&quot;</span>), <span class="hljs-string">&quot;#CodewarsIsNice&quot;</span>, <span class="hljs-string">&quot;Should remove spaces.&quot;</span>)<br>Test.assert_equals(generateHashtag(<span class="hljs-string">&quot;Codewars is nice&quot;</span>), <span class="hljs-string">&quot;#CodewarsIsNice&quot;</span>, <span class="hljs-string">&quot;Should capitalize first letters of words.&quot;</span>)<br>Test.assert_equals(generateHashtag(<span class="hljs-string">&quot;code&quot;</span> + <span class="hljs-string">&quot; &quot;</span> * <span class="hljs-number">140</span> + <span class="hljs-string">&quot;wars&quot;</span>), <span class="hljs-string">&quot;#CodeWars&quot;</span>)<br>Test.assert_equals(generateHashtag(<span class="hljs-string">&quot;Looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong Cat&quot;</span>), <span class="hljs-literal">false</span>, <span class="hljs-string">&quot;Should return false if the final word is longer than 140 chars.&quot;</span>)<br>Test.assert_equals(generateHashtag(<span class="hljs-string">&quot;a&quot;</span> * <span class="hljs-number">139</span>), <span class="hljs-string">&quot;#A&quot;</span> + <span class="hljs-string">&quot;a&quot;</span> * <span class="hljs-number">138</span>, <span class="hljs-string">&quot;Should work&quot;</span>)<br>Test.assert_equals(generateHashtag(<span class="hljs-string">&quot;a&quot;</span> * <span class="hljs-number">140</span>), <span class="hljs-literal">false</span>, <span class="hljs-string">&quot;Too long&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">generateHashtag</span> (<span class="hljs-params">str</span>) </span>&#123;<br>  <span class="hljs-comment">// Code here</span><br>&#125;;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Test.assertEquals(generateHashtag(<span class="hljs-string">&quot;&quot;</span>), <span class="hljs-literal">false</span>, <span class="hljs-string">&quot;Expected an empty string to return false&quot;</span>)<br>Test.assertEquals(generateHashtag(<span class="hljs-string">&quot; &quot;</span>.repeat(<span class="hljs-number">200</span>)), <span class="hljs-literal">false</span>, <span class="hljs-string">&quot;Still an empty string&quot;</span>)<br>Test.assertEquals(generateHashtag(<span class="hljs-string">&quot;Do We have A Hashtag&quot;</span>), <span class="hljs-string">&quot;#DoWeHaveAHashtag&quot;</span>, <span class="hljs-string">&quot;Expected a Hashtag (#) at the beginning.&quot;</span>)<br>Test.assertEquals(generateHashtag(<span class="hljs-string">&quot;Codewars&quot;</span>), <span class="hljs-string">&quot;#Codewars&quot;</span>, <span class="hljs-string">&quot;Should handle a single word.&quot;</span>)<br>Test.assertEquals(generateHashtag(<span class="hljs-string">&quot;Codewars Is Nice&quot;</span>), <span class="hljs-string">&quot;#CodewarsIsNice&quot;</span>, <span class="hljs-string">&quot;Should remove spaces.&quot;</span>)<br>Test.assertEquals(generateHashtag(<span class="hljs-string">&quot;Codewars is nice&quot;</span>), <span class="hljs-string">&quot;#CodewarsIsNice&quot;</span>, <span class="hljs-string">&quot;Should capitalize first letters of words.&quot;</span>)<br>Test.assertEquals(generateHashtag(<span class="hljs-string">&quot;code&quot;</span> + <span class="hljs-string">&quot; &quot;</span>.repeat(<span class="hljs-number">140</span>) + <span class="hljs-string">&quot;wars&quot;</span>), <span class="hljs-string">&quot;#CodeWars&quot;</span>)<br>Test.assertEquals(generateHashtag(<span class="hljs-string">&quot;Looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong Cat&quot;</span>), <span class="hljs-literal">false</span>, <span class="hljs-string">&quot;Should return false if the final word is longer than 140 chars.&quot;</span>)<br>Test.assertEquals(generateHashtag(<span class="hljs-string">&quot;a&quot;</span>.repeat(<span class="hljs-number">139</span>)), <span class="hljs-string">&quot;#A&quot;</span> + <span class="hljs-string">&quot;a&quot;</span>.repeat(<span class="hljs-number">138</span>), <span class="hljs-string">&quot;Should work&quot;</span>)<br>Test.assertEquals(generateHashtag(<span class="hljs-string">&quot;a&quot;</span>.repeat(<span class="hljs-number">140</span>)), <span class="hljs-literal">false</span>, <span class="hljs-string">&quot;Too long&quot;</span>)<br></code></pre></td></tr></table></figure><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): 須先思考如何處理傳進來的值為空白的狀況，會影響應該判斷長度為 140 || 139<br>想法(2): 將值切開分群然後轉為大寫再組回來，並且再加上 #hashtag</p><p><img src="https://ithelp.ithome.com.tw/upload/images/20200920/20120826uApzNhLLnM.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20200920/20120826uApzNhLLnM.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/kRNZiGKtz48">Unsplash NordWood Themes</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li><p>Ruby </p><ul><li><a href="https://apidock.com/ruby/String/capitalize">Ruby - API dock capitalize</a></li><li><a href="https://apidock.com/ruby/String/prepend">Ruby - API dock prepend</a></li><li><a href="https://apidock.com/ruby/String/strip">Ruby - API dock strip</a></li></ul></li><li><p>JavaScript</p><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/charAt">JS - MDN String.prototype.charAt</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase">JS - MDN String.prototype.toUpperCase</a></li><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/slice">JS - MDN Array.prototype.slice</a></li></ul></li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">generateHashtag</span><span class="hljs-params">(str)</span></span><br>  string = str.split.map(&amp;<span class="hljs-symbol">:capitalize</span>).join<br>  <span class="hljs-keyword">if</span> (string.empty? <span class="hljs-params">||</span> string.length &gt; <span class="hljs-number">139</span>)<br>    <span class="hljs-literal">false</span><br>  <span class="hljs-keyword">else</span><br>    <span class="hljs-string">&quot;#<span class="hljs-subst">#&#123;string&#125;</span>&quot;</span><br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 2</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">generateHashtag</span><span class="hljs-params">(str)</span></span><br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span> <span class="hljs-keyword">if</span> str.strip.empty?<br>  str = str.split(<span class="hljs-string">&quot; &quot;</span>).map(&amp;<span class="hljs-symbol">:capitalize</span>).join.prepend(<span class="hljs-string">&quot;#&quot;</span>)<br>  str.length &gt; <span class="hljs-number">140</span> ? <span class="hljs-literal">false</span> : str<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">generateHashtag</span> (<span class="hljs-params">str</span>) </span>&#123;<br>  <span class="hljs-keyword">let</span> wordArray = str.split(<span class="hljs-string">&#x27; &#x27;</span>).filter(<span class="hljs-function"><span class="hljs-params">char</span> =&gt;</span> char !== <span class="hljs-string">&quot;&quot;</span>);<br>  <span class="hljs-keyword">let</span> result = <span class="hljs-string">&quot;#&quot;</span>;<br>  <br>  result = result + wordArray.map(<span class="hljs-function"><span class="hljs-params">word</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">let</span> capitalizedWord = word.charAt(<span class="hljs-number">0</span>).toUpperCase() + word.slice(<span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">return</span> capitalizedWord;<br>  &#125;).join(<span class="hljs-string">&#x27;&#x27;</span>);<br>  <br>  <span class="hljs-keyword">return</span> wordArray.length === <span class="hljs-number">0</span> || result.length &gt; <span class="hljs-number">140</span> ? <span class="hljs-literal">false</span> : result<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村04 - Bit Counting</title>
    <link href="/2020/09/19/codewars04/"/>
    <url>/2020/09/19/codewars04/</url>
    
    <content type="html"><![CDATA[<h1 id="04-Bit-Counting"><a href="#04-Bit-Counting" class="headerlink" title="04 - Bit Counting"></a>04 - Bit Counting</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>Write a function that takes an integer as input, and returns the number of bits that are equal to one in the binary representation of that number. You can guarantee that input is non-negative.</p><p>Example: The binary representation of <code>1234</code> is <code>10011010010</code>, so the function should return <code>5</code> in this case</p><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">count_bits</span><span class="hljs-params">(n)</span></span><br>  <span class="hljs-comment"># Program Me</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ruby">Test.assert_equals count_bits(<span class="hljs-number">0</span>), <span class="hljs-number">0</span><br>Test.assert_equals count_bits(<span class="hljs-number">4</span>), <span class="hljs-number">1</span><br>Test.assert_equals count_bits(<span class="hljs-number">7</span>), <span class="hljs-number">3</span><br>Test.assert_equals count_bits(<span class="hljs-number">9</span>), <span class="hljs-number">2</span><br>Test.assert_equals count_bits(<span class="hljs-number">10</span>), <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> countBits = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>&#123;<br>  <span class="hljs-comment">// Program Me</span><br>&#125;;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Test.assertEquals(countBits(<span class="hljs-number">0</span>), <span class="hljs-number">0</span>);<br>Test.assertEquals(countBits(<span class="hljs-number">4</span>), <span class="hljs-number">1</span>);<br>Test.assertEquals(countBits(<span class="hljs-number">7</span>), <span class="hljs-number">3</span>);<br>Test.assertEquals(countBits(<span class="hljs-number">9</span>), <span class="hljs-number">2</span>);<br>Test.assertEquals(countBits(<span class="hljs-number">10</span>), <span class="hljs-number">2</span>);<br></code></pre></td></tr></table></figure><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): A system of numerical notation that has 2 rather than 10 as a base.<br>想法(2): 將傳入的數字轉為 binary，再將其切開分群，然後進行加總</p><p><img src="https://ithelp.ithome.com.tw/upload/images/20200919/20120826nf6v12ujjB.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20200919/20120826nf6v12ujjB.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/oUiTrFhnEkE">Unsplash Ben White</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://ruby-doc.org/core-2.4.0/Integer.html#method-i-to_s">Ruby - to_s(base=10) → string</a></li></ul></li><li>JavaScript<ul><li><a href="Object.prototype.toString">JS - MDN https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString</a></li><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/parseInt">JS - MDN parseInt()</a></li></ul></li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">count_bits</span><span class="hljs-params">(n)</span></span><br>  n.to_s(<span class="hljs-number">2</span>).count(<span class="hljs-string">&#x27;1&#x27;</span>)<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 2</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">count_bits</span><span class="hljs-params">(n)</span></span><br>  n.to_s(<span class="hljs-number">2</span>).chars.map&#123; <span class="hljs-params">|x|</span> x.to_i &#125;.reduce&#123; <span class="hljs-params">|sum, x|</span> x += sum &#125;<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 3</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">count_bits</span><span class="hljs-params">(n)</span></span><br>  n.to_s(<span class="hljs-number">2</span>).chars.map(&amp;<span class="hljs-symbol">:to_i</span>).inject(&amp;<span class="hljs-symbol">:+</span>)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-keyword">var</span> countBits = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>&#123;<br>  <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span><br>  <span class="hljs-keyword">let</span> to_binary = n.toString(<span class="hljs-number">2</span>)<br>  <br>  <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; to_binary.length; i++)&#123;<br>    <span class="hljs-keyword">if</span>( <span class="hljs-built_in">parseInt</span>(to_binary.split(<span class="hljs-string">&#x27;&#x27;</span>)[i]) === <span class="hljs-number">1</span>) &#123;<br>      count += <span class="hljs-number">1</span><br>    &#125; <br>  &#125; <br><br>  <span class="hljs-keyword">return</span> count<br>&#125;;<br><br><span class="hljs-comment">// Solution 2</span><br><span class="hljs-keyword">var</span> countBits = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> n.toString(<span class="hljs-number">2</span>).split(<span class="hljs-string">&#x27;0&#x27;</span>).join(<span class="hljs-string">&#x27;&#x27;</span>).length;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村03 - Highest Scoring Word</title>
    <link href="/2020/09/18/codewars03/"/>
    <url>/2020/09/18/codewars03/</url>
    
    <content type="html"><![CDATA[<h1 id="03-Highest-Scoring-Word"><a href="#03-Highest-Scoring-Word" class="headerlink" title="03 - Highest Scoring Word"></a>03 - Highest Scoring Word</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>Given a string of words, you need to find the highest scoring word.</p><p>Each letter of a word scores points according to its position in the alphabet: <code>a = 1, b = 2, c = 3</code> etc.</p><p>You need to return the highest scoring word as a string.</p><p>If two words score the same, return the word that appears earliest in the original string.</p><p>All letters will be lowercase and all inputs will be valid.</p><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">high</span><span class="hljs-params">(x)</span></span><br>  <span class="hljs-comment"># Code here</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ruby">describe <span class="hljs-string">&quot;Basic Tests&quot;</span> <span class="hljs-keyword">do</span><br>  it <span class="hljs-string">&quot;should pass basic tests&quot;</span> <span class="hljs-keyword">do</span><br>    Test.assert_equals(high(<span class="hljs-string">&#x27;man i need a taxi up to ubud&#x27;</span>), <span class="hljs-string">&#x27;taxi&#x27;</span>)<br>    Test.assert_equals(high(<span class="hljs-string">&#x27;what time are we climbing up the volcano&#x27;</span>), <span class="hljs-string">&#x27;volcano&#x27;</span>)<br>    Test.assert_equals(high(<span class="hljs-string">&#x27;take me to semynak&#x27;</span>), <span class="hljs-string">&#x27;semynak&#x27;</span>)<br>    Test.assert_equals(high(<span class="hljs-string">&#x27;aaa b&#x27;</span>), <span class="hljs-string">&#x27;aaa&#x27;</span>)<br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">high</span>(<span class="hljs-params">x</span>)</span>&#123;<br>  <span class="hljs-comment">// Code here</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Test.describe(<span class="hljs-string">&quot;Example tests&quot;</span>,<span class="hljs-function"><span class="hljs-params">_</span>=&gt;</span>&#123;<br>Test.assertEquals(high(<span class="hljs-string">&#x27;man i need a taxi up to ubud&#x27;</span>), <span class="hljs-string">&#x27;taxi&#x27;</span>);<br>Test.assertEquals(high(<span class="hljs-string">&#x27;what time are we climbing up the volcano&#x27;</span>), <span class="hljs-string">&#x27;volcano&#x27;</span>); <br>Test.assertEquals(high(<span class="hljs-string">&#x27;take me to semynak&#x27;</span>), <span class="hljs-string">&#x27;semynak&#x27;</span>);  <br>&#125;);<br></code></pre></td></tr></table></figure><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): 輸入的英文句子，可以先將每個字切開分群<br>想法(2): 再將每個群計算 <code>ord</code> 然後計算該群單詞 ord 總和</p><p><img src="https://ithelp.ithome.com.tw/upload/images/20200918/2012082665vk5r7ygL.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20200918/2012082665vk5r7ygL.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/02z1I7gv4ao">Unsplash Matt Ragland</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://apidock.com/rails/String/ord">Ruby - apidock Ord</a></li><li><a href="https://apidock.com/ruby/Enumerable/max_by">Ruby - apidock Max_by</a></li></ul></li><li>JavaScript<ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt">JS - MDN String.prototype.charCodeAt</a></li><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf">JS - MDN Array.prototype.indexOf</a></li><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Math/max">JS - MDN Math.max</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">high</span><span class="hljs-params">(x)</span></span><br>  x.split.max_by&#123; <span class="hljs-params">|x|</span> x.chars.map&#123; <span class="hljs-params">|c|</span> c.ord - <span class="hljs-number">96</span>&#125;.sum &#125;<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">high</span>(<span class="hljs-params">x</span>)</span>&#123;<br>  <span class="hljs-keyword">let</span> max = x.split(<span class="hljs-string">&#x27; &#x27;</span>).map( <br>    (s) =&gt; [...s].reduce(<br>      (sum, s) =&gt; sum + s.charCodeAt() - <span class="hljs-number">96</span>, <span class="hljs-number">0</span><br>    )<br>  )<br>  <br>  <span class="hljs-keyword">return</span> x.split(<span class="hljs-string">&#x27; &#x27;</span>)[max.indexOf(<span class="hljs-built_in">Math</span>.max(...max))];<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村02 - Unique In Order</title>
    <link href="/2020/09/17/codewars02/"/>
    <url>/2020/09/17/codewars02/</url>
    
    <content type="html"><![CDATA[<h1 id="02-Unique-In-Order"><a href="#02-Unique-In-Order" class="headerlink" title="02 - Unique In Order"></a>02 - Unique In Order</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>Implement the function unique_in_order which takes as argument a sequence and returns a list of items without any elements with the same value next to each other and preserving the original order of elements.</p><p>For example:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">uniqueInOrder(<span class="hljs-string">&#x27;AAAABBBCCDAABBB&#x27;</span>) == [<span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>, <span class="hljs-string">&#x27;D&#x27;</span>, <span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>]<br>uniqueInOrder(<span class="hljs-string">&#x27;ABBCcAD&#x27;</span>)         == [<span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;D&#x27;</span>]<br>uniqueInOrder([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>])       == [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]<br></code></pre></td></tr></table></figure><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">unique_in_order</span><span class="hljs-params">(iterable)</span></span><br>  <span class="hljs-comment"># put your solution here</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">Test.assert_equals(unique_in_order(<span class="hljs-string">&#x27;AAAABBBCCDAABBB&#x27;</span>), [<span class="hljs-string">&#x27;A&#x27;</span>,<span class="hljs-string">&#x27;B&#x27;</span>,<span class="hljs-string">&#x27;C&#x27;</span>,<span class="hljs-string">&#x27;D&#x27;</span>,<span class="hljs-string">&#x27;A&#x27;</span>,<span class="hljs-string">&#x27;B&#x27;</span>])<br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> uniqueInOrder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">iterable</span>)</span>&#123;<br>  <span class="hljs-comment">// your code here - remember iterable can be a string or an array</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Test.assertSimilar(uniqueInOrder(<span class="hljs-string">&#x27;AAAABBBCCDAABBB&#x27;</span>), [<span class="hljs-string">&#x27;A&#x27;</span>,<span class="hljs-string">&#x27;B&#x27;</span>,<span class="hljs-string">&#x27;C&#x27;</span>,<span class="hljs-string">&#x27;D&#x27;</span>,<span class="hljs-string">&#x27;A&#x27;</span>,<span class="hljs-string">&#x27;B&#x27;</span>])<br></code></pre></td></tr></table></figure><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): 從舉例可以看出會傳入的 <code>iterable</code> 的型態會是陣列、字串，所以需先判斷型態，否則後面能接的方法會有不能用的情況<br>想法(2): 分群的概念，如果後面的英文字跟前一個相同的話，只顯示一個<br>想法(3): 可以用空陣列塞值進去、或者是分群 <code>select</code> 取 <code>uniq</code> 的那個值</p><p><img src="https://ithelp.ithome.com.tw/upload/images/20200917/20120826A5q7a8riTw.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20200917/20120826A5q7a8riTw.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/PypjzKTUqLo">Unsplash Roman Bozhko</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://apidock.com/ruby/Enumerable/chunk">Ruby - apidock Chunk</a></li><li><a href="https://apidock.com/ruby/String/squeeze">Ruby - apidock Squeeze</a></li></ul></li><li>JavaScript<ul><li><a href="https://www.samanthaming.com/tidbits/83-4-ways-to-convert-string-to-character-array/">JS - 4 Ways to Convert String to Character Array in JavaScript</a></li><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/push">JS - MDN Array.prototype.push</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">unique_in_order</span><span class="hljs-params">(iterable)</span></span><br>  (iterable.is_a?(String) ? iterable.split(<span class="hljs-string">&#x27;&#x27;</span>) : iterable)<br>    .chunk&#123; <span class="hljs-params">|s|</span> s &#125;<br>    .map(&amp;<span class="hljs-symbol">:first</span>)<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 2</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">unique_in_order</span><span class="hljs-params">(iterable)</span></span><br>  (iterable.is_a?(String) ? iterable.chars : iterable)<br>    .chunk &#123; <span class="hljs-params">|s|</span> s &#125;<br>    .map(&amp;<span class="hljs-symbol">:first</span>)<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 3</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">unique_in_order</span><span class="hljs-params">(iterable)</span></span><br>  iterable.is_a?(String) ? iterable.squeeze.split(<span class="hljs-string">&#x27;&#x27;</span>) : iterable.uniq<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-keyword">var</span> uniqueInOrder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">iterable</span>)</span>&#123;<br>  <span class="hljs-keyword">var</span> result = [];<br>  <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; iterable.length; i++) &#123;<br>    <span class="hljs-keyword">if</span> (iterable[i] != iterable[i+<span class="hljs-number">1</span>]) result.push(iterable[i]);<br>  &#125;<br>  <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-comment">// Solution 2</span><br><span class="hljs-keyword">var</span> uniqueInOrder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">iterable</span>)</span>&#123;<br>  <span class="hljs-keyword">return</span> [...iterable].filter(<span class="hljs-function">(<span class="hljs-params">i, index</span>) =&gt;</span> i !== iterable[index-<span class="hljs-number">1</span>])<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>見習村01 - Multiples of 3 or 5</title>
    <link href="/2020/09/16/codewars01/"/>
    <url>/2020/09/16/codewars01/</url>
    
    <content type="html"><![CDATA[<h1 id="01-Multiples-of-3-or-5"><a href="#01-Multiples-of-3-or-5" class="headerlink" title="01 - Multiples of 3 or 5"></a>01 - Multiples of 3 or 5</h1><p>Don’t say so much, just coding…</p><h2 id="Instruction"><a href="#Instruction" class="headerlink" title="Instruction"></a>Instruction</h2><p>If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.</p><p>Finish the solution so that it returns the sum of all the multiples of 3 or 5 below the number passed in.</p><blockquote><p>Note: If the number is a multiple of both 3 and 5, only count it once. Also, if a number is negative, return 0(for languages that do have them)</p></blockquote><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><h4 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">solution</span><span class="hljs-params">(number)</span></span><br>  <span class="hljs-comment"># put your solution here</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="Sample-Testing"><a href="#Sample-Testing" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">test</span><span class="hljs-params">(actual, expected)</span></span><br>  Test.assert_equals(actual, expected)<br><span class="hljs-keyword">end</span><br><br>Test.describe(<span class="hljs-string">&quot;example tests&quot;</span>) <span class="hljs-keyword">do</span><br>  test(solution(<span class="hljs-number">10</span>), <span class="hljs-number">23</span>)<br>  test(solution(<span class="hljs-number">20</span>), <span class="hljs-number">78</span>)<br>  test(solution(<span class="hljs-number">200</span>), <span class="hljs-number">9168</span>)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><h4 id="Init-1"><a href="#Init-1" class="headerlink" title="Init"></a>Init</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">number</span>)</span>&#123;<br>  <span class="hljs-comment">// put your solution here</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Sample-Testing-1"><a href="#Sample-Testing-1" class="headerlink" title="Sample Testing"></a>Sample Testing</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">test</span>(<span class="hljs-params">n, expected</span>) </span>&#123;<br>  <span class="hljs-keyword">let</span> actual = solution(n)<br>  Test.assertEquals(actual, expected, <span class="hljs-string">`Expected <span class="hljs-subst">$&#123;expected&#125;</span>, got <span class="hljs-subst">$&#123;actual&#125;</span>`</span>)<br>&#125;<br><br>Test.describe(<span class="hljs-string">&quot;basic tests&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>  test(<span class="hljs-number">10</span>,<span class="hljs-number">23</span>)<br>&#125;)<br></code></pre></td></tr></table></figure><hr><h1 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h1><p>想法(1): 從題目概述 <code>natural numbers below 10</code> 中開始模擬會出現的數字<br>想法(2): 計算兩者的加總，可以知道在算 3 or 5 的倍數<br>想法(3): 處理級距，需要從 1 ~ <code>參數</code> 然後再來選取符合項目，並加總</p><p><img src="https://ithelp.ithome.com.tw/upload/images/20200916/20120826ve4OpCsRKr.jpg" alt="https://ithelp.ithome.com.tw/upload/images/20200916/20120826ve4OpCsRKr.jpg"><br>圖片來源：<a href="https://unsplash.com/photos/wn-KYaHwcis">Unsplash Jesus Kiteque</a></p><h3 id="Hint-amp-Reference"><a href="#Hint-amp-Reference" class="headerlink" title="Hint &amp; Reference"></a>Hint &amp; Reference</h3><ul><li>Ruby <ul><li><a href="https://stackoverflow.com/questions/5772964/start-a-loop-from-1">Ruby - Start a loop from 1</a></li><li><a href="https://apidock.com/ruby/Array/select">Ruby - apidock Select</a></li><li><a href="https://apidock.com/ruby/Enumerable/reduce">Ruby - apidock Reduce</a></li><li><a href="https://stackoverflow.com/questions/1961030/ruby-ampersand-colon-shortcut">Ruby - Ruby ampersand colon shortcut</a></li></ul></li><li>JavaScript<ul><li><a href="https://www.samanthaming.com/tidbits/83-4-ways-to-convert-string-to-character-array/">JS - 4 Ways to Convert String to Character Array in JavaScript</a></li><li><a href="https://www.samanthaming.com/tidbits/78-iterables-to-array-using-spread/">JS - Convert Iterables to Array using Spread</a></li><li><a href="https://www.samanthaming.com/tidbits/47-arrow-functions-cheatsheet/">JS - ES6 Arrow Functions Cheatsheet</a></li></ul></li></ul><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h3 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">solution</span><span class="hljs-params">(number)</span></span><br>  [*<span class="hljs-number">1</span>..number-<span class="hljs-number">1</span>].select&#123; <span class="hljs-params">|n|</span> n % <span class="hljs-number">3</span> == <span class="hljs-number">0</span> <span class="hljs-params">||</span> n % <span class="hljs-number">5</span> == <span class="hljs-number">0</span>&#125;.reduce(&amp;<span class="hljs-symbol">:+</span>)<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 2</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">solution</span><span class="hljs-params">(number)</span></span><br>  [*<span class="hljs-number">1</span>...number].select&#123; <span class="hljs-params">|n|</span> n % <span class="hljs-number">3</span> == <span class="hljs-number">0</span> <span class="hljs-params">||</span> n % <span class="hljs-number">5</span> == <span class="hljs-number">0</span>&#125;.reduce(&amp;<span class="hljs-symbol">:+</span>)<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 3</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">solution</span><span class="hljs-params">(number)</span></span><br>  (<span class="hljs-number">1</span>...number).select&#123; <span class="hljs-params">|n|</span> n % <span class="hljs-number">3</span> == <span class="hljs-number">0</span> <span class="hljs-params">||</span> n % <span class="hljs-number">5</span> == <span class="hljs-number">0</span>&#125;.inject(&amp;<span class="hljs-symbol">:+</span>)<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># Solution 4</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">solution</span><span class="hljs-params">(number)</span></span><br>  (<span class="hljs-number">1</span>...number).select&#123; <span class="hljs-params">|n|</span> (n % <span class="hljs-number">5</span>).zero? <span class="hljs-params">||</span> (n % <span class="hljs-number">3</span>).zero?&#125;.inject(<span class="hljs-symbol">:+</span>)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="Javascript-1"><a href="#Javascript-1" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Solution 1</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">number</span>)</span>&#123;<br>  <span class="hljs-keyword">let</span> sum = <span class="hljs-number">0</span>;<br><br>  <span class="hljs-keyword">for</span>(i = <span class="hljs-number">1</span>; i &lt; number; i++)&#123;<br>      <span class="hljs-keyword">if</span>( i % <span class="hljs-number">3</span> == <span class="hljs-number">0</span> || i % <span class="hljs-number">5</span> == <span class="hljs-number">0</span>)&#123;<br>        sum += i;<br>      &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> sum;<br>&#125;<br><br><span class="hljs-comment">// Solution 2</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">number</span>)</span>&#123;<br>  <span class="hljs-keyword">return</span> number &lt; <span class="hljs-number">3</span> ? <span class="hljs-number">0</span><br>    : [...Array(number).keys()]<br>      .map(<span class="hljs-function"><span class="hljs-params">int</span> =&gt;</span> (int % <span class="hljs-number">3</span> === <span class="hljs-number">0</span> || int % <span class="hljs-number">5</span> === <span class="hljs-number">0</span>) ? int : <span class="hljs-number">0</span> )<br>      .reduce(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a + b )<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>12th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>12th鐵人賽</tag>
      
      <tag>刷題見習村</tag>
      
      <tag>CodeWars</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>J 筆記 - Spread with Array</title>
    <link href="/2020/07/20/zyx0720/"/>
    <url>/2020/07/20/zyx0720/</url>
    
    <content type="html"><![CDATA[<h1 id="5-Use-Case-of-Spread-with-Array"><a href="#5-Use-Case-of-Spread-with-Array" class="headerlink" title="5 Use Case of Spread with Array"></a>5 Use Case of Spread with Array</h1><p>這篇將介紹，常用的 <code>Spread</code> 在陣列中的五種情況，可以拿來複製、合併或者是作轉換為陣列。首先，當然要先來了解 ES6 的 <code>...</code> Spread 代表是什麼？還有它的特性。</p><h2 id="Understanding-Spread"><a href="#Understanding-Spread" class="headerlink" title="Understanding Spread"></a>Understanding Spread</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sum</span>(<span class="hljs-params">x, y, z</span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> x + y + z;<br>&#125;<br><br><span class="hljs-keyword">const</span> numbers = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>];<br><br><span class="hljs-built_in">console</span>.log(sum(...numbers));<br><span class="hljs-comment">// expected output: 6</span><br><br><span class="hljs-built_in">console</span>.log(sum.apply(<span class="hljs-literal">null</span>, numbers));<br><span class="hljs-comment">// expected output: 6</span><br></code></pre></td></tr></table></figure><blockquote><p>MDN: Spread syntax allows an iterable such as an array expression or string to be expanded in places where zero or more arguments (for function calls) or elements (for array literals) are expected, or an object expression to be expanded in places where zero or more key-value pairs (for object literals) are expected.</p></blockquote><h2 id="Spread-Destructuring-assignment"><a href="#Spread-Destructuring-assignment" class="headerlink" title="Spread = Destructuring assignment?"></a>Spread = Destructuring assignment?</h2><p>什麼意思呢？其實，除了解構賦值之外，舉個例子像是， Spread 會把現在 Array 拿掉，然後再把裡面包住的東西放到另一個 Array 中。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">[<br>  ...[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>] <span class="hljs-comment">// ... &gt; []</span><br>]<br><br><span class="hljs-comment">/*  拿掉包住 [1, 2, 3] 的 Array */</span><br>[<br>  <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span><br>]<br></code></pre></td></tr></table></figure><h2 id="Array-Manipulation"><a href="#Array-Manipulation" class="headerlink" title="Array Manipulation"></a>Array Manipulation</h2><ol><li>Use Spread for Merging Array</li></ol><p>如果有兩個陣列需要把他合成一個，或許之前會是這樣子做，但會有一點瑕疵…</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> array1 = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>];<br><span class="hljs-keyword">const</span> array2 = [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>];<br><br><span class="hljs-keyword">const</span> merge = [array1, array2];<br><span class="hljs-comment">// [ [1, 2, 3], [4, 5, 6] ]</span><br></code></pre></td></tr></table></figure><p>用 <code>Spread</code> 來做的話</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> spread_merge = [<br>  ...array1,<br>  ...array2<br>];<br><span class="hljs-comment">// [1, 2, 3, 4, 5, 6]</span><br></code></pre></td></tr></table></figure><ol start="2"><li>Clone Array</li></ol><p>這部分在之前的系列筆記中其實已經大致上都有說到過，如果還沒有看過的可以去看一下 <a href="https://chestertang.site/2020/04/18/zyx0418/">Clone an Array</a>。另外，還有這一篇就在更複雜一些 <a href="https://chestertang.site/2020/04/29/zyx0429/">Deep Clone Array</a></p><p>其中的觀念在，會不會影響到原本被複製的陣列，什麼時候是 Pass by reference、什麼時候是 Pass by value 而什麼情況下又會出現 JS 獨有的 Pass by sharing 呢？</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> original = [<span class="hljs-string">&#x27;zero&#x27;</span>, <span class="hljs-string">&#x27;one&#x27;</span>];<br><span class="hljs-keyword">const</span> newArray = original;<br><br>original; <span class="hljs-comment">// [&#x27;zero&#x27;, &#x27;one&#x27;]</span><br>newArray; <span class="hljs-comment">// [&#x27;zero&#x27;, &#x27;one&#x27;]</span><br></code></pre></td></tr></table></figure><p>看起來沒什麼問題，但如果只要改新陣列裡面的元素時，原本的陣列也會被更動了…</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">newArray[<span class="hljs-number">1</span>] = <span class="hljs-string">&#x27;💩&#x27;</span>;<br><br>newArray;<br><span class="hljs-comment">// [&#x27;zero&#x27;, &#x27;💩&#x27;]</span><br><br>original;<br><span class="hljs-comment">// [&#x27;zero&#x27;, &#x27;💩&#x27;]... </span><br></code></pre></td></tr></table></figure><h3 id="Cloning-Array-the-Right-Way"><a href="#Cloning-Array-the-Right-Way" class="headerlink" title="Cloning Array the Right Way"></a>Cloning Array the Right Way</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> original = [<span class="hljs-string">&#x27;zero&#x27;</span>, <span class="hljs-string">&#x27;one&#x27;</span>];<br><span class="hljs-keyword">const</span> newArray = [...original];<br><br>newArray[<span class="hljs-number">1</span>] = <span class="hljs-string">&#x27;💩&#x27;</span>;<br><br>newArray;<br><span class="hljs-comment">// [&#x27;zero&#x27;, &#x27;💩&#x27;]</span><br>original;<br><span class="hljs-comment">// [&#x27;zero&#x27;, &#x27;one&#x27;]</span><br></code></pre></td></tr></table></figure><ol start="3"><li>Iterables to Array</li></ol><p>字串的部分就很好理解，也沒有什麼其他多變的情況…</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> string = <span class="hljs-string">&#x27;hi&#x27;</span>;<br><br><span class="hljs-keyword">const</span> array = [...string];<br><br>array;<br><span class="hljs-comment">// [ &#x27;h&#x27; , &#x27;i&#x27; ]</span><br></code></pre></td></tr></table></figure><ol start="4"><li>Set to Array</li></ol><p>The Set object lets you store unique values of any type, whether primitive values or object references.</p><blockquote><p>Set objects are collections of values. You can iterate through the elements of a set in insertion order. A value in the Set may only occur once; it is unique in the Set’s collection.</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> set = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]);<br><br>set;<br><span class="hljs-comment">// Set(3) &#123;1, 2, 3&#125;</span><br><br><span class="hljs-keyword">const</span> array = [...set];<br><br>array;<br><span class="hljs-comment">// [1, 2, 3]</span><br></code></pre></td></tr></table></figure><ol start="5"><li>Node List to Array</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> nodeList = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;p&#x27;</span>);<br><br>nodeList;<br><span class="hljs-comment">// [p, p, p]</span><br><br><span class="hljs-keyword">const</span> array = [...nodeList];<br><br>array;<br></code></pre></td></tr></table></figure><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax">MDN: Spread syntax (…)</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set">MDN: Set</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>J 筆記 - Async/Await in Array</title>
    <link href="/2020/05/22/zyx0522/"/>
    <url>/2020/05/22/zyx0522/</url>
    
    <content type="html"><![CDATA[<h1 id="Async-Await-in-Array-Loops"><a href="#Async-Await-in-Array-Loops" class="headerlink" title="Async/Await in Array Loops"></a>Async/Await in Array Loops</h1><p>隨著 <code>ES6</code> 的 <code>Promise</code> 解決 callbacks hell 的問題後，取得代之的就是 <code>Es7</code> 的 <code>Async/Await</code>，都是為了達成 AJAX 獲得更好的體驗。這篇簡單紀錄一下使用 <code>Async/Await</code> 在迴圈裡面遇到的問題，以及該如何解決，以下就以三個例子來舉例：</p><h2 id="ForEach"><a href="#ForEach" class="headerlink" title="ForEach"></a>ForEach</h2><p>如果是 <code>ForEach</code> 搭配 <code>Async/Await</code> 的時候，會發生什麼事情呢？我們直接來深入了解吧！</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> urls = [<br>  <span class="hljs-string">&#x27;https://jsonplaceholder.typicode.com/todos/1&#x27;</span>,<br>  <span class="hljs-string">&#x27;https://jsonplaceholder.typicode.com/todos/2&#x27;</span>,<br>  <span class="hljs-string">&#x27;https://jsonplaceholder.typicode.com/todos/3&#x27;</span><br>];<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getTodos</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">await</span> urls.forEach(<span class="hljs-keyword">async</span> (url, idx) =&gt; &#123; <br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`Received Todo <span class="hljs-subst">$&#123;idx+<span class="hljs-number">1</span>&#125;</span>:`</span>, <span class="hljs-keyword">await</span> fetch(url));<br>  &#125;);<br>  <br>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Finished!&#x27;</span>);<br>&#125;<br><br>getTodos();<br></code></pre></td></tr></table></figure><p>雖然程式碼都沒有任何錯誤，也不會噴錯跑不成功，但是相信眼尖的你一定會注意 <code>Finished!</code> 居然在 <code>await urls.forEach</code> 之前就執行了！不是說好的 <code>async</code> 要 <code>await</code> 嗎？誰跟你說好～如以下的結果所示：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Promise &#123;&lt;resolved&gt;: undefined&#125;</span><br><br>Finished!<br>Received Todo <span class="hljs-number">1</span>, <span class="hljs-attr">Response</span>: &#123; <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;cors&quot;</span>, <span class="hljs-attr">url</span>: <span class="hljs-string">&quot;https://jsonplaceholder.typicode.com/todos/1&quot;</span>, <span class="hljs-attr">redirected</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">status</span>: <span class="hljs-number">200</span>, <span class="hljs-attr">ok</span>: <span class="hljs-literal">true</span>, … &#125;<br>Received Todo <span class="hljs-number">3</span>, <span class="hljs-attr">Response</span>: &#123; <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;cors&quot;</span>, <span class="hljs-attr">url</span>: <span class="hljs-string">&quot;https://jsonplaceholder.typicode.com/todos/3&quot;</span>, <span class="hljs-attr">redirected</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">status</span>: <span class="hljs-number">200</span>, <span class="hljs-attr">ok</span>: <span class="hljs-literal">true</span>, … &#125;<br>Received Todo <span class="hljs-number">2</span>, <span class="hljs-attr">Response</span>: &#123; <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;cors&quot;</span>, <span class="hljs-attr">url</span>: <span class="hljs-string">&quot;https://jsonplaceholder.typicode.com/todos/2&quot;</span>, <span class="hljs-attr">redirected</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">status</span>: <span class="hljs-number">200</span>, <span class="hljs-attr">ok</span>: <span class="hljs-literal">true</span>, … &#125;<br></code></pre></td></tr></table></figure><p>那不能用 <code>ForEach</code> 我們該如何解決呢？來看看底下的兩種方式吧！</p><h2 id="Map-Promise-all"><a href="#Map-Promise-all" class="headerlink" title="Map + Promise.all"></a>Map + Promise.all</h2><h3 id="Promise-all"><a href="#Promise-all" class="headerlink" title="Promise.all()"></a><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Promise/all">Promise.all()</a></h3><blockquote><p>Promise.all() 方法回傳一個 Promise 物件，當引數 iterable 中所有的 promises 都被實現（resolved），或引數 iterable 不含任何 promise 時，被實現。或以第一個被拒絕的 promise 的原因被拒絕。</p></blockquote><ul><li>一個已被實現（already resolved）的 <code>Promise</code>，若傳入的 iterable 為空。</li><li>一個非同步地被實現（asynchronously resolved）的 Promise 若傳入的 iterable 不含 promise。注意，Google Chrome 58 對此情形回傳一個已被解決的 promise。</li><li>一個擱置（pending）的 Promise，對所有剩餘情形。此 promise 接著被非同步地被 resolved/rejected（只要堆疊為空）當 iterable 中所有的 promises 都被實現，或其中一個被拒絕。參見下方關於”Promise.all 的非同步與同步性質”的例子。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> urls = [<br>  <span class="hljs-string">&#x27;https://jsonplaceholder.typicode.com/todos/1&#x27;</span>,<br>  <span class="hljs-string">&#x27;https://jsonplaceholder.typicode.com/todos/2&#x27;</span>,<br>  <span class="hljs-string">&#x27;https://jsonplaceholder.typicode.com/todos/3&#x27;</span><br>];<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getTodos</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">const</span> promises = urls.map(<span class="hljs-keyword">async</span> (url, idx) =&gt; <br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`Received Todo <span class="hljs-subst">$&#123;idx+<span class="hljs-number">1</span>&#125;</span>:`</span>, <span class="hljs-keyword">await</span> fetch(url))<br>  );<br><br>  <span class="hljs-keyword">await</span> <span class="hljs-built_in">Promise</span>.all(promises);<br><br>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Finished!&#x27;</span>);<br>&#125;<br><br>getTodos();<br></code></pre></td></tr></table></figure><h2 id="For…of"><a href="#For…of" class="headerlink" title="For…of"></a>For…of</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> urls = [<br>  <span class="hljs-string">&#x27;https://jsonplaceholder.typicode.com/todos/1&#x27;</span>,<br>  <span class="hljs-string">&#x27;https://jsonplaceholder.typicode.com/todos/2&#x27;</span>,<br>  <span class="hljs-string">&#x27;https://jsonplaceholder.typicode.com/todos/3&#x27;</span><br>];<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getTodos</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> [idx, url] <span class="hljs-keyword">of</span> urls.entries()) &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`Received Todo <span class="hljs-subst">$&#123;idx+<span class="hljs-number">1</span>&#125;</span>:`</span>, <span class="hljs-keyword">await</span> fetch(url));<br>  &#125;<br><br>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Finished!&#x27;</span>);<br>&#125;<br><br>getTodos();<br></code></pre></td></tr></table></figure><p>上面兩種方法都可以得到：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Received Todo <span class="hljs-number">1</span>, <span class="hljs-attr">Response</span>: &#123; <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;cors&quot;</span>, <span class="hljs-attr">url</span>: <span class="hljs-string">&quot;https://jsonplaceholder.typicode.com/todos/1&quot;</span>, <span class="hljs-attr">redirected</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">status</span>: <span class="hljs-number">200</span>, <span class="hljs-attr">ok</span>: <span class="hljs-literal">true</span>, … &#125;<br>Received Todo <span class="hljs-number">2</span>, <span class="hljs-attr">Response</span>: &#123; <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;cors&quot;</span>, <span class="hljs-attr">url</span>: <span class="hljs-string">&quot;https://jsonplaceholder.typicode.com/todos/2&quot;</span>, <span class="hljs-attr">redirected</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">status</span>: <span class="hljs-number">200</span>, <span class="hljs-attr">ok</span>: <span class="hljs-literal">true</span>, … &#125;<br>Received Todo <span class="hljs-number">3</span>, <span class="hljs-attr">Response</span>: &#123; <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;cors&quot;</span>, <span class="hljs-attr">url</span>: <span class="hljs-string">&quot;https://jsonplaceholder.typicode.com/todos/3&quot;</span>, <span class="hljs-attr">redirected</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">status</span>: <span class="hljs-number">200</span>, <span class="hljs-attr">ok</span>: <span class="hljs-literal">true</span>, … &#125;<br>Finished!<br></code></pre></td></tr></table></figure><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all">Promise.all()</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function">async function</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await">await</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach">Array.prototype.forEach()</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>J 筆記 - Clone an Object</title>
    <link href="/2020/05/05/zyx0505/"/>
    <url>/2020/05/05/zyx0505/</url>
    
    <content type="html"><![CDATA[<h1 id="J-筆記-Clone-an-Object"><a href="#J-筆記-Clone-an-Object" class="headerlink" title="J 筆記 - Clone an Object"></a>J 筆記 - Clone an Object</h1><p>雖然在 JavaScript 裡的物件型別是屬於 Passing by sharing，但正常來說如果沒有傳遞到另一物件的話，正常為 Passing by Address，因此沒有辦法直接用等號 <code>=</code> 來更改值、而會改到址。</p><h2 id="3-Ways-to-Clone-Objects"><a href="#3-Ways-to-Clone-Objects" class="headerlink" title="3 Ways to Clone Objects"></a>3 Ways to Clone Objects</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-built_in">Array</span> = &#123; <span class="hljs-attr">old</span>: <span class="hljs-string">&#x27;ES5&#x27;</span>, <span class="hljs-attr">new</span>: <span class="hljs-string">&#x27;ES6&#x27;</span> &#125;;<br><br><span class="hljs-comment">// &quot;Spread&quot;</span><br>&#123; ...Array &#125;;<br><br><span class="hljs-comment">// &quot;Object.assign&quot;</span><br><span class="hljs-built_in">Object</span>.assign(&#123;&#125;, <span class="hljs-built_in">Array</span>);<br><br><span class="hljs-comment">// &quot;JSON&quot;</span><br><span class="hljs-built_in">JSON</span>.parse(<span class="hljs-built_in">JSON</span>.stringify(<span class="hljs-built_in">Array</span>));<br><br><span class="hljs-comment">// RESULT:</span><br><span class="hljs-comment">// &#123; old: &#x27;ES5&#x27;, new: &#x27;ES6&#x27;&#125;;</span><br></code></pre></td></tr></table></figure><h2 id="Passing-by-Address"><a href="#Passing-by-Address" class="headerlink" title="Passing by Address"></a>Passing by Address</h2><p>還記得 <a href="https://ithelp.ithome.com.tw/articles/10191057">重新認識 JavaScript: Day 05 JavaScript 是「傳值」或「傳址」？</a> 吧？基本型別的更新與傳遞會以 <code>Passing by Value</code>，兩者是個是各自獨立的，而物件型別則是如同開頭所述，會更改到原本的實體，因為兩者根本是指向同一個實體的！</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> coin1 = &#123; <span class="hljs-attr">value</span>: <span class="hljs-number">10</span> &#125;;<br><span class="hljs-keyword">var</span> coin2 = coin1;<br><br>coin1.value = <span class="hljs-number">100</span>;<br><br><span class="hljs-built_in">console</span>.log( coin1.value );<br><span class="hljs-comment">// 100</span><br><span class="hljs-built_in">console</span>.log( coin2.value );<br><span class="hljs-comment">// 100</span><br></code></pre></td></tr></table></figure><h2 id="Passing-by-sharing"><a href="#Passing-by-sharing" class="headerlink" title="Passing by sharing"></a>Passing by sharing</h2><p>「Pass by sharing」的特點在於，當 function 的參數，如 <code>function changeValue(obj)&#123; ... &#125;</code> 中的 obj 被重新賦值的時候，外部變數的內容是不會被影響的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> coin1 = &#123; <span class="hljs-attr">value</span>: <span class="hljs-number">10</span> &#125;;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">changeValue</span>(<span class="hljs-params">obj</span>) </span>&#123;<br>  obj = &#123; <span class="hljs-attr">value</span>: <span class="hljs-number">123</span> &#125;; <span class="hljs-comment">// Assignment</span><br>&#125;<br><br>changeValue(coin1);<br><br><span class="hljs-built_in">console</span>.log(coin1);   <br><span class="hljs-comment">// &#123; value: 10 &#125;</span><br></code></pre></td></tr></table></figure><p>說了這麼多也知道了原因之後，以下就來介紹三種複製物件的方法。注意的是，Array 的複製也有探討到 <code>深層</code>、<code>淺層</code> 的問題，如同 <a href="https://chestertang.site/2020/04/29/zyx0429/">Deep Clone Array</a> ㄧ樣，JSON 的方式是可以複製到 <code>深層</code> 的，而其他兩種沒有辦法！</p><ol><li>Using Spread</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-built_in">Array</span> = &#123; <span class="hljs-attr">old</span>: <span class="hljs-string">&#x27;ES5&#x27;</span>, <span class="hljs-attr">new</span>: <span class="hljs-string">&#x27;ES6&#x27;</span> &#125;;<br><br><span class="hljs-keyword">const</span> SpreadCloneArray = &#123; ...Array &#125;;<br><br><span class="hljs-built_in">console</span>.log(SpreadCloneArray);<br><span class="hljs-comment">// &#123; old: &#x27;ES5&#x27;, new: &#x27;ES6&#x27; &#125;</span><br></code></pre></td></tr></table></figure><ol start="2"><li>Using Object.assign</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-built_in">Array</span> = &#123; <span class="hljs-attr">old</span>: <span class="hljs-string">&#x27;ES5&#x27;</span>, <span class="hljs-attr">new</span>: <span class="hljs-string">&#x27;ES6&#x27;</span> &#125;;<br><br><span class="hljs-keyword">const</span> Object_AssignCloneArray = <span class="hljs-built_in">Object</span>.assign(&#123;&#125;, <span class="hljs-built_in">Array</span>);<br><br><span class="hljs-built_in">console</span>.log(Object_AssignCloneArray);<br><span class="hljs-comment">// &#123; old: &#x27;ES5&#x27;, new: &#x27;ES6&#x27; &#125; </span><br></code></pre></td></tr></table></figure><ol start="3"><li>Using JSON</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-built_in">Array</span> = &#123; <span class="hljs-attr">old</span>: <span class="hljs-string">&#x27;ES5&#x27;</span>, <span class="hljs-attr">new</span>: <span class="hljs-string">&#x27;ES6&#x27;</span> &#125;;<br><br><span class="hljs-keyword">const</span> JSONArray = <span class="hljs-built_in">JSON</span>.parse(<span class="hljs-built_in">JSON</span>.stringify(<span class="hljs-built_in">Array</span>))<br><br><span class="hljs-built_in">console</span>.log(JSONArray);<br><span class="hljs-comment">// &#123; old: &#x27;ES5&#x27;, new: &#x27;ES6&#x27; &#125; </span><br></code></pre></td></tr></table></figure><blockquote><p>Lodash 在 deep clone 不只是適用於 Array 也同樣適用於 Object </p></blockquote><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign">Object.assign()</a></li><li><a href="https://stackoverflow.com/questions/122102/what-is-the-most-efficient-way-to-deep-clone-an-object-in-javascript">What is the most efficient way to deep clone an object in JavaScript?</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10191057">重新認識 JavaScript: Day 05 JavaScript 是「傳值」或「傳址」？</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>J 筆記 - Object to Array</title>
    <link href="/2020/05/04/zyx0504/"/>
    <url>/2020/05/04/zyx0504/</url>
    
    <content type="html"><![CDATA[<h1 id="J-筆記-Object-to-Array"><a href="#J-筆記-Object-to-Array" class="headerlink" title="J 筆記 - Object to Array"></a>J 筆記 - Object to Array</h1><p>繼之前的 <a href="https://chestertang.site/2020/04/13/zyx0413/">String to Array</a> 後，我們已經會了許多種將字串轉成陣列的方法。這篇將介紹如何將 Object 轉成 Array …</p><h2 id="Ancient"><a href="#Ancient" class="headerlink" title="Ancient"></a>Ancient</h2><p>在 ES6 以前，我們想將 Object 變成 Array 常常會這樣來使用，但其實這種方法真的不太好用！而且跟 Ruby 超級不合適的，宣告一個空的陣列，然後塞東西進去，通常都可以有更好的方法可以取代掉這種寫法…</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> ancientObjects = &#123;<br>  obj1: <span class="hljs-string">&#x27;ancient1&#x27;</span>,<br>  obj2: <span class="hljs-string">&#x27;ancient2&#x27;</span><br>&#125;;<br><br><span class="hljs-keyword">var</span> emptyArray = [];<br><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> ancientObject <span class="hljs-keyword">in</span> ancientObjects) &#123;<br>  <span class="hljs-keyword">if</span> (ancientObjects.hasOwnProperty(ancientObject)) &#123;<br>    emptyArray.push(ancientObjects);<br>  &#125;<br>&#125;<br><br>emptyArray; <br><span class="hljs-comment">// [ &#x27;ancient1&#x27;, &#x27;ancient2&#x27; ]</span><br></code></pre></td></tr></table></figure><blockquote><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty">Object.prototype.hasOwnProperty()</a></p></blockquote><h2 id="ES6-Object-keys"><a href="#ES6-Object-keys" class="headerlink" title="ES6 - Object.keys()"></a>ES6 - Object.keys()</h2><p>ES6後，有了 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys">Object.keys()</a> 這個新方法，不過很奇怪的居然只有提供 <code>key</code>，卻沒有 <code>value</code>，意外覺得特別的詭異…</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> ES6Objects = &#123;<br>  ES6Obj1: <span class="hljs-string">&#x27;ES6-1&#x27;</span>,<br>  ES6Obj2: <span class="hljs-string">&#x27;ES6-2&#x27;</span><br>&#125;;<br><br><span class="hljs-built_in">Object</span>.keys(ES6Objects);<br><span class="hljs-comment">// [ &#x27;ES6Obj1&#x27;, &#x27;ES6Obj2&#x27; ]</span><br><br></code></pre></td></tr></table></figure><h2 id="ES7-Object-values-Object-entries"><a href="#ES7-Object-values-Object-entries" class="headerlink" title="ES7 - Object.values() / Object.entries()"></a>ES7 - Object.values() / Object.entries()</h2><p>所以 ES7 就生出 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Object/values">Object.values()</a> 了，不只如此，還連 key + value 同時要印的 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries">Object.entries()</a> 都有（這樣才合理阿！！！</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">let</span> ES7Objects = &#123;<br>    ES7Obj1: <span class="hljs-string">&#x27;ES7-1&#x27;</span>,<br>    ES7Obj2: <span class="hljs-string">&#x27;ES7-2&#x27;</span><br>  &#125;;<br>  <br>  <span class="hljs-built_in">Object</span>.values(ES6Objects);<br>  <span class="hljs-comment">// [ &#x27;ES6-1&#x27;, &#x27;ES6-2&#x27; ]</span><br>  <span class="hljs-built_in">Object</span>.entries(ES7Objects);<br><span class="hljs-comment">// [ [&#x27;ES7Obj1&#x27;, &#x27;ES7-1&#x27;], [&#x27;ES7Obj2&#x27;, &#x27;ES7-2&#x27;] ]</span><br></code></pre></td></tr></table></figure><h2 id="Object-entries-Destructuring"><a href="#Object-entries-Destructuring" class="headerlink" title="Object.entries + Destructuring"></a>Object.entries + Destructuring</h2><p>解構開來其實就只是長這樣子而已，應該淺顯易懂吧～</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> ES7Objects = &#123;<br>  ES7Obj1: <span class="hljs-string">&#x27;ES7-1&#x27;</span>,<br>&#125;;<br><br><span class="hljs-keyword">const</span> objectArray = <span class="hljs-built_in">Object</span>.entries(ES7Objects);<br><br>objectArray.forEach(<span class="hljs-function">(<span class="hljs-params">[key, value]</span>) =&gt;</span> &#123;<br>  <span class="hljs-built_in">console</span>.log(key); <br>  <span class="hljs-comment">// &#x27;ES7Obj1&#x27;</span><br>  <span class="hljs-built_in">console</span>.log(value); <br>  <span class="hljs-comment">// &#x27;ES7-1&#x27;</span><br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="Object-fromEntries"><a href="#Object-fromEntries" class="headerlink" title="Object.fromEntries"></a>Object.fromEntries</h2><p>而本質上與 <code>Object.entries</code> 相反，我們今天想要從 Array 再返回去 Object，就可以使用 <code>Object.fromEntries</code> 這個方法…</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> ES7Array = [<br>  [<span class="hljs-string">&#x27;ES7Obj1&#x27;</span>, <span class="hljs-string">&#x27;ES7-1&#x27;</span>],<br>  [<span class="hljs-string">&#x27;ES7Obj2&#x27;</span>, <span class="hljs-string">&#x27;ES7-2&#x27;</span>],<br>];<br><br><span class="hljs-built_in">Object</span>.fromEntries(ES7Array);<br><span class="hljs-comment">// &#123; ES7Obj1: &#x27;ES7-1&#x27;, ES7Obj2: &#x27;ES7-2&#x27; &#125;</span><br></code></pre></td></tr></table></figure><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys">Object.keys()</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Object/values">Object.values()</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries">Object.entries()</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries">Object.fromEntries()</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>J 筆記 - Append Item to Array</title>
    <link href="/2020/04/30/zyx0430/"/>
    <url>/2020/04/30/zyx0430/</url>
    
    <content type="html"><![CDATA[<h1 id="J-筆記-Append-Item-to-Array"><a href="#J-筆記-Append-Item-to-Array" class="headerlink" title="J 筆記 - Append Item to Array"></a>J 筆記 - Append Item to Array</h1><p>在之前一系列有關 <a href="https://chestertang.site/categories/JavaScript/">Array</a> 的文章當中，有看到各種 clone Array 後，將新元素推進陣列會造成的結果，都直接以 <code>push</code> 來簡單舉例而已。</p><p>這篇將舉例 <code>易變的</code> (mutable)、<code>不易變的</code> (inmutable) 的五種方式，雖然實務上都會直接用 <code>inmutable</code> 的方法，但還是舉例 <code>mutable</code>，來增加自己印象，就算看到這樣的程式碼的時候，也會知道會造成的結果… </p><h2 id="易變的-mutable"><a href="#易變的-mutable" class="headerlink" title="易變的 (mutable)"></a><code>易變的</code> (mutable)</h2><p>透過 <code>push</code>、<code>splice</code>、<code>.length</code> 這三種方式的塞元素，會影響原始的陣列。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> array = [<span class="hljs-string">&#x27;ES5&#x27;</span>];<br><br>array.push(<span class="hljs-string">&#x27;ES6&#x27;</span>);<br>array.splice(array.length, <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;ES6&#x27;</span>);<br>array[array.length] = <span class="hljs-string">&#x27;ES6&#x27;</span>;<br><br><span class="hljs-built_in">console</span>.log(array);<br><span class="hljs-comment">// [&#x27;ES5&#x27;, &#x27;ES6&#x27;]</span><br></code></pre></td></tr></table></figure><h2 id="不易變的-inmutable"><a href="#不易變的-inmutable" class="headerlink" title="不易變的 (inmutable)"></a><code>不易變的</code> (inmutable)</h2><p>透過 <code>spread</code>、<code>concat</code> 兩種方式，會額外新增一個陣列，並且保持原本的陣列不受到更動。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> original = [<span class="hljs-string">&#x27;ES5&#x27;</span>];<br><span class="hljs-keyword">let</span> newArray;<br><br>newArray = original.concat(<span class="hljs-string">&#x27;ES6&#x27;</span>);<br>newArray = [...original, <span class="hljs-string">&#x27;ES6&#x27;</span>];<br><br><span class="hljs-built_in">console</span>.log(newArray);<br><span class="hljs-comment">// [&#x27;ES5&#x27;, &#x27;ES6&#x27;]</span><br><span class="hljs-built_in">console</span>.log(original);<br><span class="hljs-comment">// [&#x27;ES5&#x27;]</span><br></code></pre></td></tr></table></figure><hr><h2 id="3-Ways-to-Append-Item-to-Array-mutable"><a href="#3-Ways-to-Append-Item-to-Array-mutable" class="headerlink" title="3 Ways to Append Item to Array (mutable)"></a>3 Ways to Append Item to Array (mutable)</h2><p>接下來就來看一下將元素塞進陣列的 3 種變動的方式。</p><h3 id="Array-prototype-push"><a href="#Array-prototype-push" class="headerlink" title="Array.prototype.push()"></a>Array.prototype.push()</h3><p>將元素添加到數組陣列最後的最簡單方法是使用 <code>push</code></p><blockquote><p>The push() method adds one or more elements to the end of an array and returns the new length of the array.</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> array = [<span class="hljs-string">&#x27;ES5&#x27;</span>, <span class="hljs-string">&#x27;ES6&#x27;</span>];<br><span class="hljs-keyword">const</span> pushedArray = [<span class="hljs-string">&#x27;ES7&#x27;</span>, <span class="hljs-string">&#x27;ES8&#x27;</span>, <span class="hljs-string">&#x27;ES9&#x27;</span>];<br><br>array.push(<span class="hljs-string">&#x27;ES7&#x27;</span>, <span class="hljs-string">&#x27;ES8&#x27;</span>, <span class="hljs-string">&#x27;ES9&#x27;</span>);<br><span class="hljs-comment">// ES6</span><br>array.push(...pushedArray);<br><br><span class="hljs-built_in">console</span>.log(array); <br><span class="hljs-comment">// [&#x27;ES5&#x27;, &#x27;ES6&#x27;, &#x27;ES7&#x27;, &#x27;ES8&#x27;, &#x27;ES9&#x27;];</span><br></code></pre></td></tr></table></figure><h3 id="Array-prototype-splice"><a href="#Array-prototype-splice" class="headerlink" title="Array.prototype.splice()"></a>Array.prototype.splice()</h3><blockquote><p>The splice() method changes the contents of an array by removing or replacing existing elements and/or adding new elements in place.</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> array = [<span class="hljs-string">&#x27;ES5&#x27;</span>, <span class="hljs-string">&#x27;ES6&#x27;</span>];<br><br>array.splice(<br>  array.length, <span class="hljs-comment">// 陣列的最後</span><br>  <span class="hljs-number">0</span>,            <span class="hljs-comment">// 不更改原本陣列裡的元素 </span><br>  <span class="hljs-string">&#x27;ES7&#x27;</span>, <span class="hljs-string">&#x27;ES8&#x27;</span>, <span class="hljs-string">&#x27;ES9&#x27;</span><br>);<br><br><span class="hljs-built_in">console</span>.log(array); <br><span class="hljs-comment">// [&#x27;ES5&#x27;, &#x27;ES6&#x27;, &#x27;ES7&#x27;, &#x27;ES8&#x27;, &#x27;ES9&#x27;];</span><br></code></pre></td></tr></table></figure><h3 id="Array-length"><a href="#Array-length" class="headerlink" title="Array.length"></a>Array.length</h3><blockquote><p>The length property of an object which is an instance of type Array sets or returns the number of elements in that array. The value is an unsigned, 32-bit integer that is always numerically greater than the highest index in the array.</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> array = [<span class="hljs-string">&#x27;ES5&#x27;</span>, <span class="hljs-string">&#x27;ES6&#x27;</span>];<br><span class="hljs-keyword">const</span> length = array.length; <span class="hljs-comment">// 2</span><br><br>array[length] = <span class="hljs-string">&#x27;ES7&#x27;</span>;<br><br><span class="hljs-built_in">console</span>.log(zoo); <br><span class="hljs-comment">// [&#x27;ES5&#x27;, &#x27;ES6&#x27;, &#x27;ES7&#x27;];</span><br></code></pre></td></tr></table></figure><h2 id="2-Ways-to-Append-Item-to-Array-inmutable"><a href="#2-Ways-to-Append-Item-to-Array-inmutable" class="headerlink" title="2 Ways to Append Item to Array (inmutable)"></a>2 Ways to Append Item to Array (inmutable)</h2><p>2 種不變動將元素塞進陣列的方式。</p><h3 id="Array-prototype-concat"><a href="#Array-prototype-concat" class="headerlink" title="Array.prototype.concat()"></a>Array.prototype.concat()</h3><p>我們可以使用 <code>concat</code> 方法，透過接受值、陣列來添加多個元素。</p><blockquote><p>The concat() method is used to merge two or more arrays. This method does not change the existing arrays, but instead returns a new array.</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> array = [<span class="hljs-string">&#x27;ES5&#x27;</span>, <span class="hljs-string">&#x27;ES6&#x27;</span>];<br><span class="hljs-keyword">const</span> array2 = [<span class="hljs-string">&#x27;ES7&#x27;</span>, <span class="hljs-string">&#x27;ES8&#x27;</span>, <span class="hljs-string">&#x27;ES9&#x27;</span>];<br><br><span class="hljs-keyword">const</span> concatArray   = array.concat(<span class="hljs-string">&#x27;ES7&#x27;</span>);<br><span class="hljs-keyword">const</span> concatArray2  = array.concat(array2);<br><br><span class="hljs-built_in">console</span>.log(concatArray);<br><span class="hljs-comment">// [&#x27;ES5&#x27;, &#x27;ES6&#x27;, &#x27;ES7&#x27;]</span><br><span class="hljs-built_in">console</span>.log(concatArray2);<br><span class="hljs-comment">// [&#x27;ES5&#x27;, &#x27;ES6&#x27;, &#x27;ES7&#x27;, &#x27;ES8&#x27;, &#x27;ES9&#x27;]</span><br><br><span class="hljs-built_in">console</span>.log(array); <br><span class="hljs-comment">// [&#x27;ES5&#x27;, &#x27;ES6&#x27;]</span><br></code></pre></td></tr></table></figure><h3 id="Spread-syntax"><a href="#Spread-syntax" class="headerlink" title="Spread syntax"></a>Spread syntax</h3><p>我們可以使用 <code>Spread</code> 方法，將每個陣列元素變成為單個元素，這類似於的效果上方的 <code>concat</code></p><blockquote><p>Spread syntax allows an iterable such as an array expression or string to be expanded in places where zero or more arguments (for function calls) or elements (for array literals) are expected, or an object expression to be expanded in places where zero or more key-value pairs (for object literals) are expected.</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> array = [<span class="hljs-string">&#x27;ES5&#x27;</span>, <span class="hljs-string">&#x27;ES6&#x27;</span>];<br><span class="hljs-keyword">const</span> array1 = [<span class="hljs-string">&#x27;XXX&#x27;</span>, <span class="hljs-string">&#x27;XXX&#x27;</span>];<br><br><span class="hljs-comment">// const XXX = [array, array1];</span><br><span class="hljs-comment">// [ [&#x27;ES5&#x27;, &#x27;ES6&#x27;], [&#x27;XXX&#x27;, &#x27;XXX&#x27;] ]</span><br><br><span class="hljs-keyword">const</span> array2 = [...array, <span class="hljs-string">&#x27;ES7&#x27;</span>];<br><span class="hljs-keyword">const</span> array3 = [...array, <span class="hljs-string">&#x27;ES7&#x27;</span>, <span class="hljs-string">&#x27;ES8&#x27;</span>, <span class="hljs-string">&#x27;ES9&#x27;</span>];<br><br><span class="hljs-built_in">console</span>.log(array2);<br><span class="hljs-comment">// [&#x27;ES5&#x27;, &#x27;ES6&#x27;, &#x27;ES7&#x27;]</span><br> <span class="hljs-built_in">console</span>.log(array3);<br><span class="hljs-comment">// [&#x27;ES5&#x27;, &#x27;ES6&#x27;, &#x27;ES7&#x27;, &#x27;ES8&#x27;, &#x27;ES9&#x27;]</span><br><br><span class="hljs-built_in">console</span>.log(array); <br><span class="hljs-comment">// [&#x27;ES5&#x27;, &#x27;ES6&#x27;];</span><br></code></pre></td></tr></table></figure><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push">Array.prototype.push()</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice">Array.prototype.splice()</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/length">Array.length</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat">Array.prototype.concat()</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax">Spread syntax</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>J 筆記 - Deep Clone Array</title>
    <link href="/2020/04/29/zyx0429/"/>
    <url>/2020/04/29/zyx0429/</url>
    
    <content type="html"><![CDATA[<h1 id="J-筆記-Deep-Clone-Array"><a href="#J-筆記-Deep-Clone-Array" class="headerlink" title="J 筆記 - Deep Clone Array"></a>J 筆記 - Deep Clone Array</h1><p>之前有介紹過如何 <a href="https://chestertang.site/2020/04/18/zyx0418/">Clone an Array</a>，但可以知道的問題是，如果今天是 Array 裡面又有更深層的 Array 的話（Deep Array），再複製陣列上就會有點問題，也如同上篇的 Only one level 的結論。因此，這篇就來介紹兩種 Deep Clone Array 的方法吧！</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> nestedArray = [<span class="hljs-string">&#x27;ES5&#x27;</span>, [<span class="hljs-string">&#x27;ES6&#x27;</span>, [<span class="hljs-string">&#x27;ES7&#x27;</span>]], [<span class="hljs-string">&#x27;ES8&#x27;</span>]];<br><br><span class="hljs-comment">// Using JavaScript</span><br><span class="hljs-built_in">JSON</span>.parse(<span class="hljs-built_in">JSON</span>.stringify(nestedArray));<br><br><span class="hljs-comment">// Using Lodash</span><br>_.cloneDeep(nestedArray);<br><br><span class="hljs-comment">// Using Recursion</span><br><span class="hljs-keyword">const</span> clone = <span class="hljs-function">(<span class="hljs-params">items</span>) =&gt;</span> items.map(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> <span class="hljs-built_in">Array</span>.isArray(item) ? clone(item) : item);<br>clone(nestedArray);<br></code></pre></td></tr></table></figure><h2 id="Copying-a-Value-type"><a href="#Copying-a-Value-type" class="headerlink" title="Copying a Value type"></a>Copying a Value type</h2><p>先來個最基本的數組，這部分應該很好理解，宣告一個 <code>value</code>。而且如果我們更改 <code>valueCopy</code>，不會影響原本的 <code>value</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> value = <span class="hljs-number">9527</span>;<br><span class="hljs-keyword">let</span> cloneValue = value; <br><span class="hljs-comment">// clone value</span><br><br><span class="hljs-built_in">console</span>.log(cloneValue); <br><span class="hljs-comment">// 9527</span><br><br>cloneValue = <span class="hljs-number">100</span>;<br><span class="hljs-comment">// Change cloneValue</span><br><span class="hljs-built_in">console</span>.log(cloneValue);<br><span class="hljs-comment">// 100</span><br><br><span class="hljs-built_in">console</span>.log(value); <br><span class="hljs-comment">// 3</span><br></code></pre></td></tr></table></figure><h2 id="Copying-a-Reference-type"><a href="#Copying-a-Reference-type" class="headerlink" title="Copying a Reference type"></a>Copying a Reference type</h2><p>如果上篇所述，為什麼原始陣列也會受到影響？那是因為複製的不是數組本身，而是指向數組的記憶體位址。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> initarray = [<span class="hljs-string">&#x27;ES5&#x27;</span>, <span class="hljs-string">&#x27;ES6&#x27;</span>, <span class="hljs-string">&#x27;ES7&#x27;</span>];<br><br><span class="hljs-keyword">const</span> initarray2 = initarray;<br><br>initarray2.push(<span class="hljs-string">&#x27;❌&#x27;</span>);<br><br><span class="hljs-built_in">console</span>.log(initarray2);<br><span class="hljs-comment">// [&quot;ES5&quot;, &quot;ES6&quot;, &quot;ES7&quot;, &quot;❌&quot;]</span><br><br><span class="hljs-built_in">console</span>.log(initarray);<br><span class="hljs-comment">// [&quot;ES5&quot;, &quot;ES6&quot;, &quot;ES7&quot;, &quot;❌&quot;]</span><br></code></pre></td></tr></table></figure><p>因此，有了上篇的解決方案：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> initarray = [<span class="hljs-string">&#x27;ES5&#x27;</span>, <span class="hljs-string">&#x27;ES6&#x27;</span>, <span class="hljs-string">&#x27;ES7&#x27;</span>];<br><br><span class="hljs-keyword">const</span> initarray2 = [...initarray];<br><br>initarray2.push(<span class="hljs-string">&#x27;✔️&#x27;</span>);<br><br><span class="hljs-built_in">console</span>.log(initarray2);<br><span class="hljs-comment">// [&quot;ES5&quot;, &quot;ES6&quot;, &quot;ES7&quot;, &quot;✔️&quot;];</span><br><br><span class="hljs-built_in">console</span>.log(initarray);<br><span class="hljs-comment">// [&quot;ES5&quot;, &quot;ES6&quot;, &quot;ES7&quot;];</span><br></code></pre></td></tr></table></figure><h2 id="Deep-Clone"><a href="#Deep-Clone" class="headerlink" title="Deep Clone"></a>Deep Clone</h2><p>知道了上面的方法後，讓我們現在來看看透過 <code>Spread ...</code> 與 <code>Array.from</code> 雖然可以複製陣列，但只能複製 Only one level 的問題，而無法解決巢狀亦又或者是 <code>Deep Clone</code>。</p><p>可以發現，原本的 <code>nestedArray</code> 的陣列一並沒有改變 <code>ES5</code>，這很符合我們上邊敘述複製 Only one Level 的方法，不過後面的 <code>ES6</code> 就被改為 <code>Deep!!!</code> 了！</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> nestedArray = [<span class="hljs-string">&#x27;ES5&#x27;</span>, [<span class="hljs-string">&#x27;ES6&#x27;</span>, [<span class="hljs-string">&#x27;ES7&#x27;</span>]], [<span class="hljs-string">&#x27;ES8&#x27;</span>]];<br><span class="hljs-keyword">const</span> copynestedArray = [...nestedArray];<br><br><span class="hljs-comment">// Make some changes</span><br>copynestedArray[<span class="hljs-number">0</span>] = <span class="hljs-string">&#x27;ES0&#x27;</span>;<br>copynestedArray[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>] = <span class="hljs-string">&#x27;Deep!!!&#x27;</span>;<br><span class="hljs-built_in">console</span>.log(copynestedArray); <span class="hljs-comment">// [&#x27;ES0&#x27;, [&#x27;Deep!!!&#x27;, [&#x27;ES7&#x27;]], [&#x27;ES8&#x27;]]</span><br><br><span class="hljs-built_in">console</span>.log(nestedArray);<br><span class="hljs-comment">// [&#x27;ES5&#x27;, [&#x27;Deep!!!&#x27;, [&#x27;ES7&#x27;]], [&#x27;ES8&#x27;]]</span><br></code></pre></td></tr></table></figure><h2 id="JSON-amp-Recursion-amp-lodash"><a href="#JSON-amp-Recursion-amp-lodash" class="headerlink" title="JSON &amp; Recursion &amp; lodash"></a>JSON &amp; Recursion &amp; lodash</h2><p>接下來，我們來看看透過 <code>JSON</code> 的實作結果，如果有興趣看 <code>lodash</code> 的方法也可以去官網查看，這是一套滿多人在使用，可以更簡潔寫 code 的 js 套件。</p><blockquote><p><a href="https://lodash.com/docs/">https://lodash.com/docs/</a></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> nestedArray = [<span class="hljs-string">&#x27;ES5&#x27;</span>, [<span class="hljs-string">&#x27;ES6&#x27;</span>, [<span class="hljs-string">&#x27;ES7&#x27;</span>]], [<span class="hljs-string">&#x27;ES8&#x27;</span>]];<br><span class="hljs-keyword">let</span> JSONcopynestedArray = <span class="hljs-built_in">JSON</span>.parse(<span class="hljs-built_in">JSON</span>.stringify(nestedArray)); <br><br><span class="hljs-comment">// Make some changes</span><br>JSONcopynestedArray[<span class="hljs-number">0</span>] = <span class="hljs-string">&#x27;ES0&#x27;</span>;<br>JSONcopynestedArray[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>] = <span class="hljs-string">&#x27;Deep!!!&#x27;</span>;<br><span class="hljs-built_in">console</span>.log(JSONcopynestedArray); <span class="hljs-comment">// [&#x27;ES0&#x27;, [&#x27;Deep!!!&#x27;, [&#x27;ES7&#x27;]], [&#x27;ES8&#x27;]]</span><br><br><span class="hljs-comment">// ✔️ Nested array NOT affected</span><br><span class="hljs-built_in">console</span>.log(nestedArray); <span class="hljs-comment">// [&#x27;ES5&#x27;, [&#x27;ES6&#x27;, [&#x27;ES7&#x27;]], [&#x27;ES8&#x27;]]</span><br></code></pre></td></tr></table></figure><p>另外，也可以使用 <code>Recursion 遞迴</code> 來完成複製</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> clone = <span class="hljs-function">(<span class="hljs-params">items</span>) =&gt;</span> items.map(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> <span class="hljs-built_in">Array</span>.isArray(item) ? clone(item) : item);<br><br><span class="hljs-keyword">const</span> nestedArray = [<span class="hljs-string">&#x27;ES5&#x27;</span>, [<span class="hljs-string">&#x27;ES6&#x27;</span>, [<span class="hljs-string">&#x27;ES7&#x27;</span>]], [<span class="hljs-string">&#x27;ES8&#x27;</span>]];<br><span class="hljs-keyword">var</span> RecursionArray = clone(nestedArray)<br><br><span class="hljs-comment">// Make some changes</span><br>RecursionArray[<span class="hljs-number">0</span>] = <span class="hljs-string">&#x27;ES0&#x27;</span>;<br>RecursionArray[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>] = <span class="hljs-string">&#x27;Deep!!!&#x27;</span>;<br><span class="hljs-built_in">console</span>.log(RecursionArray); <span class="hljs-comment">// [ &#x27;ES0&#x27;, [ &#x27;Deep!!!&#x27;, [&#x27;ES7&#x27;] ], [&#x27;ES8&#x27;] ]</span><br><br><span class="hljs-comment">// ✔️ Nested array NOT affected</span><br><span class="hljs-built_in">console</span>.log(nestedArray); <span class="hljs-comment">// [&#x27;ES5&#x27;, [&#x27;ES6&#x27;, [&#x27;ES7&#x27;]], [&#x27;ES8&#x27;]];</span><br></code></pre></td></tr></table></figure><h2 id="Values-Not-Compatible-with-JSON"><a href="#Values-Not-Compatible-with-JSON" class="headerlink" title="Values Not Compatible with JSON"></a>Values Not Compatible with JSON</h2><blockquote><p>Note!!! 值得注意的是，如果數值與 JSON 不兼容，轉譯的時候會出現錯誤</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">copynestedArray</span>(<span class="hljs-params">array</span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-built_in">JSON</span>.parse(<span class="hljs-built_in">JSON</span>.stringify(array));<br>&#125;<br><br>copynestedArray([<span class="hljs-number">1</span>, <span class="hljs-literal">undefined</span>, <span class="hljs-number">2</span>]) <span class="hljs-comment">// [1, null, 2]</span><br>copynestedArray([<span class="hljs-built_in">document</span>.body, <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;p&#x27;</span>)]) <span class="hljs-comment">// [&#123;&#125;, &#123;&#125;]</span><br></code></pre></td></tr></table></figure><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify">JSON.stringify()</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse">JSON.parse()</a></li><li><a href="https://lodash.com/docs/4.17.15#cloneDeep">_.cloneDeep(value)</a></li><li><a href="https://stackoverflow.com/questions/597588/how-do-you-clone-an-array-of-objects-in-javascript">How do you clone an Array of Objects in Javascript?</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>J 筆記 - Remove Array Dup</title>
    <link href="/2020/04/19/zyx0419/"/>
    <url>/2020/04/19/zyx0419/</url>
    
    <content type="html"><![CDATA[<h1 id="J-筆記-ES6-Remove-Array-Duplicates"><a href="#J-筆記-ES6-Remove-Array-Duplicates" class="headerlink" title="J 筆記 - ES6 Remove Array Duplicates"></a>J 筆記 - ES6 Remove Array Duplicates</h1><p>在 Ruby 裡面要做這件事情真的方便許多直接 <code>uniq</code> 就可以完成，但常常被寫好的 <code>method</code> 慣壞了卻想不太到 JS 裡頭該怎麼實作，所以整理一些 <code>Remove Array Duplicates</code> 的方法…</p><h2 id="3-ways-in-ES6"><a href="#3-ways-in-ES6" class="headerlink" title="3 ways in ES6"></a>3 ways in ES6</h2><p>總共在 ES6 裡面有 3 種方法可以實作，而我最喜歡的莫過於 <code>Set</code>，又短又不用想到底裡面做了什麼，不像 <code>filter</code>、<code>reduce</code>，另外也覺得有點像 Ruby 的 <code>uniq</code>，所以寫起來快速又實用～</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> array = [<span class="hljs-string">&#x27;Remove&#x27;</span>, <span class="hljs-string">&#x27;Remove&#x27;</span>, <span class="hljs-string">&#x27;ES5&#x27;</span>, <span class="hljs-string">&#x27;ES6&#x27;</span>, <span class="hljs-string">&#x27;Remove&#x27;</span>, <span class="hljs-string">&#x27;ES7&#x27;</span>];<br><br><span class="hljs-comment">// 1: &quot;Set&quot;</span><br>[...new <span class="hljs-built_in">Set</span>(array)];<br><br><span class="hljs-comment">// 2: &quot;Filter&quot;</span><br>array.filter(<span class="hljs-function">(<span class="hljs-params">item, index</span>) =&gt;</span> array.indexOf(item) === index);<br><br><span class="hljs-comment">// 3: &quot;Reduce&quot;</span><br>array.reduce(<span class="hljs-function">(<span class="hljs-params">uniq, item</span>) =&gt;</span> <br>  uniq.includes(item) ? uniq : [...uniq, item], []);<br><br><span class="hljs-comment">// RESULT:</span><br><span class="hljs-comment">// [&#x27;Remove&#x27;, &#x27;ES5&#x27;, &#x27;ES6&#x27;, &#x27;ES7&#x27;]</span><br></code></pre></td></tr></table></figure><h3 id="1-Set"><a href="#1-Set" class="headerlink" title="1. Set"></a>1. <code>Set</code></h3><blockquote><p>The Set object lets you store unique values of any type, whether primitive values or object references.</p></blockquote><p>ES6 提供了新的數據結構 <code>Set</code>。它類似於數組，但值都是唯一的，没有重複的值。</p><p>因此我們來看看到底做了什麼…</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> array = [<span class="hljs-string">&#x27;Remove&#x27;</span>, <span class="hljs-string">&#x27;Remove&#x27;</span>, <span class="hljs-string">&#x27;ES5&#x27;</span>, <span class="hljs-string">&#x27;ES6&#x27;</span>, <span class="hljs-string">&#x27;Remove&#x27;</span>, <span class="hljs-string">&#x27;ES7&#x27;</span>];<br><br><span class="hljs-keyword">const</span> newarray = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>(array);<br> <br><span class="hljs-built_in">console</span>.log(newarray);<br><span class="hljs-comment">// RESULT:</span><br><span class="hljs-comment">// Set(4) &#123;&quot;Remove&quot;, &quot;ES5&quot;, &quot;ES6&quot;, &quot;ES7&quot;&#125;</span><br></code></pre></td></tr></table></figure><p>在結合之前前幾篇的 <a href="https://chestertang.site/2020/04/13/zyx0413/">spread operator</a>、<a href="https://chestertang.site/2020/04/18/zyx0418/">Array.from</a> 將它變成陣列</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> array = [<span class="hljs-string">&#x27;Remove&#x27;</span>, <span class="hljs-string">&#x27;Remove&#x27;</span>, <span class="hljs-string">&#x27;ES5&#x27;</span>, <span class="hljs-string">&#x27;ES6&#x27;</span>, <span class="hljs-string">&#x27;Remove&#x27;</span>, <span class="hljs-string">&#x27;ES7&#x27;</span>];<br><br><span class="hljs-keyword">const</span> newarray = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>(array);<br><span class="hljs-keyword">const</span> backToArray = [...newarray];<br><span class="hljs-keyword">const</span> ArrayfromtoArray = <span class="hljs-built_in">Array</span>.from(newarray);<br><span class="hljs-comment">// RESULT:</span><br><span class="hljs-comment">// Set(4) [&quot;Remove&quot;, &quot;ES5&quot;, &quot;ES6&quot;, &quot;ES7&quot;]</span><br></code></pre></td></tr></table></figure><h3 id="2-filter"><a href="#2-filter" class="headerlink" title="2. filter"></a>2. <code>filter</code></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> array = [<span class="hljs-string">&#x27;Remove&#x27;</span>, <span class="hljs-string">&#x27;Remove&#x27;</span>, <span class="hljs-string">&#x27;ES5&#x27;</span>, <span class="hljs-string">&#x27;ES6&#x27;</span>, <span class="hljs-string">&#x27;Remove&#x27;</span>, <span class="hljs-string">&#x27;ES7&#x27;</span>];<br><br><span class="hljs-comment">// 2: &quot;Filter&quot;</span><br>  array.filter(<span class="hljs-function">(<span class="hljs-params">item, index</span>) =&gt;</span> array.indexOf(item) === index);<br></code></pre></td></tr></table></figure><p>雖然這樣子就能出現答案，但中間 <a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/filter">Array.prototype.indexOf()</a> 是做了什麼事情呢？</p><blockquote><p>The indexOf() method returns the first index at which a given element can be found in the array, or -1 if it is not present.</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> array = [<span class="hljs-string">&#x27;Remove&#x27;</span>, <span class="hljs-string">&#x27;Remove&#x27;</span>, <span class="hljs-string">&#x27;ES5&#x27;</span>, <span class="hljs-string">&#x27;ES6&#x27;</span>, <span class="hljs-string">&#x27;Remove&#x27;</span>, <span class="hljs-string">&#x27;ES7&#x27;</span>];<br><br>array.filter(<span class="hljs-function">(<span class="hljs-params">item, index</span>) =&gt;</span> &#123;<br>  <span class="hljs-built_in">console</span>.log(<br>    item,<br>    index,<br>    array.indexOf(item),<br>    array.indexOf(item) === index,<br>  );<br><br>  <span class="hljs-keyword">return</span> array.indexOf(item) === index<br>&#125;);<br></code></pre></td></tr></table></figure><table><thead><tr><th>item</th><th>index</th><th>indexOf</th><th>condition</th></tr></thead><tbody><tr><td>Remove</td><td>0</td><td>0</td><td>True</td></tr><tr><td>Remove</td><td>1</td><td>0</td><td>False</td></tr><tr><td>ES5</td><td>2</td><td>2</td><td>True</td></tr><tr><td>ES6</td><td>3</td><td>3</td><td>True</td></tr><tr><td>Remove</td><td>4</td><td>0</td><td>False</td></tr><tr><td>ES7</td><td>5</td><td>5</td><td>True</td></tr></tbody></table><h3 id="2-x-相反"><a href="#2-x-相反" class="headerlink" title="2.x 相反"></a>2.x 相反</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> array = [<span class="hljs-string">&#x27;Remove&#x27;</span>, <span class="hljs-string">&#x27;Remove&#x27;</span>, <span class="hljs-string">&#x27;ES5&#x27;</span>, <span class="hljs-string">&#x27;ES6&#x27;</span>, <span class="hljs-string">&#x27;Remove&#x27;</span>, <span class="hljs-string">&#x27;ES7&#x27;</span>];<br><br>array.filter(<span class="hljs-function">(<span class="hljs-params">item, index</span>) =&gt;</span> &#123;<br>  <span class="hljs-built_in">console</span>.log(<br>    item,<br>    index,<br>    array.indexOf(item),<br>    array.indexOf(item) === index,<br>  );<br><br>  <span class="hljs-keyword">return</span> array.indexOf(item) !== index<br>  <span class="hljs-comment">// [&#x27;Remove&#x27;, &#x27;Remove&#x27;]</span><br>&#125;);<br></code></pre></td></tr></table></figure><table><thead><tr><th>item</th><th>index</th><th>indexOf</th><th>condition</th></tr></thead><tbody><tr><td>Remove</td><td>0</td><td>0</td><td>False</td></tr><tr><td>Remove</td><td>1</td><td>0</td><td>True</td></tr><tr><td>ES5</td><td>2</td><td>2</td><td>False</td></tr><tr><td>ES6</td><td>3</td><td>3</td><td>False</td></tr><tr><td>Remove</td><td>4</td><td>0</td><td>True</td></tr><tr><td>ES7</td><td>5</td><td>5</td><td>False</td></tr></tbody></table><h3 id="3-reduce"><a href="#3-reduce" class="headerlink" title="3. reduce"></a>3. <code>reduce</code></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> array = [<span class="hljs-string">&#x27;Remove&#x27;</span>, <span class="hljs-string">&#x27;Remove&#x27;</span>, <span class="hljs-string">&#x27;ES5&#x27;</span>, <span class="hljs-string">&#x27;ES6&#x27;</span>, <span class="hljs-string">&#x27;Remove&#x27;</span>, <span class="hljs-string">&#x27;ES7&#x27;</span>];<br><br><span class="hljs-comment">// 3: &quot;Reduce&quot;</span><br>array.reduce(<span class="hljs-function">(<span class="hljs-params">uniq, item</span>) =&gt;</span> <br>  uniq.includes(item) ? uniq : [...uniq, item], []);<br></code></pre></td></tr></table></figure><p>同上，雖然這樣子就能出現答案，但中間 <a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce">Array.prototype.reduce()</a> 是做了什麼事情呢？</p><blockquote><p>The reduce() method executes a reducer function (that you provide) on each element of the array, resulting in a single output value.</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> array = [<span class="hljs-string">&#x27;Remove&#x27;</span>, <span class="hljs-string">&#x27;Remove&#x27;</span>, <span class="hljs-string">&#x27;ES5&#x27;</span>, <span class="hljs-string">&#x27;ES6&#x27;</span>, <span class="hljs-string">&#x27;Remove&#x27;</span>, <span class="hljs-string">&#x27;ES7&#x27;</span>];<br><br>array.reduce(<span class="hljs-function">(<span class="hljs-params">uniq, item</span>) =&gt;</span> &#123;<br>  <span class="hljs-built_in">console</span>.log(<br>    item,<br>    uniq,<br>    uniq.includes(item),<br>    uniq.includes(item) ? uniq : [...uniq, item],<br>  );<br>  <br>  <span class="hljs-keyword">return</span> uniq.includes(item) ? uniq : [...uniq, item]<br>&#125;, []);<br></code></pre></td></tr></table></figure><table><thead><tr><th>item</th><th>Accumulator (BEFORE Reducer Function)</th><th>Push to Accumulator?</th><th>Accumulator (AFTER Reducer Function)</th></tr></thead><tbody><tr><td>Remove</td><td>[]</td><td>Yes</td><td>[‘Remove’]</td></tr><tr><td>Remove</td><td>[‘Remove’]</td><td>NO</td><td>[‘Remove’]</td></tr><tr><td>ES5</td><td>[‘Remove’]</td><td>Yes</td><td>[‘Remove’, ‘ES5’]</td></tr><tr><td>ES6</td><td>[‘Remove’, ‘ES5’]</td><td>Yes</td><td>[‘Remove’, ‘ES5’, ‘ES6’]</td></tr><tr><td>Remove</td><td>[‘Remove’, ‘ES5’, ‘ES6’]</td><td>No</td><td>[‘Remove’, ‘ES5’, ‘ES6’]</td></tr><tr><td>ES7</td><td>[‘Remove’, ‘ES5’, ‘ES6’]</td><td>Yes</td><td>[‘Remove’, ‘ES5’, ‘ES6’, ‘ES7’]</td></tr></tbody></table><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set">MDN web docs Set</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter">MDN web docs Array.prototype.filter()</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce">MDN web docs Array.prototype.reduce()</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>J 筆記 - Clone an Array</title>
    <link href="/2020/04/18/zyx0418/"/>
    <url>/2020/04/18/zyx0418/</url>
    
    <content type="html"><![CDATA[<h1 id="J-筆記-Clone-an-Array"><a href="#J-筆記-Clone-an-Array" class="headerlink" title="J 筆記 - Clone an Array"></a>J 筆記 - Clone an Array</h1><p>複製陣列及資料，不管在什麼語言當中，都是很常用到的方式，在了解如何複製之前，應該對所謂的「傳值」、「傳址」大概的了解，才知道為什麼這樣能複製一個新的陣列出來，而不是改到之前的陣列…</p><blockquote><p><a href="https://ithelp.ithome.com.tw/articles/10191057">重新認識 JavaScript: Day 05 JavaScript 是「傳值」或「傳址」？</a></p></blockquote><h2 id="ES6-Way-to-Clone-an-Array"><a href="#ES6-Way-to-Clone-an-Array" class="headerlink" title="ES6 Way to Clone an Array"></a>ES6 Way to Clone an Array</h2><p>舊有的複製陣列通常都以 <code>slice</code> 來達成，不過 ES6 後，有些其他的方法可以快速複製，就來看看吧…</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> initarray = [<span class="hljs-string">&#x27;ES5&#x27;</span>, <span class="hljs-string">&#x27;ES6&#x27;</span>, <span class="hljs-string">&#x27;ES7&#x27;</span>];<br><br><span class="hljs-comment">// Old way</span><br><span class="hljs-keyword">const</span> oldarray = initarray.slice();<br><br><span class="hljs-comment">// ES6 way</span><br><span class="hljs-keyword">const</span> spreadoperator = [...initarray];<br><span class="hljs-keyword">const</span> Arrayfrom = <span class="hljs-built_in">Array</span>.from(initarray);<br></code></pre></td></tr></table></figure><p>還記得上次的 <a href="https://chestertang.site/2020/04/13/zyx0413/">String to Array</a> 也有用到 <code>spread operator</code>、<code>Array.from</code> 兩者用法，如果忘記得可以再去看看</p><h2 id="Call-by-value-Call-by-address"><a href="#Call-by-value-Call-by-address" class="headerlink" title="Call by value / Call by address"></a>Call by value / Call by address</h2><p>JS 中的數組是 <code>Call by value</code>，因此如果嘗試使用 <code>=</code> 進行複制時，只會複製到原始宣告的那組數組，而不是數組的值。要真正複製一個全新數組，需要在新的 value 下複製數組的值，這樣就不會引用內存中的舊 address。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> initarray = [<span class="hljs-string">&#x27;ES5&#x27;</span>, <span class="hljs-string">&#x27;ES6&#x27;</span>, <span class="hljs-string">&#x27;ES7&#x27;</span>];<br><br><span class="hljs-keyword">const</span> errormethod = initarray;<br><span class="hljs-keyword">const</span> spreadoperator = [...initarray];<br><br><span class="hljs-built_in">console</span>.log(initarray === errormethod);<br><span class="hljs-comment">//  true --&gt; same memory space (Call by value)</span><br><br><span class="hljs-built_in">console</span>.log(initarray === spreadoperator);<br><span class="hljs-comment">// false --&gt; new memory space(Call by address)</span><br></code></pre></td></tr></table></figure><h2 id="initarray-Problem"><a href="#initarray-Problem" class="headerlink" title="initarray Problem"></a>initarray Problem</h2><p>看完了上面的例子，可能還是搞不太懂 true / false 帶來的影響，或許知道了就是在不同的 <code>memory space</code>，且慢看看下面的例子: </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> initarray = [<span class="hljs-string">&#x27;ES5&#x27;</span>, <span class="hljs-string">&#x27;ES6&#x27;</span>, <span class="hljs-string">&#x27;ES7&#x27;</span>];<br><br><span class="hljs-keyword">const</span> initarray2 = initarray;<br><br>initarray2.push(<span class="hljs-string">&#x27;❌&#x27;</span>);<br><br><span class="hljs-built_in">console</span>.log(initarray2);<br><span class="hljs-comment">// [&quot;ES5&quot;, &quot;ES6&quot;, &quot;ES7&quot;, &quot;❌&quot;]</span><br><br><span class="hljs-built_in">console</span>.log(initarray);<br><span class="hljs-comment">// [&quot;ES5&quot;, &quot;ES6&quot;, &quot;ES7&quot;, &quot;❌&quot;]</span><br></code></pre></td></tr></table></figure><p>有發現最初的陣列也被改掉了嗎？明明是要複製全新的陣列然後 <code>push</code> 東西進去，但為什麼原本的陣列也被改掉了！</p><p>這就是「傳值」、「傳址」的差別：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> initarray = [<span class="hljs-string">&#x27;ES5&#x27;</span>, <span class="hljs-string">&#x27;ES6&#x27;</span>, <span class="hljs-string">&#x27;ES7&#x27;</span>];<br><br><span class="hljs-keyword">const</span> initarray2 = [...initarray];<br><br>initarray2.push(<span class="hljs-string">&#x27;✔️&#x27;</span>);<br><br><span class="hljs-built_in">console</span>.log(initarray2);<br><span class="hljs-comment">// [&quot;ES5&quot;, &quot;ES6&quot;, &quot;ES7&quot;, &quot;✔️&quot;];</span><br><br><span class="hljs-built_in">console</span>.log(initarray);<br><span class="hljs-comment">// [&quot;ES5&quot;, &quot;ES6&quot;, &quot;ES7&quot;];</span><br></code></pre></td></tr></table></figure><h2 id="Only-one-level"><a href="#Only-one-level" class="headerlink" title="Only one level"></a>Only one level</h2><blockquote><p>Note!!! 記得 <code>Spread operator</code>、<code>Array.from()</code> 兩者複製陣列時只能深入一層，如果要更深入，必須要用其他方法才能達成！</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> initarray = [[<span class="hljs-string">&#x27;ES5&#x27;</span>, <span class="hljs-string">&#x27;ES6&#x27;</span>], [<span class="hljs-string">&#x27;ES7&#x27;</span>]];<br><br><span class="hljs-keyword">const</span> spread_operator_array = [...initarray];<br><span class="hljs-keyword">const</span> Array_from_array = <span class="hljs-built_in">Array</span>.from(initarray);<br><br>spread_operator_array[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>] = <span class="hljs-string">&quot;❌&quot;</span>;<br>Array_from_array[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>] = <span class="hljs-string">&quot;❌&quot;</span>;<br><br><span class="hljs-built_in">console</span>.log(spread_operator_array);<br><span class="hljs-built_in">console</span>.log(Array_from_array);<br><span class="hljs-comment">// [[&quot;❌&quot;, &quot;ES6&quot;], [&quot;ES7&quot;]]</span><br><br><span class="hljs-built_in">console</span>.log(initarray);<br><span class="hljs-comment">// [[&quot;❌&quot;, &quot;ES6&quot;], [&quot;ES7&quot;]]</span><br></code></pre></td></tr></table></figure><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax">MDN web docs Spread syntax</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice">MDN web docs Array.prototype.slice()</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML5 筆記 - :empty Selector</title>
    <link href="/2020/04/17/zyx0417/"/>
    <url>/2020/04/17/zyx0417/</url>
    
    <content type="html"><![CDATA[<h1 id="HTML5-筆記-empty-Selector"><a href="#HTML5-筆記-empty-Selector" class="headerlink" title="HTML5 筆記 - :empty Selector"></a>HTML5 筆記 - :empty Selector</h1><p>通常，在我們的元素裡面，大多都會有文本以及子元素，然而假設今天是完全沒有的，但又想要選取該怎麼辦？這時候就可以使用 <code>:empty</code> 選取器</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-comment">&lt;!-- Not Empty --&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-comment">&lt;!-- Empty --&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;not empty&quot;</span>;<br>&#125;<br><br><span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:empty</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;empty&quot;</span>;<br>&#125;<br><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">color</span>: silver;<br>&#125;<br><br><span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:empty</span> &#123;<br>  <span class="hljs-attribute">color</span>: red;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p><a href="https://codepen.io/BeastRush/pen/QWjNqBW">https://codepen.io/BeastRush/pen/QWjNqBW</a></p></blockquote><h2 id="如何定義-empty？"><a href="#如何定義-empty？" class="headerlink" title="如何定義 empty？"></a>如何定義 empty？</h2><p>當我第一是看到有人這樣用的時候，其實有點看不太懂是什麼，所以我相信如果你沒看過也還搞不太清楚是如何定義 <code>:empty</code>，先來看看 <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:empty">MDN</a> 的定義：</p><blockquote><p>The :empty CSS pseudo-class represents any element that has no children. Children can be either element nodes or text (including whitespace). Comments, processing instructions, and CSS content do not affect whether an element is considered empty.</p></blockquote><h3 id="Only-in-Firefox"><a href="#Only-in-Firefox" class="headerlink" title="Only in Firefox"></a>Only in Firefox</h3><p>空白會被視為 empty，<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:-moz-only-whitespace">:-moz-only-whitespace</a>，但基本上是完全可以忽略的東西，除非真的像工作上遇到 <a href="https://stackoverflow.com/questions/11753523/firefox-bug-with-rowspan-border-collapse-border">FireFox bug with: rowspan + border-collapse + border</a> 裡面少了 table 的底線，又或者是 Windows APP Outlook 多了 td，但是其他瀏覽器、手機 APP 開通通都正常的情況…</p><blockquote><p>Note: In Selectors Level 4 the :empty pseudo-class was changed to act like :-moz-only-whitespace, but no browser currently supports this yet.</p></blockquote><h2 id="Not-Empty"><a href="#Not-Empty" class="headerlink" title="Not Empty"></a>Not Empty</h2><p>如同開頭的例子及定義，有文本、空白、子元素</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- Comment with whitespace--&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Chester<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Empty"><a href="#Empty" class="headerlink" title="Empty"></a>Empty</h2><p>標籤裡面沒有東西（包含空白）及裡面是註解</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-comment">&lt;!-- Comment but Empty--&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><hr><h3 id="實例"><a href="#實例" class="headerlink" title="實例"></a>實例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- No error message --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- Yes error message --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span> Missing Email<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.error</span>:before &#123;<br>  color: red;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;\02716&quot;</span>; <br>&#125;<br><span class="hljs-selector-class">.error</span><span class="hljs-selector-pseudo">:empty</span>:before &#123;<br>  display: none;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p><a href="https://codepen.io/BeastRush/pen/QWjNqBW">https://codepen.io/BeastRush/pen/QWjNqBW</a></p></blockquote><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:empty">MDN web Docs :empty</a></li><li><a href="https://css-tricks.com/almanac/selectors/e/empty/">Css trick</a></li><li><a href="http://thenewcode.com/692/Vanishing-Acts-The-CSS-empty-Selector">Vanishing-Acts</a></li><li><a href="https://codepen.io/katydecorah/post/a-case-for-empty">A case for :empty</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>HTML5</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML5</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>J 筆記 - String to Array</title>
    <link href="/2020/04/13/zyx0413/"/>
    <url>/2020/04/13/zyx0413/</url>
    
    <content type="html"><![CDATA[<h1 id="J-筆記-Convert-String-to-Character-Array"><a href="#J-筆記-Convert-String-to-Character-Array" class="headerlink" title="J 筆記 - Convert String to Character Array"></a>J 筆記 - Convert String to Character Array</h1><p>在處理資料不管是在 Ruby、JS 當中，常常需要把一整坨的資料做切開後，再來做應用，而在 JS 中實作的方式有好幾種，但這些方法之中的差異在哪邊，就來實作幾個範例吧！</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> Chester = <span class="hljs-string">&#x27;Chester&#x27;</span><br><span class="hljs-comment">// [&#x27;C&#x27;, &#x27;h&#x27;, &#x27;e&#x27;, &#x27;s&#x27;, &#x27;t&#x27;, &#x27;e&#x27;, &#x27;r&#x27;]</span><br></code></pre></td></tr></table></figure><h2 id="四種-String-gt-Character-Array-方法"><a href="#四種-String-gt-Character-Array-方法" class="headerlink" title="四種 String -&gt; Character Array 方法"></a>四種 String -&gt; Character Array 方法</h2><p>將資料拆開的方法共有四種，隨著 ES6 的廣泛應用，除了常見的 <code>split</code> 還有許多其他的寫法可以解決這個問題，雖然可能有些不太常用到，但至少別人的程式碼當中如果出現，你可以馬上理解這段 code 在幹嘛…</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> Chester = <span class="hljs-string">&#x27;Chester&#x27;</span><br><span class="hljs-comment">// [&#x27;C&#x27;, &#x27;h&#x27;, &#x27;e&#x27;, &#x27;s&#x27;, &#x27;t&#x27;, &#x27;e&#x27;, &#x27;r&#x27;]</span><br><br><span class="hljs-comment">// 選項1 </span><br>Chester.split(<span class="hljs-string">&#x27;&#x27;</span>); <br><span class="hljs-comment">// 選項2 </span><br>[... Chester]; <br><span class="hljs-comment">// 選項3 </span><br><span class="hljs-built_in">Array</span>.from(Chester); <br><span class="hljs-comment">// 選項4 </span><br><span class="hljs-built_in">Object</span>.assign([]，Chester); <br><br><span class="hljs-comment">// 結果：</span><br><span class="hljs-comment">// [&#x27;C&#x27;, &#x27;h&#x27;, &#x27;e&#x27;, &#x27;s&#x27;, &#x27;t&#x27;, &#x27;e&#x27;, &#x27;r&#x27;]</span><br></code></pre></td></tr></table></figure><h3 id="情況一：切割每個字"><a href="#情況一：切割每個字" class="headerlink" title="情況一：切割每個字"></a>情況一：切割每個字</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> Chester = <span class="hljs-string">&#x27;查斯特&#x27;</span>;<br><span class="hljs-keyword">const</span> usingSplit = Chester.split(<span class="hljs-string">&#x27;&#x27;</span>);<br><span class="hljs-keyword">const</span> usingSpread = [... Chester];<br><span class="hljs-keyword">const</span> usingArrayFrom = <span class="hljs-built_in">Array</span>.from(Chester);<br><span class="hljs-keyword">const</span> usingObjectAssign = <span class="hljs-built_in">Object</span>.assign([], Chester);<br><br><span class="hljs-comment">// 結果：</span><br><span class="hljs-comment">// [&#x27;查&#x27;, &#x27;斯&#x27;, &#x27;特&#x27;]</span><br></code></pre></td></tr></table></figure><h3 id="情況二：特定符號"><a href="#情況二：特定符號" class="headerlink" title="情況二：特定符號"></a>情況二：特定符號</h3><p>如果是要把逗號、分號這類型的資料分開，那 <code>split</code> 會是最好的辦法（這也是最常用的方式）！</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> Chester = <span class="hljs-string">&#x27;Chester-Tang&#x27;</span>;<br><span class="hljs-keyword">const</span> usingSplit = Chester.split(<span class="hljs-string">&#x27;-&#x27;</span>);<br><br><span class="hljs-comment">// 結果：</span><br><span class="hljs-comment">// [&#x27;Chester&#x27;, &#x27;Tang&#x27;]</span><br></code></pre></td></tr></table></figure><p>其他的方法跟情況一得到的答案是相同的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> Chester = <span class="hljs-string">&#x27;Chester-Tang&#x27;</span>;<br><span class="hljs-keyword">const</span> usingSpread = [... Chester];<br><span class="hljs-keyword">const</span> usingArrayFrom = <span class="hljs-built_in">Array</span>.from(Chester);<br><span class="hljs-keyword">const</span> usingObjectAssign = <span class="hljs-built_in">Object</span>.assign([], Chester);<br><br><span class="hljs-comment">// 結果：</span><br><span class="hljs-comment">// [&#x27;C&#x27;, &#x27;h&#x27;, &#x27;e&#x27;, &#x27;s&#x27;, &#x27;t&#x27;, &#x27;e&#x27;, &#x27;r&#x27;, &#x27;-&#x27;, &#x27;T&#x27;, &#x27;a&#x27;, &#x27;n&#x27;, &#x27;g&#x27;]</span><br></code></pre></td></tr></table></figure><h3 id="情況三：Emojis"><a href="#情況三：Emojis" class="headerlink" title="情況三：Emojis"></a>情況三：Emojis</h3><p>如果含有 Emojis 的話，<code>Spread</code>、<code>ArrayFrom</code> 是比較好的做法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> Chester = <span class="hljs-string">&#x27;Chester😋&#x27;</span>;<br><span class="hljs-keyword">const</span> usingSpread = [... Chester];<br><span class="hljs-keyword">const</span> usingArrayFrom = <span class="hljs-built_in">Array</span>.from(Chester);<br><br><span class="hljs-comment">// 結果：</span><br><span class="hljs-comment">// [&#x27;C&#x27;, &#x27;h&#x27;, &#x27;e&#x27;, &#x27;s&#x27;, &#x27;t&#x27;, &#x27;e&#x27;, &#x27;r&#x27;, &#x27;😋&#x27;]</span><br></code></pre></td></tr></table></figure><p>如果用 <code>split</code>、<code>Object.assign</code> 會發生以下錯誤</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> Chester = <span class="hljs-string">&#x27;Chester😋&#x27;</span>;<br><span class="hljs-keyword">const</span> usingSplit = Chester.split(<span class="hljs-string">&#x27;&#x27;</span>);<br><span class="hljs-keyword">const</span> usingObjectAssign = <span class="hljs-built_in">Object</span>.assign([], Chester);<br><br><span class="hljs-comment">// 結果：</span><br><span class="hljs-comment">// [&#x27;C&#x27;, &#x27;h&#x27;, &#x27;e&#x27;, &#x27;s&#x27;, &#x27;t&#x27;, &#x27;e&#x27;, &#x27;r&#x27;, &#x27;�&#x27;, &#x27;�&#x27;]</span><br></code></pre></td></tr></table></figure><p>這是因為 <a href="https://github.com/orling/grapheme-splitter">grapheme-splitter</a> <code>UTF-8</code> 和 <code>UTF-16</code> 不同的關係所造成的。’😋’ 它實際上是由 2 個字組成，而不是我們認為的 1 個。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-string">&#x27;😋&#x27;</span>.length; <span class="hljs-comment">// 2</span><br></code></pre></td></tr></table></figure><blockquote><p>TypeScript 中的 <code>Object.assign([], Chester)</code>，在這邊其實還有其他的雷，但前提是你有在寫 TS</p></blockquote><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split">MDN Web Docs: split</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax">MDN Web Docs: spread</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from">MDN Web Docs: Array.from</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign">MDN Web Docs: Object.assign</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R 筆記 - Cancancan</title>
    <link href="/2020/04/09/zyx0409/"/>
    <url>/2020/04/09/zyx0409/</url>
    
    <content type="html"><![CDATA[<p>之前的 DemoProject 中，架構都沒有大到需要用到角色來管理權限（可見多廢xd），所以就算知道可以用什麼來管，但也沒有直接的來寫過或接觸到，這幾天剛好有空就來好好研究，也順手記錄一下一些觀念。</p><p>先講個這個 gem 是幹嘛的：</p><ol><li>定義不同使用者有不同角色，每個角色有不同權限</li><li>簡化 controller 的 code</li></ol><h1 id="Cancancan"><a href="#Cancancan" class="headerlink" title="Cancancan"></a>Cancancan</h1><h2 id="Define-Abilities"><a href="#Define-Abilities" class="headerlink" title="Define Abilities"></a>Define Abilities</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ruby">rails generate <span class="hljs-symbol">cancan:</span>ability<br><span class="hljs-comment">#create  app/models/ability.rb</span><br></code></pre></td></tr></table></figure><p>ability.rb 定義每個角色擁有哪些權限，並在 view 或 controller  設定條件時，查看是否符合條件</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># app &gt; models &gt; ability.rb</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Ability</span></span><br>  <span class="hljs-keyword">include</span> CanCan::Ability<br><br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">initialize</span><span class="hljs-params">(user, staff = <span class="hljs-literal">nil</span>)</span></span><br>    alias_action <span class="hljs-symbol">:read</span>, <span class="hljs-symbol">:update</span>, <span class="hljs-symbol">to:</span> <span class="hljs-symbol">:use</span> <span class="hljs-comment"># alias</span><br><br>    <span class="hljs-keyword">if</span> user.present?  <span class="hljs-comment"># additional permissions for logged in users (they can read their own posts)</span><br>      can [<span class="hljs-symbol">:new</span>, <span class="hljs-symbol">:create</span>], Forum<br>      cannot [<span class="hljs-symbol">:new</span>], Comment<br>      basic_read_only<br>    <span class="hljs-keyword">else</span><br>      <span class="hljs-keyword">if</span> user.admin?  <span class="hljs-comment"># additional permissions for administrators</span><br>        can <span class="hljs-symbol">:manage</span>, <span class="hljs-symbol">:all</span><br>      <span class="hljs-keyword">elsif</span> staff &amp;&amp; staff.role<br>        eval(<span class="hljs-string">&quot;<span class="hljs-subst">#&#123;staff.<span class="hljs-keyword">class</span>.name.underscore&#125;</span>_ability(staff)&quot;</span>)<br>        <span class="hljs-comment"># eval 去 call 底下的方法</span><br>      <span class="hljs-keyword">else</span><br>        can <span class="hljs-symbol">:read</span>, Post<br>      <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br>  <span class="hljs-keyword">end</span><br>  <br>  protected<br><br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">basic_read_only</span></span><br>    can <span class="hljs-symbol">:read</span>, Forum<br>  <span class="hljs-keyword">end</span><br>  <br>  <span class="hljs-comment"># 定義 Teacher 所擁有的權限</span><br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">teacher_ability</span><span class="hljs-params">(teacher)</span></span><br>    ...<br>  <span class="hljs-keyword">end</span><br>  <br>  <span class="hljs-comment"># 定義 Student 所擁有的權限</span><br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">student_ability</span><span class="hljs-params">(student)</span></span><br>    ...<br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br>  <span class="hljs-comment"># can      : 定義被允許的權限，後面接兩個參數，第一個是被允許的 action ，第二個是被允許的 object</span><br>  <span class="hljs-comment"># cannot   : 同上，反之</span><br>  <span class="hljs-comment"># :manage  : 指 所有的 action 方法，:all 表示所有的 object</span><br>  <span class="hljs-comment"># :read    : 指 :index 和 :show</span><br>  <span class="hljs-comment"># :update  : 指 :edit  和 :update</span><br>  <span class="hljs-comment"># :destroy : 指 :destroy</span><br>  <span class="hljs-comment"># :create  : 指 :new   和 :crate</span><br></code></pre></td></tr></table></figure><p>object 後可以設定有權限的其他情況(database columns)</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ruby">can <span class="hljs-symbol">:update</span>, Reseller <span class="hljs-keyword">do</span> <span class="hljs-params">|reseller|</span><br>  (reseller.id == user.id)<br><span class="hljs-keyword">end</span><br><br>can <span class="hljs-symbol">:update</span>, Reseller, <span class="hljs-symbol">id:</span> user.id<br></code></pre></td></tr></table></figure><p>自訂 Alias action</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby">alias_action <span class="hljs-symbol">:index</span>, <span class="hljs-symbol">:show</span>, <span class="hljs-symbol">:to</span> =&gt; <span class="hljs-symbol">:read</span><br>alias_action <span class="hljs-symbol">:new</span>, <span class="hljs-symbol">:to</span> =&gt; <span class="hljs-symbol">:create</span><br>alias_action <span class="hljs-symbol">:edit</span>, <span class="hljs-symbol">:to</span> =&gt; <span class="hljs-symbol">:update</span><br></code></pre></td></tr></table></figure><p>自訂 method</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ruby">protected<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">basic_read_only</span></span><br>  can <span class="hljs-symbol">:read</span>, Forum<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h2 id="Authorizing-controller-actions"><a href="#Authorizing-controller-actions" class="headerlink" title="Authorizing controller actions"></a>Authorizing controller actions</h2><h3 id="load-and-authorized-resource"><a href="#load-and-authorized-resource" class="headerlink" title="load_and_authorized_resource"></a>load_and_authorized_resource</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ProductsController</span> &lt; ActionController::Base</span><br>  load_and_authorize_resource<br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">discontinue</span></span><br>    <span class="hljs-comment"># Automatically does the following:</span><br>    <span class="hljs-comment"># <span class="hljs-doctag">@product</span> = Product.find(params[:id])</span><br>    <span class="hljs-comment"># authorize! :discontinue, <span class="hljs-doctag">@product</span></span><br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment">#指定 action</span><br><span class="hljs-comment">#load_and_authorize_resource :only =&gt; [:index, :show]</span><br></code></pre></td></tr></table></figure><p>等於以下兩個方法：</p><ul><li>load_resource</li><li>authorize_resource</li></ul><h3 id="load-resource"><a href="#load-resource" class="headerlink" title="load_resource"></a>load_resource</h3><p><code>load_resource</code> 自動加入 @instance，預設跟 Class 名稱相同，Article =&gt; @article</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ruby">def ArticlesController &lt; ApplicationController<br>  load_resource<br>  <br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">new</span></span><br>    <span class="hljs-comment"># <span class="hljs-doctag">@article</span> = Article.new</span><br>  <span class="hljs-keyword">end</span><br><br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">show</span></span><br>    <span class="hljs-comment"># <span class="hljs-doctag">@article</span> = Article.find(params[:id])</span><br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="authorize-resource"><a href="#authorize-resource" class="headerlink" title="authorize_resource"></a>authorize_resource</h3><p>將這個 Controller 加入權限的控制，並去 model 裡判斷權限是否有效</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TopicController</span> &lt; ApplicationController</span><br>  authorize_resource <span class="hljs-symbol">:post</span> <span class="hljs-comment">#下方 index action 中的變數名稱</span><br><br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span></span><br>    <span class="hljs-variable">@post</span> = Topic.all<br>    <span class="hljs-comment">#預設為 <span class="hljs-doctag">@topic</span></span><br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h2 id="Exception-Handling"><a href="#Exception-Handling" class="headerlink" title="Exception-Handling"></a>Exception-Handling</h2><p>若 user 無權限進入，cancancan 會噴出一個 CanCan::AccessDenied exception</p><blockquote><p>authorize_resource or authorize! 會丟例外</p></blockquote><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment">#application_controller.rb</span><br><br>rescue_from CanCan::AccessDenied <span class="hljs-keyword">do</span> <span class="hljs-params">|exception|</span><br>  redirect_to root_url, <span class="hljs-symbol">:alert</span> =&gt; exception.messag <span class="hljs-comment">#redirect_to</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><blockquote><p><a href="https://github.com/CanCanCommunity/cancancan">https://github.com/CanCanCommunity/cancancan</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Rails</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Rails</tag>
      
      <tag>Ruby</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>S3 SnowBall</title>
    <link href="/2020/04/08/zyx0408/"/>
    <url>/2020/04/08/zyx0408/</url>
    
    <content type="html"><![CDATA[<h1 id="What’s-Snow-Ball"><a href="#What’s-Snow-Ball" class="headerlink" title="What’s Snow Ball?"></a>What’s Snow Ball?</h1><h2 id="SnowBall"><a href="#SnowBall" class="headerlink" title="SnowBall"></a>SnowBall</h2><p>Snowball is a petabyte-scale data transparent solution that uses secure appliances to transfer large amount of data into and out of AWS.</p><p>Using Snowball addresses common challenges with large-scale data transfers including high network costs, long transfer times, and security concerns.</p><p>Transferring data with SnowBall is simple, fast, secure and can be as little as one-fifth the cost of high-speed internet.</p><p>Snowball comes in either a 50TB or 80TB size. Snowball uses mutiple layers of security designed to protect your data including tamper-resistant enclosures, 256-bit encryption, and an industry-standard Trusted Platform Module (TPM) designed to ensure both security and full chain-of-custody of your data.</p><p>Once the data transfer job has been processed and verified, AWS performs a software erasure of the SnowBall appliance.</p><h2 id="SnowBall-Edge"><a href="#SnowBall-Edge" class="headerlink" title="SnowBall Edge"></a>SnowBall Edge</h2><p>AWS SnowBall Edge is a 100TB data tranfer device with on-board storage and compute capabilities. You can use SnowBall Edge to move large amounts of data into and out of AWS, as a temporary storage tier for large local datasets, or to support local workloads in remote or offline locations.</p><p>SnowBall Edge connects to your existing applicatinos and infrastructure using standard storage interfaces, streamlining the data transfer process and minimizing setup and integration.</p><p>SnowBall Edge can cluster together to form a local stroage tier and process your data on-premises, helping ensure your applications continue to run even when they are not able to access the cloud.</p><h2 id="Snowmobile"><a href="#Snowmobile" class="headerlink" title="Snowmobile"></a>Snowmobile</h2><p>AWS Snowmobile is an Exabyte-scale data transfer service used to move extremely large amounts of data to AWS. </p><p>You can transfer up to 100PB per Snowmobile, a 45-foot long ruggedized shipping container, pulled by a semi-trailer truck.</p><p>Snowmobile makes it easy to move massive volumes of data to the cloud, including video libararies, image repositories, or even a complete data center migration. Transferring data with Snowmobile is secure, fast and cot effective.</p><h3 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h3><ul><li>Understand what Snowball is </li><li>Import / Export from S3 </li></ul><blockquote><p><a href="https://aws.amazon.com/tw/snowball/">https://aws.amazon.com/tw/snowball/</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Amazon Web Services</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AWS</tag>
      
      <tag>SnowBall</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>S3 CloudFront Distribution</title>
    <link href="/2020/04/05/zyx0405/"/>
    <url>/2020/04/05/zyx0405/</url>
    
    <content type="html"><![CDATA[<h1 id="Create-A-CloudFront-Distribution"><a href="#Create-A-CloudFront-Distribution" class="headerlink" title="Create A CloudFront Distribution"></a>Create A CloudFront Distribution</h1><h2 id="Networking-amp-Content-Delivery-CloudFront"><a href="#Networking-amp-Content-Delivery-CloudFront" class="headerlink" title="Networking &amp; Content Delivery / CloudFront"></a>Networking &amp; Content Delivery / CloudFront</h2><p>Amazon CloudFront 是快速內容交付網路 (CDN) 服務，可在支援開發人員的環境中，以低延遲和高速傳輸的方式將資料、影片、應用程式和 API 安全地交付給全球的客戶。</p><p>CloudFront 可與多種服務流暢搭配，包含使用 AWS Shield 減少 DDoS 攻擊次數、以 Amazon S3、Elastic Load Balancing 或 Amazon EC2 做為應用程式的來源，以及使用 Lambda@Edge 在更靠近客戶使用者的位置執行自訂程式碼，並自訂使用者體驗。</p><h3 id="Create-a-CloudFront-Distribution"><a href="#Create-a-CloudFront-Distribution" class="headerlink" title="Create a CloudFront Distribution"></a>Create a CloudFront Distribution</h3><p>點選 <code>Networking &amp; Content Delivery / CloudFront</code> 按鈕，可以看到 <code>CloudFront Distributions</code> 頁面，直接點選 <code>Create Distribution</code> 以建立 <code>CloudFront</code> </p><p><img src="https://i.imgur.com/hl0hNdj.png" alt="image"><br><img src="https://i.imgur.com/Dv7iVV4.png" alt="image"></p><p>總共有兩個步驟：</p><ol><li>Select delivery method</li><li>Create Distribution</li></ol><p>首先，可以選擇 <code>Web</code> 和 <code>RTMP</code> 兩種方式， <code>RTMP</code> 主要是拿來給 Media 類型來使用的 (e.g. Adobe Media)，這邊就直接以 <code>Web / Get Started</code> 來實作範例</p><p><img src="https://i.imgur.com/D8Dx1PN.png" alt="image"></p><p>還記得我們當初在 <a href="https://chestertang.site/2020/03/31/zyx0331/">S3 Cross Region Replication</a> 建立的 S3 Bucket 吧？這時候就可以選擇這個 Bucket 來測試看看</p><p>將 <code>Origin Domain Name</code> 選取要被 <code>Distribution</code> 的 Bucket，其餘選項將以預設來 <code>Create Distribution</code></p><p><img src="https://i.imgur.com/VEOJTM0.png" alt="image"></p><p>完成後大約要等待 15-30 分鐘左右，當 <code>Status</code> 變成 <code>Deployed</code> 就代表完成並且 <code>Enabled</code></p><p><img src="https://i.imgur.com/AuNEVQH.png" alt="image"></p><p>而也會取得一個 <code>Domain name</code> 即其他資訊，可以試著打開這個連結，會發現裡面的內容跟當初建立 S3 Bucket 是相同的，只是現在被 <code>Distribution</code> 到 <code>Edge Location</code> </p><blockquote><p>Domain Name：d2qxnxw978i04y.cloudfront.net</p></blockquote><p><img src="https://i.imgur.com/gyl5cD6.png" alt="image"></p><p>最後，如果在 Origin 的 Bucket 有 Upload 許多檔案的話，現在不用再輸入當初給的 S3 Bucket 連結來取得圖片，我們可以透過剛剛給的 <code>Domain Name</code> 並加上檔案名稱（如同 <a href="https://chestertang.site/2020/03/26/zyx0326/">S3 Bucket</a> ㄧ樣）就可以直接圖取到檔案啦！(e.g. <a href="http://d2qxnxw978i04y.cloudfront.net/icon.png">http://d2qxnxw978i04y.cloudfront.net/icon.png</a>)</p><p><img src="https://i.imgur.com/IT5N0K6.png" alt="image"></p><h1 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h1><ul><li>Edge Location：This is the location where content will be cached. This is separate to an AWS Region/AZ.</li><li>Origin：This is the origin of  all the files that the CDN will distribute. This can be either an S3 Bucket, an EC2 Instance, an Elastic Load Balancer, or Route 53.</li><li>Distribution：This is the same given the CDN which consists of collection of Edge Locations.</li><li>Web Distribution：Typically used for Websites.</li><li>RTMP：Used for Media Streaming.</li><li>Edge locations are not just READ only - you can write to them too. (ie put an object on to them)</li><li>Objects are cached for the life of the Time To Live.</li><li>You can clear cached objects, but you will be charged.</li></ul><blockquote><p><a href="https://docs.aws.amazon.com/zh_tw/AmazonCloudFront/latest/DeveloperGuide/GettingStarted.SimpleDistribution.html">Getting Started with a Simple CloudFront Distribution</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Amazon Web Services</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AWS</tag>
      
      <tag>CloudFront Distribution</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>S3 Cross Region Replication</title>
    <link href="/2020/03/31/zyx0331/"/>
    <url>/2020/03/31/zyx0331/</url>
    
    <content type="html"><![CDATA[<h1 id="S3-Cross-Region-Replication-LAB"><a href="#S3-Cross-Region-Replication-LAB" class="headerlink" title="S3 Cross Region Replication - LAB"></a>S3 Cross Region Replication - LAB</h1><h2 id="S3-Cross-Region-Replication"><a href="#S3-Cross-Region-Replication" class="headerlink" title="S3 Cross Region Replication"></a>S3 Cross Region Replication</h2><p>這篇將介紹如果要複製一個 S3 bucket ，不只複製現在部分，而且在被複製的 bucket 上如果 <code>Upload</code> 新的檔案，複製的 bucket 也有一樣的效果該如何實作？此外還有一些預設該知道的觀念。</p><p>以下將用 <a href="https://chestertang.site/2020/03/27/zyx0327/">Versioning</a> 建立的 S3 Bucket 繼續實作這篇的，如果裡面的概念忘記或者不熟可以先回去看看</p><p>首先，先點選我們當初建立的 <code>chestertang1231-versiontest</code> 的 bucket</p><p><img src="https://i.imgur.com/dY6p2Uu.png" alt="IMAGE"></p><p>點選 <code>Management</code> 按鈕後，可以看到 <code>Replication</code> 中有 <code>Add rule</code> 建立複寫的規則，這邊還沒有建立過，所以就來直接建一個吧！</p><p><img src="https://i.imgur.com/sj5VzM8.png" alt="IMAGE"></p><p>Replication rule 的 Set source 的部分中，我們直接將整個 bucket 都選取</p><p><img src="https://i.imgur.com/KqslMWe.png" alt="IMAGE"></p><p>建立一個新的 bucket</p><p><img src="https://i.imgur.com/OLS2oDP.png" alt="IMAGE"></p><p>取一個 S3 bucket 的名字，可以有個開頭方便好知道這個是現在這個 bucket 的副本</p><p><img src="https://i.imgur.com/rnOQnR6.png" alt="IMAGE"></p><p>最後只要再給這個 <code>Rule name</code> 取一個名字，就完成啦！</p><p><img src="https://i.imgur.com/EmnyWRx.png" alt="IMAGE"></p><p>可以看到完成後，這個 <code>Bucket</code> 裡面可以知道你剛剛建立的複製的 <code>Bucket</code>，明細大致上就是跟上面再建立 <code>Replication rule</code> 的明細是相同的</p><p><img src="https://i.imgur.com/lmbRr8L.png" alt="IMAGE"></p><p>此外，在 S3 裡面也會多出一個新的 bucket 出來，不只如此，可以試試看在原本被複製的 bucket <code>chestertang1231-versiontest</code> 中 <code>Upload</code> 檔案可以看看複製出來的 <code>chesterdercrossregionreplication</code> 的 bucket 會有什麼變化？</p><p><img src="https://i.imgur.com/HNqAZQ0.png" alt="IMAGE"></p><blockquote><ol><li>新建立出來的 <code>chesterdercrossregionreplication</code> bucket 是空的，就算被複製的 bucket 有 file 也不會複寫過來 </li><li>在被複製的 bucket 中刪除 Object、Version 都不會覆寫到複製的 <code>chesterdercrossregionreplication</code> bucket</li></ol></blockquote><h1 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h1><ul><li>Versioning must be enabled on both the source and destination buckets</li><li>Files in an existing bucket are not replication automatically</li><li>All subsequent updated files will be replication automatically</li><li>Delete markers are not replicated</li><li>Deleting individual versions or delete markers will noe be replicated</li><li>Understand what Cross Region Replication is at a high level</li></ul><blockquote><p><a href="https://docs.aws.amazon.com/zh_tw/AmazonS3/latest/user-guide/enable-replication.html">How Do I Add a Replication Rule to an S3 Bucket?</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Amazon Web Services</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AWS</tag>
      
      <tag>S3 Cross Region Replication</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>S3 Cross-Account Access</title>
    <link href="/2020/03/30/zyx0330/"/>
    <url>/2020/03/30/zyx0330/</url>
    
    <content type="html"><![CDATA[<h1 id="AWS-Organizations"><a href="#AWS-Organizations" class="headerlink" title="AWS Organizations"></a>AWS Organizations</h1><p>這篇首先前半段是跟 S3 比較沒有直接相關的部分，不過因為為了後面要分享 S3 權限給其他帳號，所以必須先設定 Organization 才有辦法完成。</p><p>另外文中的主帳號為 <code>m0761005</code>，分享的帳號為 <code>chester.tang</code> 這隻帳號（寫在前頭方便觀看這篇圖例中現在的角色關係）</p><p>首先，要分享權限給其他人，可以透過兩種方式進入到 <code>AWS Organizations</code>:</p><ol><li>點選右上方帳號 <code>My Organization</code></li><li><code>Management &amp; Governance / AWS Organizations</code></li></ol><p>進入到頁面後，點選 <code>Create organization</code> 按鈕來建立組織吧！ </p><p><img src="https://i.imgur.com/lLIbo7V.png" alt="IMAGE"></p><p>完成後可以看到，目前的使用者前面有個星號，而我們要透過點選 <code>Add account</code> 來新增使用者</p><p><img src="https://i.imgur.com/xMMNQfl.png" alt="IMAGE"></p><p>選擇要 <code>Invite account</code> 按鈕，並輸入 Email 帳戶或 <code>account ID</code> 來寄送邀請 Mail</p><p><img src="https://i.imgur.com/Nb0jBk0.png" alt="IMAGE"></p><p>收到信件後，切換帳號到剛剛寄送的 AWS 帳號，並 <code>Accept</code> 邀請後就可以加入了！</p><p><img src="https://i.imgur.com/h2PkXnr.png" alt="IMAGE"></p><p>然後裡面就會出現現在擁有的成員～</p><p><img src="https://i.imgur.com/N1PwEGx.png" alt="IMAGE"></p><hr><h1 id="Lab-Sharing-S3-Buckets-Across-Accounts"><a href="#Lab-Sharing-S3-Buckets-Across-Accounts" class="headerlink" title="Lab - Sharing S3 Buckets Across Accounts"></a>Lab - Sharing S3 Buckets Across Accounts</h1><h2 id="3-differents-ways-to-share-S3-buckets-across-accounts"><a href="#3-differents-ways-to-share-S3-buckets-across-accounts" class="headerlink" title="3 differents ways to share S3 buckets across accounts"></a>3 differents ways to share S3 buckets across accounts</h2><ul><li>Using Bucket Policies &amp; IAM (applies across the entire bucket). Programmatic Access Only.</li><li>Using Bucket ACLs &amp; IAM (individual objects). Programmatic Access Only.</li><li>Cross-Account IAM Roles. Programmatic AND Console access.</li></ul><h3 id="IAM"><a href="#IAM" class="headerlink" title="IAM"></a>IAM</h3><p>完成上述的 AWS Organizations 之後，可以看到目前組織的畫面，接下來我們來 <code>Cross-Account Access</code> 給其他帳戶</p><p><img src="https://i.imgur.com/N1PwEGx.png" alt="IMAGE"></p><p>在 <code>Sharing S3 Buckets Across Accounts</code> 給其他帳號之前，我們先來了解一下整個的流程，如果底下內容有點忘記是什麼了可以參考之前的這篇文章 <a href="https://chestertang.site/2020/03/24/zyx0324/">IAM</a>，流程大致如下： </p><ul><li><code>m0761005</code> 帳號需要建立一個 <code>Roles</code> (輸入要給權限的 AWS Account ID)，並且選取擁有的 <code>Policy</code> (e.g. AmazonS3FullAccess)，完成後會有個專屬連結來給分享的帳號做登入</li><li><code>chester.tang</code> 帳號需要建立一個 <code>Users</code> 來切換身份來知道我現在登入的是 <code>m0761005</code> 開出來的登入權限，因此選取擁有的 <code>Policy</code> (e.g. AdminstrationAccess)，使得帳號可以 <code>Switch Role</code></li></ul><p>首先，在 <code>m0761005</code> 帳戶的 <code>IAM</code> 中先建立 <code>Roles</code></p><p><img src="https://i.imgur.com/sqpHNfr.png" alt="IMAGE"></p><p>因為是要分享給另一個帳號，所以選取 <code>Another AWS account</code> 來 <code>Create role</code>，不過首先要知道另一個帳號的 Account ID 才有辦法進行</p><p><img src="https://i.imgur.com/WMS4V7j.png" alt="IMAGE"></p><p>這個部分應該就滿好懂的，我給這個帳戶要開啟什麼權限，能做什麼操作，都可以透過 <code>policy</code> 來達成，這邊就直接以 S3 ( <code>AmazonS3FullAccess</code> ) 來做範例</p><p><img src="https://i.imgur.com/eGzX6TY.png" alt="IMAGE"></p><p>今天我們分享這個權限給其他人不會每次都需要上面的步驟，我們可以設定一個 <code>Role name</code> 專門在分享某一個權限給特定的人，這樣就不用一直選取要給的權限。</p><p>好比我現在想分享 S3 的權限給我的同事們，我就直接把這個 <code>Role name</code> 叫做 <code>S3_Cross_Account_Access</code> 直接清楚明瞭，也方便之後知道這個 <code>Role</code> 裡面擁有的 <code>Policy</code> 是什麼…</p><p><img src="https://i.imgur.com/waiqGGj.png" alt="IMAGE"></p><p>到這個步驟就完成了上述流程的一半步驟，我們 <code>m0761005</code> 帳戶就有可以給其他帳戶 <code>S3</code> 權限的 <code>Role</code></p><p><img src="https://i.imgur.com/MAOQeDK.png" alt="IMAGE"></p><blockquote><p>圖中的 <code>Give this link to users who can switch roles in the console</code> 此段後的連結可以先存起來，此段為其他帳號要 <code>Switch Roles</code> 的連結</p></blockquote><p>接下來，我們來切換帳戶到 <code>Chester.tang</code>。如果上段的 <code>AWS Organizations</code> 有完成的話，會看到目前帳號的是在哪個 <code>Organizations</code> 下，並且會有個 ID</p><p><img src="https://i.imgur.com/eAfqYF4.png" alt="IMAGE"></p><p><code>Chester.tang</code> 的帳戶中，如上述的流程，我們先要來建立一個 <code>Users</code> 來跟 <code>m0761005</code> 連結，並且方便我們切換角色</p><p><img src="https://i.imgur.com/cDdQB7Z.png" alt="IMAGE"></p><p>點選 <code>Add user</code> 後，首先先取一個 <code>User name</code> 的名字（記住這個名字將會是日後登入 AWS 的帳戶名稱），並且自己設定密碼</p><p><img src="https://i.imgur.com/dx3tuG5.png" alt="IMAGE"></p><p>當然地，這邊擁有的 <code>Policy</code> 就是登入了～跟之前 <code>m0761005</code> 在建立 <code>Roles</code> 是相同的</p><p><img src="https://i.imgur.com/IgALPgm.png" alt="IMAGE"></p><p>完成後可以再次確認一下前面所選取的項目</p><p><img src="https://i.imgur.com/d5TAtBm.png" alt="IMAGE"></p><p>到這邊完成後，我們就登出並再登入剛剛建立的帳戶名稱，這時候就會看到有 <code>Switch Roles</code> 的按鈕可以選取，然後來設定 <code>Role</code></p><p><img src="https://i.imgur.com/0LwDZSC.png" alt="IMAGE"></p><blockquote><p>還記得在 <code>m0761005</code> 在建立 <code>Roles</code> 的時候有的 <code>Give this link to users who can switch roles in the console</code> 後存起來的連結嗎？這邊也可以直接貼那段連結就會挑轉到這個頁面了</p></blockquote><p><img src="https://i.imgur.com/8mULcNq.png" alt="IMAGE"></p><p>完成後，就可以看到目前的 <code>Role</code> 並且還有其他資訊</p><p><img src="https://i.imgur.com/KR9Px3x.png" alt="IMAGE"></p><h1 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h1><ul><li>Always enable multi-factor authentication on root account </li><li>Always using a strong and complex password on root account</li><li>Paying account should be used for billing purposes only. Do not deploy resources into the paying payment.</li><li>Enable/Disable AWS services using Service Control Policies(SCP) either on OU or on individual accounts.</li></ul>]]></content>
    
    
    <categories>
      
      <category>Amazon Web Services</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AWS</tag>
      
      <tag>S3 Cross-Account Access</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>S3 Lifecycle Management</title>
    <link href="/2020/03/28/zyx0328/"/>
    <url>/2020/03/28/zyx0328/</url>
    
    <content type="html"><![CDATA[<h1 id="Lifecycle-Management"><a href="#Lifecycle-Management" class="headerlink" title="Lifecycle Management"></a>Lifecycle Management</h1><p>Lifecycle Management 定義物件存留期間，S3 所要採取的動作 ( e.g. 將物件轉換成另一個 Stroage Classes、archive Object，或在指定期限後刪除)。</p><p>啟用了 Versioning 的 S3 Bucket 中，同一個物件可有多個 Version，包括 Current version、Previous version，而 Lifecycle Management 就是在定義 Current version、Previous version 的動作。</p><h2 id="建立-Lifecycle-Management"><a href="#建立-Lifecycle-Management" class="headerlink" title="建立 Lifecycle Management"></a>建立 Lifecycle Management</h2><ol><li>選擇你現在要設定 Lifecycle Management 的 S3 Bucket（ <a href="https://console.aws.amazon.com/s3">https://console.aws.amazon.com/s3</a> ）</li><li>點選 <code>Management</code> 按鈕後，來新增 <code>Add lifecycle rule</code> 訂定一個規則</li></ol><p><img src="https://i.imgur.com/Grj9B9v.png" alt="IMAGE"></p><ol start="3"><li>輸入 rule name 以及看是否要有個 Prefix（前綴）、Tag（標籤）來幫助分類，如果不需要的話，直接選取 <code>Apply to all objects in the bucket</code> 即可</li></ol><blockquote><p><a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys">https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys</a></p></blockquote><p><img src="https://i.imgur.com/Grj9B9v.png" alt="IMAGE"></p><ol start="4"><li>可以同時為 Current version、Previous version 定義 transition（以兩者都定義為範例）</li></ol><ul><li>選擇在 <code>30</code> 天後，將 Upload 的 Object 轉為 <code>Standard-IA</code></li><li>選擇在 <code>60</code> 天後，將 Upload 的 Object 轉為 <code>Glacier</code></li></ul><blockquote><p>Glacier: <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html">https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html</a></p></blockquote><p><img src="https://i.imgur.com/rbAIld4.png" alt="IMAGE"></p><ol start="5"><li>接下來設定一些 <code>Expiration</code> 的問題</li></ol><ul><li>選取 <code>Expire current version of object</code>，然後輸入在自 Object Uploaad 的 <code>425</code> 天後，刪除該 Object。如果有選擇此選項，則無法選擇下方的 <code> Clean up expired object delete marker</code> 的選項。</li><li>選取 <code>Permanently delete previous versions</code>，然後輸入自 Object 成為舊版 version 的 <code>425</code> 天後要永久刪除該 Object。</li><li>Clean up incomplete multipart uploads (清除未完成的分段上傳) 在一般來說都建議選取。例如，可以設定要在啟動分段上傳的 <code>7</code> 天後，結束並清除所有未完成的上傳。</li></ul><p><img src="https://i.imgur.com/ftgqnrl.png" alt="IMAGE"></p><ol start="6"><li>最後，稍微看一下自己的設定，就完成 <code>Lifecycle Management</code> 了～</li></ol><p><img src="https://i.imgur.com/G8cOfLZ.png" alt="IMAGE"></p><blockquote><p><a href="https://docs.aws.amazon.com/AmazonS3/latest/user-guide/create-lifecycle.html">https://docs.aws.amazon.com/AmazonS3/latest/user-guide/create-lifecycle.html</a></p></blockquote><h1 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h1><ul><li>Automates moving your objects between the different storage tiers.</li><li>Can be used in conjunction with versioning.</li><li>Can be applied to current versions and previous versions.</li></ul>]]></content>
    
    
    <categories>
      
      <category>Amazon Web Services</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AWS</tag>
      
      <tag>S3 Lifecycle Management</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>S3 Versioning</title>
    <link href="/2020/03/27/zyx0327/"/>
    <url>/2020/03/27/zyx0327/</url>
    
    <content type="html"><![CDATA[<h1 id="S3-Versioning"><a href="#S3-Versioning" class="headerlink" title="S3 Versioning"></a>S3 Versioning</h1><h2 id="Using-Versioning-with-S3"><a href="#Using-Versioning-with-S3" class="headerlink" title="Using Versioning with S3"></a>Using Versioning with S3</h2><ul><li>Stores all versions of an object. (including all writes and even if you delete an object)</li><li>Great backup tool.</li><li>Once enabled, Versioning cannot be disabled, only suspended.</li><li>Intergrate with Lifecycle rules.</li><li>Versioning’s MFA DELETE capability, which uses multi-factor authentication, can be used to provide an additional layer of security.</li></ul><h2 id="建立-S3-Bucket-Versioning"><a href="#建立-S3-Bucket-Versioning" class="headerlink" title="建立 S3 Bucket Versioning"></a>建立 S3 Bucket Versioning</h2><p>先建立一個新的 S3 Bucket，如果有遺忘的部分可以參考上篇 <a href="https://chestertang.site/2020/03/26/zyx0326/">AWS - S3 Bucket + Encryption</a> 的部分，可先設成 <code>Public</code>！</p><p><img src="https://i.imgur.com/hjqqtQx.png" alt="IMAGE"></p><p>再來上傳第一版本的檔案吧！（這邊以 txt 檔來做範例，記得也設定成 Public 才可以看到）</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs txt">Hi, chesterTang!<br><br>This is version 1<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/IT1sJ83.png" alt="IMAGE"></p><p>完成基本的上傳與設定後，我們要來開啟 <code>Versioning</code> 的功能，點選 <code>Properties</code> 可以看到 <code>Versioning</code> 的框框，這時只要選取到 <code>Enable versioning</code> 並且 <code>Save</code> 就可以開啟。</p><p><img src="https://i.imgur.com/vJMujX2.png" alt="IMAGE"></p><p>將原本上傳的檔案把內容稍微更動一下並且再次上傳</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs txt">Hi, chesterTang!<br><br>!!! Oh !!! This is version 2 !!! Oh !!!<br></code></pre></td></tr></table></figure><p>或許剛剛上傳錯檔案想要刪除，結果就發現 Bucket 裡面的 files 都不見了？明明還有上個版本、上上個版本呀？</p><p><img src="https://i.imgur.com/9bxvWJz.png" alt="IMAGE"><br><img src="https://i.imgur.com/8ZsoWFZ.png" alt="IMAGE"></p><p>眼尖的你應該其實就已經發現兩個問題：</p><ol><li>在上述開啟 <code>Versioning</code> 的時候，S3 Bucket 裡面就有多出 <code>Versions Hide/Show</code> 的按鈕</li><li>更改內容再次上傳檔案後或者刪除，txt 檔案真的文字更動了，但是上個版本、上上個版本跑去哪裡了呢？</li></ol><blockquote><p>把 Versions Show 打開，就能看見到底做了什麼！</p></blockquote><p><img src="https://i.imgur.com/uEjjg9I.png" alt="IMAGE"></p><p>可以發現剛剛的刪除，其實不是真正的刪除，居然有一個版本是在做刪除這件事情把它蓋過去。</p><blockquote><p>所以這邊又衍生出了一個新議題，如果我真的想退回上個版本該怎麼做才能達成？</p></blockquote><p>必須在 <code>Versions Show</code> 的狀況下，做 <code>Actions</code> 才能達成退版本的效果，不然只是又新增另一個版本上去而已！</p><p><img src="https://i.imgur.com/6sXMAWz.png" alt="IMAGE"></p><h1 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h1><ul><li>Stores all versions of an object. (including all writes and even if you delete an object)</li><li>Once enabled, Versioning cannot be disabled, only suspended.</li><li>Intergrate with Lifecycle rules.</li><li>Versioning’s MFA DELETE capability, which uses multi-factor authentication, can be used to provide an additional layer of security.</li></ul>]]></content>
    
    
    <categories>
      
      <category>Amazon Web Services</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AWS</tag>
      
      <tag>S3 Versioning</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>S3 Bucket + Encryption</title>
    <link href="/2020/03/26/zyx0326/"/>
    <url>/2020/03/26/zyx0326/</url>
    
    <content type="html"><![CDATA[<h1 id="Storage-S3"><a href="#Storage-S3" class="headerlink" title="Storage / S3"></a>Storage / S3</h1><h2 id="S3-Objects-stroage-是什麼？"><a href="#S3-Objects-stroage-是什麼？" class="headerlink" title="S3 (Objects stroage) 是什麼？"></a>S3 (Objects stroage) 是什麼？</h2><ul><li>S3 is a safe place to store your files by objects.</li><li>It is Object-based stroage.</li><li>The data is spread across mutiple devices and mutiple facilities.</li></ul><h2 id="The-Basics-基礎"><a href="#The-Basics-基礎" class="headerlink" title="The Basics 基礎"></a>The Basics 基礎</h2><ul><li>S3 is Object-based - i.e. allows you to upload files.</li><li>Files can be from 0 byte to 5TB.</li><li>There is un unlimited stroage.</li><li>Files are stored in Buckets (folder).</li><li>S3 is a univeral namespace. That is, names must be unique globally.</li><li>Upload file to S3, if success will receive HTTP 200 code.</li></ul><h2 id="Objects"><a href="#Objects" class="headerlink" title="Objects"></a>Objects</h2><p>S3 is Object based. Think of Objects just as files.</p><ul><li><p>Key (This is simply the name of object)</p></li><li><p>Value (This is simply the data and is made up of a sequence of bytes).</p></li><li><p>Varsion ID (Important for versioning)</p></li><li><p>Metadata (Data about data you are storing)</p></li><li><p>Subresources</p><ul><li>Access Control Lists(ACL)</li><li>Torrent</li></ul><blockquote><p>(<a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingObjects.html">https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingObjects.html</a>)</p></blockquote><h2 id="S3-如何儲存資料"><a href="#S3-如何儲存資料" class="headerlink" title="S3 如何儲存資料?"></a>S3 如何儲存資料?</h2></li><li><p>Read after Write consistency for PUTS of new objects</p></li><li><p>Eventual Consistency for overwrite PUTS and DELETES (will take some time to propagate)</p></li></ul><blockquote><p><a href="https://docs.aws.amazon.com/redshift/latest/dg/managing-data-consistency.html">https://docs.aws.amazon.com/redshift/latest/dg/managing-data-consistency.html</a></p></blockquote><h2 id="S3-Guarantees"><a href="#S3-Guarantees" class="headerlink" title="S3 Guarantees"></a>S3 Guarantees</h2><ul><li>Built for 99.99% availability for the S3 platform.</li><li>Amazon guarantee 99.99% availability.</li><li>Amazon guarantee 99.999999999% durability for S3 information (11 * 9’s).</li></ul><blockquote><p><a href="https://aws.amazon.com/tw/s3/faqs/">https://aws.amazon.com/tw/s3/faqs/</a></p></blockquote><h2 id="S3-Feature"><a href="#S3-Feature" class="headerlink" title="S3 Feature"></a>S3 Feature</h2><ul><li>Tiered Stroage Available</li><li>Lifecycle Management</li><li>Versioning</li><li>Encryption</li><li>MFA delete</li><li>Secure your data using Access Control Lists and Buckets Policies</li></ul><blockquote><p><a href="https://www.amazonaws.cn/en/s3/features/">https://www.amazonaws.cn/en/s3/features/</a></p></blockquote><hr><h1 id="建立-S3-Bucket"><a href="#建立-S3-Bucket" class="headerlink" title="建立 S3 Bucket"></a>建立 S3 Bucket</h1><ol><li>點選 <code>Stroage / S3</code> 後，可以看到 <code>Amazon S3</code> 的頁面，如果是還沒有建立過 <code>buckets</code> 的帳戶，會顯示 <code>No buckets, You don’t have any buckets</code>。</li></ol><p><img src="https://i.imgur.com/Y0Laeug.png" alt="IMAGE"></p><ol start="2"><li>再來點選 <code>Create Bucket</code> 來建立，記得前面 Basics 所提的 <code>S3 is a univeral namespace. That is, names must be unique globally.</code>：Buckets 的名字不能與任何一個 Buckets 有重複的名稱，如果這邊也人先取過了，那必須要換一個名稱才行，之後就可以建立完成 S3 Bucket。</li></ol><p><img src="https://i.imgur.com/LS838w6.png" alt="IMAGE"></p><ol start="3"><li>建立完成後，可以看到我們現在的 Bucket 還是空的，所以來 Upload 一些檔案上去吧！</li></ol><p><img src="https://i.imgur.com/G162wFZ.png" alt="IMAGE"></p><p>當完成上傳後，伺服器會回傳 200 給使用者 (Basic)，這時就可以選取想看的檔案名稱，來看檔案內容。其中值得注意的有以下兩點：</p><ul><li>可以看到 <code>Key</code> 的名字與檔案的名稱是相同的。</li><li>從 <code>Object URL    https://chestertang1231.s3.amazonaws.com/Chester.jpg</code> 這段可以看出這張照片現在的 <code>domain name</code>，這也是為什麼上述 <code>Bucket name</code> 不能相同的原因</li></ul><p><img src="https://i.imgur.com/EjrjTBL.png" alt="IMAGE"></p><blockquote><p>有沒有點進去連結想看照片，結果什麼都沒有呢？（沒錯，因為少了點設定…</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml">This XML file does not appear to have any style information associated with it. The document tree is shown below.<br><span class="hljs-tag">&lt;<span class="hljs-name">Error</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">Code</span>&gt;</span>AccessDenied<span class="hljs-tag">&lt;/<span class="hljs-name">Code</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">Message</span>&gt;</span>Access Denied<span class="hljs-tag">&lt;/<span class="hljs-name">Message</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">RequestId</span>&gt;</span>3436A43898A832D2<span class="hljs-tag">&lt;/<span class="hljs-name">RequestId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">HostId</span>&gt;</span><br>    ajZsWrnWWZJVaby4VOG0/Sgv2+bsOOq9Z9y+iNKscFNvMYI8RIklkCVh4U0le4KN1sDR9b7D/9I=<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">HostId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">Error</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="4"><li>點選 <code>Actions</code> 按鈕來對這張被選取的照片進行其他動作，但是會發現 <code>Make Public</code> 顯示灰色不給你點選，原因是你現在的 <code>S3</code> 在一開始是設定為不公開的（上述 Create Bucket 步驟中的 <code>Block all public setting</code>），因此這張照片也無法被公開！</li></ol><p><img src="https://i.imgur.com/DffECB6.png" alt="IMAGE"></p><ol start="5"><li>點選 <code>Permissions</code> 按鈕可以看到 <code>Block public access</code> 的一些設定內容，這跟當初在 <code>Create Bucket</code> 時是相同的，因此只要選取右方的 <code>Edit</code> 按鈕並把 <code>Block all public access</code> 反勾選在 <code>Save</code> 起來就可以！（會要你確定嗎？confirm，只需打上 comfirm 即可）</li></ol><p><img src="https://i.imgur.com/cYMsbPt.png" alt="IMAGE"></p><ol start="6"><li>完成後再點選 <code>Actions</code> 按鈕，把它設定為 <code>Make Public</code> 就可以進去剛剛的連結啦！</li></ol><blockquote><p>補充 &gt; 可以選擇檔案放在哪種 Storage Classes 的儲存空間：<a href="https://docs.aws.amazon.com/zh_tw/AmazonS3/latest/dev/storage-class-intro.html">S3 Stroage Classes</a></p></blockquote><hr><h1 id="Security-And-Encryption"><a href="#Security-And-Encryption" class="headerlink" title="Security And Encryption"></a>Security And Encryption</h1><h2 id="The-Basics-基礎-1"><a href="#The-Basics-基礎-1" class="headerlink" title="The Basics 基礎"></a>The Basics 基礎</h2><p>Amazon S3 預設加密提供一種為 Amazon S3 儲存貯體設定預設加密行為的方式。可以在儲存貯體上設定預設加密，讓所有物件在存放於儲存貯體中時維持加密狀態。這些物件的加密，是使用伺服器端加密搭配 Amazon S3 受管金鑰 (SSE-S3) 或 AWS Key Management Service (AWS KMS) 客戶主金鑰 (CMK)。</p><p>所有新建立的 buckets 都是 PRIVATE 的，可以透過以下兩種方式來控制權限：</p><ul><li>Bucket Policies</li><li>Access Control Lists</li></ul><p>Encryptions In Transit is achieved by </p><ul><li>SSL / TLS</li></ul><h3 id="Encryptions-At-Rest-Server-side-is-achieved-by"><a href="#Encryptions-At-Rest-Server-side-is-achieved-by" class="headerlink" title="Encryptions At Rest (Server side) is achieved by"></a>Encryptions At Rest (Server side) is achieved by</h3><ul><li>S3 Managed Keys - SSE-S3</li><li>AWS Key Management Service, Managed Keys - SSE-KMS</li><li>Server Side Encryption with Customer Provided Keys - SSE-C</li></ul><h3 id="Client-Side-Encryption"><a href="#Client-Side-Encryption" class="headerlink" title="Client Side Encryption"></a>Client Side Encryption</h3><h1 id="Encryption-加密"><a href="#Encryption-加密" class="headerlink" title="Encryption 加密"></a>Encryption 加密</h1><ol><li>ㄧ樣來對我們剛剛 Upload 的圖片來做加密的動作，從 <code>Properties</code> 可以看到目前的 <code>Encryption</code> 是沒有加密過的，只要點選 <code>Encryption</code> 就能更改目前的狀態。</li></ol><p><img src="https://i.imgur.com/fAe8RhL.png" alt="IMAGE"></p><ol start="2"><li>這邊可以選擇：(1)AES-256、(2)AWS-KMS 兩種方式（以下就直接以(1)的方式來加密）</li></ol><p><img src="https://i.imgur.com/ILSOWaP.png" alt="IMAGE"></p><ol start="3"><li>點選 <code>Save</code> 按鈕後，就完成了加密啦！</li></ol><p><img src="https://i.imgur.com/bUsi3eS.png" alt="IMAGE"></p><blockquote><p><a href="https://docs.aws.amazon.com/AmazonS3/latest/user-guide/default-bucket-encryption.html">https://docs.aws.amazon.com/AmazonS3/latest/user-guide/default-bucket-encryption.html</a></p></blockquote><h2 id="Default-Encryption-加密"><a href="#Default-Encryption-加密" class="headerlink" title="Default Encryption 加密"></a>Default Encryption 加密</h2><p>除了單張照片加密之外，也可以預設加密的方法，其實與上述都大同小異，可以點選 <code>Properties</code> 的 <code>Default Encryption</code> 然後選取 <code>AES-256</code> 也就完成。</p><p><img src="https://i.imgur.com/zuRt4H6.png" alt="IMAGE"></p><h1 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h1><ul><li>Simple creating of S3 Bucket and Permissions of the Block public access</li><li>Buckets are a universal name space</li><li>Upload an object to S3 receive a HTTP 200 Code</li><li>S3, S3-IA, S3-IA (One Zone), Glacier</li><li>Control access to buckets using either a bucket ACL or using Bucket Polices</li></ul>]]></content>
    
    
    <categories>
      
      <category>Amazon Web Services</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AWS</tag>
      
      <tag>S3 Bucket</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AWS - CloudWatch - Billing</title>
    <link href="/2020/03/25/zyx0325/"/>
    <url>/2020/03/25/zyx0325/</url>
    
    <content type="html"><![CDATA[<h1 id="Management-amp-Governance-CloudWatch"><a href="#Management-amp-Governance-CloudWatch" class="headerlink" title="Management &amp; Governance / CloudWatch"></a>Management &amp; Governance / CloudWatch</h1><h2 id="Billing-帳單"><a href="#Billing-帳單" class="headerlink" title="Billing 帳單"></a>Billing 帳單</h2><h3 id="CloudWatch"><a href="#CloudWatch" class="headerlink" title="CloudWatch"></a>CloudWatch</h3><ul><li>點選 <code>Management &amp; Governance / CloudWatch</code> 後，可以看到 <code>CloudWatch</code> 的頁面。<code>CloudWatch</code> 是一種監控和管理服務，可以為 AWS、混合和現場部署應用程式和基礎設施資源提供資料和可行的洞查。</li></ul><p><img src="https://i.imgur.com/MNBZnJb.png" alt="IMAGE"></p><p>使用 CloudWatch 可以監控整個堆疊 (應用程式、基礎設施和服務)，並利用警示、日誌和事件資料來執行自動操作，並縮短平均解決時間。</p><blockquote><p><a href="https://aws.amazon.com/tw/cloudwatch/features/">https://aws.amazon.com/tw/cloudwatch/features/</a></p></blockquote><p>在之後的文章中會再細部介紹，這篇文章將設定 <code>Billing</code> 帳單的部分。</p><p><img src="https://i.imgur.com/nZMzWKK.png" alt="IMAGE"></p><p><img src="https://i.imgur.com/TUuPnup.png" alt="IMAGE"></p><ul><li>點選 <code>Billing</code> 按鈕後，再點選 “下方” 的 <code>Create alarm</code> 按鈕，這時就可以看到設定 <code>Billing</code> 的四個步驟：</li></ul><ol><li>Specify metric and conditions</li></ol><p>針對 Conditions 的不同，使用者這邊可以設定當額度超過多少美金，就寄送帳單通知信；當然地，反之也可以設定小於多少美金寄送帳單通知信。</p><p><img src="https://i.imgur.com/4eBW3U6.png" alt="IMAGE"></p><p><img src="https://i.imgur.com/YmvLFQn.png" alt="IMAGE"></p><ol start="2"><li>Configure actions</li></ol><p>而寄送通知信給誰？還有標題是什麼就要從這個地方設定啦！如果是還未建立過 <code>topic</code> 的話就無法選擇 <code>Select an existing SNS topic</code>，如圖所示，這邊新建一個新的 <code>topic</code> 並填寫要傳送通知信給哪個信箱。</p><p><img src="https://i.imgur.com/jxgMFbx.png" alt="IMAGE"></p><p>然後就可以收到信件啦！（amazon 的 Subscription confirmed! 信件這邊就不附上惹…懶</p><p><img src="https://i.imgur.com/x46MAri.png" alt="IMAGE"></p><ol start="3"><li>Add name and description</li></ol><p>接下來也設定這個 <code>Alarm</code> 名稱及敘述…</p><p><img src="https://i.imgur.com/j5yOcI7.png" alt="IMAGE"></p><ol start="4"><li>Preview and create</li></ol><p>設定完成後就可以在 <code>CloudWatch &gt; Alarms</code> 中看到設置的 <code>Alarms</code></p><p><img src="https://i.imgur.com/h3OkiX3.png" alt="IMAGE"></p><h1 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h1><p><a href="https://aws.amazon.com/tw/free/?all-free-tier.sort-by=item.additionalFields.SortRank&all-free-tier.sort-order=asc">CloudWatch Free Tier Includes</a>：</p><ul><li>Simple settings of Billing Alarm</li><li>10 Custom Metrics and 10 Alarms</li><li>1,000,000 API Requests </li><li>5GB of Log Data Ingestion and 5GB of Log Data Archive</li></ul>]]></content>
    
    
    <categories>
      
      <category>Amazon Web Services</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AWS</tag>
      
      <tag>Billing</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AWS - IAM</title>
    <link href="/2020/03/24/zyx0324/"/>
    <url>/2020/03/24/zyx0324/</url>
    
    <content type="html"><![CDATA[<h1 id="Security-Identity-amp-Compliance-IAM"><a href="#Security-Identity-amp-Compliance-IAM" class="headerlink" title="Security, Identity, &amp; Compliance / IAM"></a>Security, Identity, &amp; Compliance / IAM</h1><h2 id="AWS-IAM-是什麼？"><a href="#AWS-IAM-是什麼？" class="headerlink" title="AWS IAM 是什麼？"></a><a href="https://docs.aws.amazon.com/zh_tw/IAM/latest/UserGuide/introduction.html">AWS IAM</a> 是什麼？</h2><blockquote><p>Identity Access Management allows you to manage users and thier level of access to the AWS Console.</p></blockquote><ul><li>centralised（集中）control of your AWS account</li><li>Shared access to your AWS account</li><li>Granular（粒）Permissions（權限）</li><li>Identity（身份）Federation（including Active Directory, Facebook, Linkin, etc..）</li><li>Multifactor Authentication</li><li>Provide temporary access for users/devices and services where necessary</li><li>integrates（整合）with many deifferent aws services</li><li>Supports PCI DSS（Payment Card Industry Data Security Standard 支付卡行業數據安全標準）Compliance</li></ul><blockquote><p>Key Terminology For IAM</p></blockquote><ul><li>Users：End Users such as people, employees of an organization etc.</li><li>Groups：A collection of users. Each user in the group will inherit the permission of the group.</li><li>Policies：Policies are made up of documents, called Policy documents. These doccuments are in a format called JSON and they give permissions as to what a User/Groups/Role is able to do.</li><li>Roles：you create Roles and then assign them to AWS Resources.</li></ul><hr><h1 id="從-AWS-AIM-設定了解觀念"><a href="#從-AWS-AIM-設定了解觀念" class="headerlink" title="從 AWS AIM 設定了解觀念"></a>從 AWS AIM 設定了解觀念</h1><p><img src="https://i.imgur.com/ixiMVAd.png" alt="IMAGE"></p><p>點選 <code>Security, Identity, &amp; Compliance / IAM</code> 後，可以登入 <code>Welcome to Identity and Access Management</code> 的頁面。</p><h2 id="Customize-IAM-users-sign-in-link"><a href="#Customize-IAM-users-sign-in-link" class="headerlink" title="Customize IAM users sign-in link"></a>Customize IAM users sign-in link</h2><p>其中可以點選 <code>Customize</code> 按鈕修改 <code>IAM users sign-in link</code> 的連結（無法與其他人重複）</p><p><img src="https://i.imgur.com/Y29z4y5.png" alt="IMAGE"></p><p>成功編輯後 <code>IAM users sign-in link</code> 就會被替換（ e.g. <a href="https://chestertang1231.signin.aws.amazon.com/console">https://chestertang1231.signin.aws.amazon.com/console</a> ）</p><h2 id="Security-Status"><a href="#Security-Status" class="headerlink" title="Security Status"></a>Security Status</h2><h3 id="Activate-MFA-on-your-root-account"><a href="#Activate-MFA-on-your-root-account" class="headerlink" title="Activate MFA on your root account"></a>Activate MFA on your root account</h3><ol><li>Multi-factor authentication（多重要素驗證）</li></ol><p>又譯多因子認證、多因素驗證、多因素認證，是一種電腦存取控制的方法，用戶要通過兩種以上的認證機制之後，才能得到授權，使用電腦資源。例如，使用者要輸入 PIN 碼，插入銀行卡，最後再經指紋比對，通過這三種認證方式，才能獲得授權。這種認證方式可以提高安全性。</p><p>更生活化的例子就像是，現在的預約買口罩需要讀卡機來讀健保卡，又或者是以前玩電玩除了要先登入帳號之外，還要有 beanfun 的讀卡機來讀卡，也就是雙重認證的概念。</p><blockquote><p><a href="https://en.wikipedia.org/wiki/Multi-factor_authentication">https://en.wikipedia.org/wiki/Multi-factor_authentication</a></p></blockquote><p>點選 <code>Manage MFA</code> 來設定雙重認證，其中又分為以下三種：</p><ul><li><code>Virtual MFA device</code>（uthenticator app installed on your mobile device or computer）</li><li><code>U2F security key</code>（YubiKey or any other compliant U2F device）</li><li><code>Other hardware MFA device</code>（Gemalto token）</li></ul><p><img src="https://i.imgur.com/MsQwVXu.png" alt="IMAGE"></p><p>可以透過手機下載 <code>Google authenticator</code> APP 來進行 <code>Virtual MFA device</code> 驗證，當然也可依照個人喜好選擇其他雙重認證方式。</p><p>流程只需要掃描 QRcode 並輸入兩次手機 App 的 <code>MFA-code</code> 就可以完成。</p><p><img src="https://i.imgur.com/pE4KUht.png" alt="IMAGE"></p><ol start="2"><li>Create individual IAM users</li></ol><p><img src="https://i.imgur.com/e3J1umx.png" alt="IMAGE"></p><p>設定完成 <code>Multi-factor authentication</code> 之後並點選 <code>Manage Users</code> 來 <code>Add Users</code>！</p><p><img src="https://i.imgur.com/X5ekfc2.png" alt="IMAGE"></p><ol start="3"><li>Use groups to assign permissions</li></ol><p>並且設定 <code>Group name</code> 及選擇 <code>Policy name</code></p><p><img src="https://i.imgur.com/jVwtAM0.png" alt="IMAGE"></p><p>之後都選擇下一步即可建立好 User &amp; Group，完成後就會顯示 <code>Success</code> 的畫面：</p><ul><li>注意 <code>Secret access key</code> 的 <code>show</code> 只能點擊一次，之後就無法看到</li><li>建議直接下載 <code>.csv</code> 檔案來查看 <code>Password</code>、<code>Access key ID</code>、<code>Secret access key</code> 等訊息</li><li>後方的 <code>Send Email</code> 也可以直接寄信的使用者</li></ul><p><img src="https://i.imgur.com/PH8UkEI.png" alt="IMAGE"></p><blockquote><p>還記得剛剛設定的 policie name 中的 <code>AdministratorAccess</code> 嗎？</p></blockquote><p>從這個 Police <code>AdministratorAccess</code> 中可以看出，它事實上是一個 JSON 格式，但這又代表著什麼意思呢？可以看到巢狀裡面的 <code> &quot;Effect&quot;: &quot;Allow&quot;</code> 代表著這個人是被允許進入的，且底下的 <code>Action</code>, <code>Resource</code> 的權限是 <code>*</code> 號，也就是代表著最大權限，如同 admin 的概念一樣。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs JSON">  &#123;<br>    <span class="hljs-attr">&quot;Version&quot;</span>: <span class="hljs-string">&quot;2012-10-17&quot;</span>,<br>    <span class="hljs-attr">&quot;Statement&quot;</span>: [<br>        &#123;<br>            <span class="hljs-attr">&quot;Effect&quot;</span>: <span class="hljs-string">&quot;Allow&quot;</span>,<br>            <span class="hljs-attr">&quot;Action&quot;</span>: <span class="hljs-string">&quot;*&quot;</span>,<br>            <span class="hljs-attr">&quot;Resource&quot;</span>: <span class="hljs-string">&quot;*&quot;</span><br>        &#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/lidvDbc.png" alt="IMAGE"></p><ol start="4"><li>Apply an IAM password policy</li></ol><p><img src="https://i.imgur.com/bGlsefe.png" alt="IMAGE"></p><h1 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h1><p>完成這些初步的設定可以大致了解到 AWS IAM 的用途，稍微做一下這篇的總結，並歸納一下這篇學到的觀念：</p><ul><li>IAM is universal（通用）. It does not apply to regions at this time.</li><li>The <code>root account</code> is simply the account created when first setup your AWS account. It has complete Admin access.</li><li>New Users have NO Permissions when first created.（ e.g. <code>2. Create individual IAM users</code>）</li><li>New Users are assigned Access Key ID &amp; Secret Access Key when first created.</li><li>Access Key ID &amp; Secret Access Key are not the same as a password. You can use this to access AWS via the API and Command Line</li><li>You only get to view Access Key ID &amp; Secret Access Key once. If you lost, you have to generate them.</li><li>Always setup Multifactor Authentication on your root account.</li><li>You can create and customize your own password rotation policies.（ e.g. <code>4. Apply an IAM password policy</code>）</li></ul>]]></content>
    
    
    <categories>
      
      <category>Amazon Web Services</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AWS</tag>
      
      <tag>IAM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R 筆記 - respond_to? / send</title>
    <link href="/2020/03/10/zyx0310/"/>
    <url>/2020/03/10/zyx0310/</url>
    
    <content type="html"><![CDATA[<h1 id="R筆記-respond-to-send"><a href="#R筆記-respond-to-send" class="headerlink" title="R筆記 - respond_to? / send"></a>R筆記 - respond_to? / send</h1><p>往常的禮拜一是公司部版的日子，而有時 cucumber 沒過或 sync 多了一些空白是家常便飯，不外乎重新再給他跑一次看看（local 沒問題，retry），或者是哪邊稍微修改等等…，結果這次卻到了快下班前才大致上到一個段落，原因想當然就是跟為標題有關，於是又有了這篇文章的誕生…</p><h2 id="respond-to"><a href="#respond-to" class="headerlink" title="respond_to?"></a>respond_to?</h2><p>先來 Ruby doc 的定義</p><blockquote><p>respond_to?(symbol, include_all=false) → true or falseclick to toggle source<br>respond_to?(string, include_all=false) → true or false<br>Returns true if obj responds to the given method. Private and protected methods are included in the search only if the optional second parameter evaluates to true.</p></blockquote><p>我想有看過龍哥的 railsbook 中應該會有看過這段</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span></span><br>  <span class="hljs-variable">@users</span> = User.all<br>  respond_to <span class="hljs-keyword">do</span> <span class="hljs-params">|format|</span><br>    format.json &#123; render <span class="hljs-symbol">json:</span> <span class="hljs-variable">@users</span> &#125;<br>    format.html &#123; render <span class="hljs-symbol">:index</span> &#125;<br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>使用 respond_to 可以針對不同的格式（html 或 json）輸出不同的結果。除了用 respond_to 之外，讓我們接著看看另一種做法。</p><p>因此大致上了解了他的用法，不過跟定義有什麼關聯呢？讓我們看下去!</p><h2 id="send"><a href="#send" class="headerlink" title="send"></a>send</h2><p>ㄧ樣也是先來看 Ruby doc 定義</p><blockquote><p>send(symbol [, args…]) → objclick to toggle source<br><strong>send</strong>(symbol [, args…]) → obj<br>send(string [, args…]) → obj<br><strong>send</strong>(string [, args…]) → obj<br>Invokes the method identified by symbol, passing it any arguments specified. You can use <strong>send</strong> if the name send clashes with an existing method in obj. When the method is identified by a string, the string is converted to a symbol.</p></blockquote><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Klass</span></span><br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">hello</span><span class="hljs-params">(*args)</span></span><br>    <span class="hljs-string">&quot;Hello &quot;</span> + args.join(<span class="hljs-string">&#x27; &#x27;</span>)<br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br>k = Klass.new<br>k.send <span class="hljs-symbol">:hello</span>, <span class="hljs-string">&quot;gentle&quot;</span>, <span class="hljs-string">&quot;readers&quot;</span>   <span class="hljs-comment">#=&gt; &quot;Hello gentle readers&quot;</span><br></code></pre></td></tr></table></figure><p>再次的我想有看過龍哥的 railsbook 中應該有看過 <code>private 方法</code> 這段</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby">kitty = Cat.new<br>kitty.gossip          <span class="hljs-comment"># =&gt; NoMethodError</span><br>kitty.send(<span class="hljs-symbol">:gossip</span>)   <span class="hljs-comment"># =&gt; 我跟你說，你不要跟別人說喔!</span><br></code></pre></td></tr></table></figure><p>不是說呼叫 private 方法的時候不能有明確的接收者嗎？執行 send 方法把 gossip 當做參數傳給它而已，並沒有明確的 receiver！</p><h2 id="來個實例結合兩者吧！"><a href="#來個實例結合兩者吧！" class="headerlink" title="來個實例結合兩者吧！"></a>來個實例結合兩者吧！</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby">obj = Object.new<br>obj.talk<br><br><span class="hljs-comment">#=&gt; undefined method &#x27;talk&#x27; for #&lt;Object:0x12345678&gt; (NoMethodError)</span><br></code></pre></td></tr></table></figure><p>沒有 <code>talk</code> 這個 method，所以我們可以透過 <code>respond_to?</code> 做檢查，就可以確認是否有這個 method 可以用，避免產生error…</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ruby">obj = Object.new<br><span class="hljs-keyword">if</span> obj.respond_to?(<span class="hljs-string">&quot;talk&quot;</span>)<br>   obj.talk<br><span class="hljs-keyword">else</span><br>   puts <span class="hljs-string">&quot;Sorry, object can&#x27;t talk!&quot;</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>再來換換 <code>send</code> 的方式（前提是要先知道有這個方法）</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ruby">obj.talk<br>obj.send(<span class="hljs-string">&quot;talk&quot;</span>)<br></code></pre></td></tr></table></figure><p>但優點在 process 執行時可以動態的呼叫不同 method，什麼意思？</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ruby">puts <span class="hljs-string">&quot;Search for: &quot;</span><br>request = gets.chomp<br> <br><span class="hljs-keyword">if</span> request == <span class="hljs-string">&quot;writer&quot;</span><br>  puts book.writer<br><span class="hljs-keyword">elsif</span> request == <span class="hljs-string">&quot;price&quot;</span><br>  puts book.price<br><span class="hljs-keyword">elsif</span> request == <span class="hljs-string">&quot;date&quot;</span><br>  puts book.date<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>這時候就可以改成：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ruby">puts <span class="hljs-string">&quot;Search for:&quot;</span><br>request = gets.chomp<br> <br><span class="hljs-keyword">if</span> book.respond_to?(request)<br>  puts book.send(request)<br><span class="hljs-keyword">else</span><br>  puts <span class="hljs-string">&quot;Input error&quot;</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><blockquote><p>所以我說再回到今天的問題…</p></blockquote><p>原本寫 code 的人的邏輯想透過 <code>respond_to?</code> 來給值，途中會去讀另一個檔案的預設值 <code>[]</code>，但卻犯了一個天大的錯誤大家也都沒有發現…</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment">#=&gt; xxx.rb</span><br>setting.value = respond_to?(<span class="hljs-string">&quot;default_<span class="hljs-subst">#&#123;key&#125;</span>&quot;</span>.to_sym)<br><br><span class="hljs-comment">#=&gt; zzz.rb</span><br>...<br>protected<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">default_device_license_transfer_black_list</span></span><br>  []<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>而攝影大哥為了處理點新東西，在程式碼中多了三元運算子的判斷</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">setting.value = respond_to?(<span class="hljs-string">&quot;default_<span class="hljs-subst">#&#123;key&#125;</span>&quot;</span>.to_sym) ? send(<span class="hljs-string">&quot;default_<span class="hljs-subst">#&#123;key&#125;</span>&quot;</span>) : <span class="hljs-literal">nil</span><br></code></pre></td></tr></table></figure><p>於是就… 還記得前面的定義中埋點梗嘛？</p><blockquote><p><code>Private and protected methods are included in the search only if the optional second parameter evaluates to true.</code></p></blockquote><p>到底為什麼要把這種一點不 <code>protected</code> 的預設值設成 <code>protected</code> 呢？我想這又是另一個故事惹XD</p><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="https://ruby-doc.org/core-2.7.0/Object.html#method-i-send">ruby doc #send</a></li><li><a href="https://ruby-doc.org/core-2.7.0/Object.html#method-i-respond_to-3F">ruby doc #respond_to?</a></li><li><a href="https://railsbook.tw/chapters/08-ruby-basic-4.html">類別（Class）與模組（Module）</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Ruby</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Ruby</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML5 筆記 - 打字 + 閃爍游標</title>
    <link href="/2020/03/09/zyx0309/"/>
    <url>/2020/03/09/zyx0309/</url>
    
    <content type="html"><![CDATA[<h1 id="打字-閃爍游標"><a href="#打字-閃爍游標" class="headerlink" title="打字 + 閃爍游標"></a>打字 + 閃爍游標</h1><p>首先，要實現這個方法需要透過 animation 來呈現，而動畫的部分也滿容易就能達成。直接以童年的回憶標題來呈現給大家看（腦中的音樂…</p><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;typing&quot;</span>&gt;</span>我在冒險的起點等你！<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>打字動畫的原理其實是透過將整個 <code>.typing</code> 的寬度依照 <code>字體</code> 的寬度來變動，所以原本的字體假設是 <code>10em</code>，那 animation 中的 <code>steps(10)</code> 這邊也就需要是相同的寬度，此時在透過 <code>overflow: hidden</code> 屬性將多餘的字體隱藏起來就可以呈現類似打字的動畫感覺。</p><p>閃爍游標的呈現方式，其實是透過 <code>border-right</code> / <code>box-shadow</code> 來達成，<code>animation</code> 中開始、結束都是透明 <code>transparent</code> 的，但在中間 <code>50%</code> 給他有 <code>x軸</code> 陰影，就能達成類似閃爍游標的效果。</p><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.typing</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">10em</span>;<br>  <span class="hljs-attribute">white-space</span>: nowrap;<br>  <span class="hljs-attribute">overflow</span>: hidden;<br>  <span class="hljs-attribute">border-right</span>: <span class="hljs-number">2px</span> solid transparent;<br>  <span class="hljs-attribute">animation</span>: typing <span class="hljs-number">3.5s</span> <span class="hljs-built_in">steps</span>(<span class="hljs-number">10</span>, end), blinkCursor <span class="hljs-number">0.75s</span> step-end infinite;<br>&#125;<br><br><span class="hljs-comment">/* 打字動畫 */</span><br><span class="hljs-keyword">@keyframes</span> typing &#123;<br>  <span class="hljs-selector-tag">from</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;<br>  &#125;<br>  <span class="hljs-selector-tag">to</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">10em</span>;<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">/* 閃爍游標 */</span><br><span class="hljs-keyword">@keyframes</span> blinkCursor &#123;<br>  <span class="hljs-selector-tag">from</span>&#123;<br>    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">2px</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> transparent;<br>  &#125;<br>  <span class="hljs-number">50%</span> &#123;<br>    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">2px</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<br>  &#125;<br>  <span class="hljs-selector-tag">to</span>&#123;<br>    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">2px</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> transparent;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>也可以來我的 codepen 直接看範例：<a href="https://codepen.io/BeastRush/pen/VwLroyG">https://codepen.io/BeastRush/pen/VwLroyG</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>HTML5</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML5</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>J 筆記 - Date 時間的運算</title>
    <link href="/2020/03/03/zyx0303/"/>
    <url>/2020/03/03/zyx0303/</url>
    
    <content type="html"><![CDATA[<h1 id="J-筆記-Date-時間的運算"><a href="#J-筆記-Date-時間的運算" class="headerlink" title="J 筆記 - Date 時間的運算"></a>J 筆記 - Date 時間的運算</h1><p>早上一進公司除了看到要來面試的下一屆學弟，還有機器服務又壞掉之外，被強大的好朋友問了一個考驗我的問題～剛好要用到 JS 計算時間，所以有了這篇的誕生…</p><h2 id="先來看一下-MDN-的解釋"><a href="#先來看一下-MDN-的解釋" class="headerlink" title="先來看一下 MDN 的解釋"></a>先來看一下 MDN 的解釋</h2><blockquote><p>JavaScript Date objects represent a single moment in time in a platform-independent format. Date objects contain a Number that represents milliseconds since 1 January 1970 UTC.</p></blockquote><p>語法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();<br><span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(value);<br><span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(dateString);<br><span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(year, month[, day[, hour[, minutes[, seconds[, milliseconds]]]]]);<br></code></pre></td></tr></table></figure><p>好了，我想你大概懂的（誤</p><h3 id="Date-物件-多個參數指定年、月、日、時、分、秒、毫秒"><a href="#Date-物件-多個參數指定年、月、日、時、分、秒、毫秒" class="headerlink" title="Date 物件 - 多個參數指定年、月、日、時、分、秒、毫秒"></a>Date 物件 - 多個參數指定年、月、日、時、分、秒、毫秒</h3><p>用法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> birthday = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-number">1996</span>, <span class="hljs-number">01</span>, <span class="hljs-number">15</span>);<br><span class="hljs-comment">// 1996-02-14T16:00:00.000Z</span><br></code></pre></td></tr></table></figure><p>有沒有發現一件事情，明明指定的時間是 (1996, 01, 15) 但是最後印出來的時間卻跑出了我的生日（欸？</p><p>其實 JS 不管怎麼輸入，都會是這樣子的（大誤）</p><blockquote><p>JavaScript 表達月份 (month) 是從 0 到 11，0 是一月；11 是十二月。且Date 物件參數的日期，預設的時區 (time zone) 是本地時區 (local time)，也就是你瀏覽器作業系統設定的時區。</p></blockquote><h3 id="日期時間比較-Compare-Dates"><a href="#日期時間比較-Compare-Dates" class="headerlink" title="日期時間比較 (Compare Dates)"></a>日期時間比較 (Compare Dates)</h3><p>可以用 <code>&gt;</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;=</code>, <code>&lt;==</code> 或 <code>&gt;==</code> 運算子來比較兩個 Date 物件的時間前後關係：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> today = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();<br><span class="hljs-keyword">var</span> someday = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-number">2022</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>);<br><br><span class="hljs-keyword">if</span> (someday &gt; today) &#123;<br>  alert(<span class="hljs-string">&#x27;Today is before 2022/3/3.&#x27;</span>);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>  alert(<span class="hljs-string">&#x27;Today is after 2022/3/3.&#x27;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>但如果你要比較兩個日期是否相等 - 運算子 <code>==</code>, <code>!=</code>, <code>===</code> 或 <code>!==</code>，你沒辦法直接比較，而是要先將 Date 物件用 <code>date.getTime()</code> 轉換為數值型態才能比較：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> d1 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-number">2020</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>);<br><span class="hljs-keyword">var</span> d2 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-number">2020</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>);<br><br><span class="hljs-keyword">var</span> same = d1.getTime() === d2.getTime();    <span class="hljs-comment">// true</span><br><span class="hljs-keyword">var</span> notSame = d1.getTime() !== d2.getTime(); <span class="hljs-comment">// true</span><br></code></pre></td></tr></table></figure><p>大概簡述是這樣子，如果真正要用到什麼其他的方法，說實在的還是去查文件是比較快的選擇，所以我的同學到底問了我什麼呢？</p><h3 id="JavaScript：將指定日期加上-X-天"><a href="#JavaScript：將指定日期加上-X-天" class="headerlink" title="JavaScript：將指定日期加上 X 天"></a>JavaScript：將指定日期加上 X 天</h3><p>首先，需要先新增一個時間並指定變數</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> dateTime = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();<br></code></pre></td></tr></table></figure><p>加天數</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">dateTime = dateTime.setDate(dateTime.getDate()+<span class="hljs-number">1</span>);<br>dateTime = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(dateTime);<br></code></pre></td></tr></table></figure><p>有人可能會想到用 <code>getDate()</code> 這樣子抓天數後 或許會超過 31 或者是 小於等於 0，不過因為前面有 <code>setDate()</code> 所以會幫你轉換：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&gt; <span class="hljs-keyword">var</span> dateTime = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();<br><span class="hljs-literal">undefined</span><br>&gt; dateTime = dateTime.setDate(dateTime.getDate()+<span class="hljs-number">1</span>);<br><span class="hljs-number">1583292207881</span><br>&gt; dateTime = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(dateTime);<br><span class="hljs-number">2020</span>-<span class="hljs-number">03</span>-04T03:<span class="hljs-number">23</span>:<span class="hljs-number">27.</span>881Z<br><br>&gt; dateTime = dateTime.setDate(dateTime.getDate()-<span class="hljs-number">4</span>);<br><span class="hljs-number">1582946607881</span><br>&gt; dateTime = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(dateTime);<br><span class="hljs-number">2020</span>-<span class="hljs-number">02</span>-29T03:<span class="hljs-number">23</span>:<span class="hljs-number">27.</span>881Z<br></code></pre></td></tr></table></figure><p>後來看到桑莫大神寫的</p><p>由於「this」即是指定的時間物件，因此就使用 this 取得「日」再加 -3 天，最後將這個更新後的日期設定給這個時間物件即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">Date</span>.prototype.addDays = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">days</span>) </span>&#123;<br>  <span class="hljs-built_in">this</span>.setDate(<span class="hljs-built_in">this</span>.getDate() + days);<br>  <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>加減天數</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> today = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();<br><br>today <span class="hljs-comment">// 2020-03-03T03:38:34.674Z</span><br>today.addDays(-<span class="hljs-number">3</span>) <span class="hljs-comment">// 2020-02-29T03:38:34.674Z</span><br></code></pre></td></tr></table></figure><h3 id="日期的轉換"><a href="#日期的轉換" class="headerlink" title="日期的轉換"></a>日期的轉換</h3><ul><li><p>Date.prototype.toLocaleString() - 日期與時間</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&gt; today.toLocaleString()<br><span class="hljs-string">&#x27;2020-3-3 11:38:34&#x27;</span><br></code></pre></td></tr></table></figure></li><li><p>Date.prototype.toLocaleDateString() - 日期</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&gt; today.toLocaleDateString()  <br><span class="hljs-string">&#x27;2020-3-3&#x27;</span><br></code></pre></td></tr></table></figure></li><li><p>Date.prototype.toLocaleTimeString() - 時間</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&gt; today.toLocaleTimeString()<br><span class="hljs-string">&#x27;11:38:34&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="取得其他國家的日期-amp-時間"><a href="#取得其他國家的日期-amp-時間" class="headerlink" title="取得其他國家的日期 &amp; 時間"></a>取得其他國家的日期 &amp; 時間</h3></li></ul><blockquote><p>dateObj.toLocaleString([locales[, options]])</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&gt; today.toLocaleString(<span class="hljs-string">&#x27;zh-TW&#x27;</span>); <span class="hljs-comment">//台灣</span><br><span class="hljs-string">&#x27;2020-3-3 11:38:34&#x27;</span><br>&gt; today.toLocaleString(<span class="hljs-string">&#x27;en-GB&#x27;</span>); <span class="hljs-comment">//英國</span><br><span class="hljs-string">&#x27;3/3/2020, 11:38:34 AM&#x27;</span><br>&gt; today.toLocaleString(<span class="hljs-string">&#x27;ko-KR&#x27;</span>); <span class="hljs-comment">//韓國</span><br><span class="hljs-string">&#x27;2020-3-3 11:38:34&#x27;</span><br>&gt; today.toLocaleString(<span class="hljs-string">&#x27;en-AU&#x27;</span>); <span class="hljs-comment">//澳洲</span><br><span class="hljs-string">&#x27;3/3/2020, 11:38:34 AM&#x27;</span><br></code></pre></td></tr></table></figure><p>options 就查一查惹ouo</p><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Date">[MDN] Date</a></li><li><a href="https://www.fooish.com/javascript/date/parse.html">JavaScript Date parse()</a></li><li><a href="https://cythilya.github.io/2017/05/17/javascript-date-add-days/">Summer。桑莫。夏天</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CodeWar Weekly - 0224~0301</title>
    <link href="/2020/02/26/zyx0226/"/>
    <url>/2020/02/26/zyx0226/</url>
    
    <content type="html"><![CDATA[<h1 id="CodeWar-Weekly-0224-0301"><a href="#CodeWar-Weekly-0224-0301" class="headerlink" title="CodeWar Weekly[0224-0301]"></a>CodeWar Weekly[0224-0301]</h1><h2 id="6kyu-Bit-Counting"><a href="#6kyu-Bit-Counting" class="headerlink" title="6kyu Bit Counting"></a>6kyu Bit Counting</h2><p>Write a function that takes an integer as input, and returns the number of bits that are equal to one in the binary representation of that number. You can guarantee that input is non-negative.</p><p>Example: The binary representation of 1234 is 10011010010, so the function should return 5 in this case</p><blockquote><p>解題思考：先需要思考如何轉 2 進位，會用到 <code>to_s(2)</code>，再來就有幾種方式跟其方法了<br>ex: count、chars、map、reduce、inject …</p></blockquote><h3 id="參考方法-amp-學習筆記"><a href="#參考方法-amp-學習筆記" class="headerlink" title="參考方法 &amp; 學習筆記"></a>參考方法 &amp; 學習筆記</h3><h4 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h4><h2 id="count"><a href="#count" class="headerlink" title="count"></a>count</h2><p>難得基本上都沒有查的一次～<br>不過後來才想到才有 <code>count</code>，所以還是記錄一下好惹…（雖然沒什麼好紀錄的</p><blockquote><p>Returns the number of elements. If an argument is given, counts the number of elements which equals to obj. If a block is given, counts the number of elements yielding a true value.</p></blockquote><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby">ary = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span>]<br>ary.count                    <span class="hljs-comment">#=&gt; 4</span><br>ary.count(<span class="hljs-number">2</span>)                 <span class="hljs-comment">#=&gt; 2</span><br>ary.count&#123; <span class="hljs-params">|x|</span> x % <span class="hljs-number">2</span> == <span class="hljs-number">0</span> &#125;  <span class="hljs-comment">#=&gt; 3</span><br></code></pre></td></tr></table></figure><h4 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h4><h2 id="Object-prototype-toString"><a href="#Object-prototype-toString" class="headerlink" title="Object.prototype.toString()"></a>Object.prototype.toString()</h2><blockquote><p>The toString() method returns a string representing the object.</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Dog</span>(<span class="hljs-params">name</span>) </span>&#123;<br>  <span class="hljs-built_in">this</span>.name = name;<br>&#125;<br><br><span class="hljs-keyword">const</span> dog1 = <span class="hljs-keyword">new</span> Dog(<span class="hljs-string">&#x27;Gabby&#x27;</span>);<br><br>Dog.prototype.toString = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dogToString</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span> + <span class="hljs-built_in">this</span>.name;<br>&#125;<br><br><span class="hljs-built_in">console</span>.log(dog1.toString());<br><span class="hljs-comment">// expected output: &quot;Gabby&quot;</span><br></code></pre></td></tr></table></figure><blockquote><p>(下方是雷～～～！！！)</p></blockquote><hr><h2 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h2><p>Solution(1):</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">count_bits</span><span class="hljs-params">(n)</span></span><br>  n.to_s(<span class="hljs-number">2</span>).chars.map&#123; <span class="hljs-params">|x|</span> x.to_i &#125;.reduce&#123; <span class="hljs-params">|sum, x|</span> x += sum &#125;<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>Solution(2):</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">count_bits</span><span class="hljs-params">(n)</span></span><br>  n.to_s(<span class="hljs-number">2</span>).chars.map(&amp;<span class="hljs-symbol">:to_i</span>).inject(&amp;<span class="hljs-symbol">:+</span>)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>Solution(3):</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">count_bits</span><span class="hljs-params">(n)</span></span><br>  n.to_s(<span class="hljs-number">2</span>).count(<span class="hljs-string">&#x27;1&#x27;</span>)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h2 id="JavaScript-1"><a href="#JavaScript-1" class="headerlink" title="JavaScript"></a>JavaScript</h2><p>Solution(1):</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">return</span> n.toString(<span class="hljs-number">2</span>).split(<span class="hljs-string">&#x27;0&#x27;</span>).join(<span class="hljs-string">&#x27;&#x27;</span>).length;<br></code></pre></td></tr></table></figure><p>Solution(2):</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">return</span> n.toString(<span class="hljs-number">2</span>).replace(<span class="hljs-regexp">/0/g</span>,<span class="hljs-string">&#x27;&#x27;</span>).length;<br></code></pre></td></tr></table></figure><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p>查惹一下正規表示法qq</p>]]></content>
    
    
    <categories>
      
      <category>CodeWar</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>Ruby</tag>
      
      <tag>CodeWar</tag>
      
      <tag>6kyu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CodeWar Weekly - 0217~0223</title>
    <link href="/2020/02/21/zyx0221/"/>
    <url>/2020/02/21/zyx0221/</url>
    
    <content type="html"><![CDATA[<h1 id="CodeWar-Weekly-0217-0223"><a href="#CodeWar-Weekly-0217-0223" class="headerlink" title="CodeWar Weekly[0217-0223]"></a>CodeWar Weekly[0217-0223]</h1><h2 id="6kyu-Highest-Scoring-Word"><a href="#6kyu-Highest-Scoring-Word" class="headerlink" title="6kyu Highest Scoring Word"></a>6kyu Highest Scoring Word</h2><p>Given a string of words, you need to find the highest scoring word.</p><p>Each letter of a word scores points according to its position in the alphabet: a = 1, b = 2, c = 3 etc.</p><p>You need to return the highest scoring word as a string.</p><p>If two words score the same, return the word that appears earliest in the original string.</p><p>All letters will be lowercase and all inputs will be valid.</p><blockquote><p>解題思考：取字母轉成數字會是最大值的詞，取 = <code>max_by</code>，後面的條件就要依照先轉數字 <code>ord</code>，然後在計算… ex: <code>sum</code>, <code>reduce</code>, <code>inject</code> …</p></blockquote><h3 id="參考方法-amp-學習筆記"><a href="#參考方法-amp-學習筆記" class="headerlink" title="參考方法 &amp; 學習筆記"></a>參考方法 &amp; 學習筆記</h3><h4 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h4><h2 id="max-by"><a href="#max-by" class="headerlink" title="max_by"></a>max_by</h2><blockquote><p>max_by {|obj| block } → obj || max_by → an_enumerator<br>Returns the object in enum that gives the maximum value from the given block.<br>If no block is given, an enumerator is returned instead.</p></blockquote><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ruby">a = <span class="hljs-string">%w(albatross dog horse)</span><br>a.max_by &#123;<span class="hljs-params">|x|</span> x.length &#125;   <span class="hljs-comment">#=&gt; &quot;albatross&quot;</span><br></code></pre></td></tr></table></figure><p>跟 <code>max</code> 的不同在，能不能在設定條件而已，原本的 <code>max</code> 只會取開頭字母最大的 <code>ord</code></p><h4 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h4><h2 id="charCodeAt"><a href="#charCodeAt" class="headerlink" title="charCodeAt()"></a>charCodeAt()</h2><blockquote><p>The charCodeAt() method returns an integer between 0 and 65535 representing the UTF-16 code unit at the given index.</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">const</span> sentence = <span class="hljs-string">&#x27;The quick brown fox jumps over the lazy dog.&#x27;</span>;<br><br><span class="hljs-keyword">const</span> index = <span class="hljs-number">4</span>;<br><br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;The character code &#x27;</span> + sentence.charCodeAt(index) + <span class="hljs-string">&#x27; is equal to &#x27;</span> + sentence.charAt(index));<br><span class="hljs-comment">// expected output: &quot;The character code 113 is equal to q&quot;</span><br></code></pre></td></tr></table></figure><h2 id="ord"><a href="#ord" class="headerlink" title="ord"></a>ord</h2><blockquote><p>ord → self<br>Returns the int itself.</p></blockquote><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-string">?a</span>.ord    <span class="hljs-comment">#=&gt; 97</span><br></code></pre></td></tr></table></figure><hr><h2 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h2><p>Solution(1):</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">high</span><span class="hljs-params">(x)</span></span><br>  x.split.max_by&#123; <span class="hljs-params">|i|</span> i.chars.map&#123; <span class="hljs-params">| j |</span> j.ord - <span class="hljs-number">96</span> &#125;.sum &#125;<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>Solution(2):</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">high</span><span class="hljs-params">(x)</span></span><br>  x.split.max_by &#123; <span class="hljs-params">|w|</span> score_word(w) &#125;<br><span class="hljs-keyword">end</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">score_word</span><span class="hljs-params">(word)</span></span><br>  word.chars.inject(<span class="hljs-number">0</span>) &#123; <span class="hljs-params">|sum, ch|</span> sum + (ch.ord - <span class="hljs-number">96</span>) &#125;<br><span class="hljs-keyword">end</span> <br></code></pre></td></tr></table></figure><h2 id="JavaScript-1"><a href="#JavaScript-1" class="headerlink" title="JavaScript"></a>JavaScript</h2><p>Solution(1):</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">high</span>(<span class="hljs-params">x</span>)</span>&#123;<br>  <span class="hljs-keyword">return</span> x.split(<span class="hljs-string">&#x27; &#x27;</span>).reduce(<span class="hljs-function">(<span class="hljs-params">accum, current</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> score(current) &gt; score(accum) ? current:accum;  <br>  &#125;)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">score</span>(<span class="hljs-params">word</span>)</span>&#123;<br>  <span class="hljs-keyword">return</span> word.split(<span class="hljs-string">&#x27;&#x27;</span>).reduce(<span class="hljs-function">(<span class="hljs-params">accum,current</span>) =&gt;</span> &#123; <span class="hljs-keyword">return</span> accum+(current.charCodeAt()-<span class="hljs-number">96</span>) &#125;, <span class="hljs-number">0</span>)<br>&#125;<br></code></pre></td></tr></table></figure><p>Solution(2):</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">high</span>(<span class="hljs-params">s</span>)</span>&#123;<br>  <span class="hljs-keyword">let</span> <span class="hljs-keyword">as</span> = s.split(<span class="hljs-string">&#x27; &#x27;</span>).map(<span class="hljs-function"><span class="hljs-params">s</span>=&gt;</span>[...s].reduce(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a+b.charCodeAt(<span class="hljs-number">0</span>)-<span class="hljs-number">96</span>,<span class="hljs-number">0</span>));<br>  <span class="hljs-keyword">return</span> s.split(<span class="hljs-string">&#x27; &#x27;</span>)[<span class="hljs-keyword">as</span>.indexOf(<span class="hljs-built_in">Math</span>.max(...as))];<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="http://ruby-doc.org/core-1.9.3/Integer.html#method-i-ord">ord</a></li><li><a href="http://ruby-doc.org/core-1.9.3/Enumerable.html#method-i-max_by">max_by</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>CodeWar</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>Ruby</tag>
      
      <tag>CodeWar</tag>
      
      <tag>6kyu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R 筆記 - empty? blank? present?</title>
    <link href="/2020/02/20/zyx0220/"/>
    <url>/2020/02/20/zyx0220/</url>
    
    <content type="html"><![CDATA[<h1 id="R-筆記-nil-empty-blank-present"><a href="#R-筆記-nil-empty-blank-present" class="headerlink" title="R 筆記 - nil? empty? blank? present?"></a>R 筆記 - nil? empty? blank? present?</h1><p>今天原本在 render 一個 dialog 的邏輯判斷想到用 nil 或者是 [] 來判斷，但寫到一半攝影大哥就寫完了，結果 review 的時候看到寫 <code>present?</code> 方法，所以又有這篇的由來…（其實就是一堆很像的方法，寫完讓自己記住而已qq</p><blockquote><p>然後又默默地在辦公室聽到攝影大哥跟組員說：你為什麼這邊不寫 <code>try</code> ?? 就讓我又想到上一篇（好加在我是這樣寫…</p></blockquote><h2 id="nil"><a href="#nil" class="headerlink" title="nil?"></a>nil?</h2><p>判斷：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ruby">[].<span class="hljs-literal">nil</span>?        <span class="hljs-comment">#=&gt; #false</span><br>&#123;&#125;.<span class="hljs-literal">nil</span>?        <span class="hljs-comment">#=&gt; #false</span><br><span class="hljs-string">&quot;&quot;</span>.<span class="hljs-literal">nil</span>?        <span class="hljs-comment">#=&gt; #false</span><br><span class="hljs-string">&quot; &quot;</span>.<span class="hljs-literal">nil</span>?       <span class="hljs-comment">#=&gt; #false</span><br><span class="hljs-string">&quot;abc&quot;</span>.<span class="hljs-literal">nil</span>?     <span class="hljs-comment">#=&gt; #false</span><br><span class="hljs-number">123</span>.<span class="hljs-literal">nil</span>?       <span class="hljs-comment">#=&gt; #false</span><br></code></pre></td></tr></table></figure><p>轉換：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-literal">nil</span>.<span class="hljs-literal">nil</span>?       <span class="hljs-comment">#=&gt; true</span><br><span class="hljs-literal">nil</span>.to_a?      <span class="hljs-comment">#=&gt; []</span><br><span class="hljs-literal">nil</span>.to_c?      <span class="hljs-comment">#=&gt; (0+0i)</span><br><span class="hljs-literal">nil</span>.to_f?      <span class="hljs-comment">#=&gt; 0.0</span><br><span class="hljs-literal">nil</span>.to_i       <span class="hljs-comment">#=&gt; 0</span><br><span class="hljs-literal">nil</span>.to_s       <span class="hljs-comment">#=&gt; &quot;&quot;</span><br></code></pre></td></tr></table></figure><h2 id="empty"><a href="#empty" class="headerlink" title="empty?"></a>empty?</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-literal">nil</span>.empty?     <span class="hljs-comment">#=&gt; NoMethodError: undefined method `empty?&#x27; for nil:NilClass</span><br>[].empty?      <span class="hljs-comment">#=&gt; true</span><br>&#123;&#125;.empty?      <span class="hljs-comment">#=&gt; true</span><br><span class="hljs-string">&quot;&quot;</span>.empty?      <span class="hljs-comment">#=&gt; true</span><br><span class="hljs-string">&quot; &quot;</span>.empty?     <span class="hljs-comment">#=&gt; false</span><br><span class="hljs-string">&quot;abc&quot;</span>.empty?   <span class="hljs-comment">#=&gt; false</span><br><span class="hljs-number">123</span>.empty?     <span class="hljs-comment">#=&gt; NoMethodError: undefined method `empty?&#x27; for 123:Fixnum</span><br></code></pre></td></tr></table></figure><p>以下方法只有 Rails 有！！！</p><h2 id="blank"><a href="#blank" class="headerlink" title="blank?"></a>blank?</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-literal">nil</span>.blank?     <span class="hljs-comment">#=&gt; true</span><br>[].blank?      <span class="hljs-comment">#=&gt; true</span><br>&#123;&#125;.blank?      <span class="hljs-comment">#=&gt; true</span><br><span class="hljs-string">&quot;&quot;</span>.blank?      <span class="hljs-comment">#=&gt; true</span><br><span class="hljs-string">&quot; &quot;</span>.blank?     <span class="hljs-comment">#=&gt; true</span><br><span class="hljs-string">&quot;abc&quot;</span>.blank?   <span class="hljs-comment">#=&gt; false</span><br><span class="hljs-number">123</span>.blank?     <span class="hljs-comment">#=&gt; false</span><br></code></pre></td></tr></table></figure><h2 id="present"><a href="#present" class="headerlink" title="present?"></a>present?</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-literal">nil</span>.present?   <span class="hljs-comment">#=&gt; false</span><br>[].present?    <span class="hljs-comment">#=&gt; false</span><br>&#123;&#125;.present?    <span class="hljs-comment">#=&gt; false</span><br><span class="hljs-string">&quot;&quot;</span>.present?    <span class="hljs-comment">#=&gt; false</span><br><span class="hljs-string">&quot; &quot;</span>.present?   <span class="hljs-comment">#=&gt; false</span><br><span class="hljs-string">&quot;abc&quot;</span>.present? <span class="hljs-comment">#=&gt; true</span><br><span class="hljs-number">123</span>.present?   <span class="hljs-comment">#=&gt; true</span><br></code></pre></td></tr></table></figure><blockquote><p>可以注意到都有些些微差距～又可以發現只有 <code>blank?</code> / <code>present?</code> 不會噴錯（難怪常用XDD</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Rails</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Rails</tag>
      
      <tag>Ruby</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CodeWar Weekly - 0210~0216</title>
    <link href="/2020/02/13/zyx0213/"/>
    <url>/2020/02/13/zyx0213/</url>
    
    <content type="html"><![CDATA[<h1 id="CodeWar-Weekly-0210-0216"><a href="#CodeWar-Weekly-0210-0216" class="headerlink" title="CodeWar Weekly - 0210~0216"></a>CodeWar Weekly - 0210~0216</h1><h2 id="6kyu-Unique-In-Order"><a href="#6kyu-Unique-In-Order" class="headerlink" title="6kyu Unique In Order"></a>6kyu Unique In Order</h2><p>Implement the function <code>unique_in_order</code> which takes as argument a sequence and returns a list of items without any elements with the same value next to each other and preserving the original order of elements.</p><p>For example:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby">unique_in_order(<span class="hljs-string">&#x27;AAAABBBCCDAABBB&#x27;</span>) == [<span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>, <span class="hljs-string">&#x27;D&#x27;</span>, <span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>]<br>unique_in_order(<span class="hljs-string">&#x27;ABBCcAD&#x27;</span>)         == [<span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;D&#x27;</span>]<br>unique_in_order([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>])       == [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]<br></code></pre></td></tr></table></figure><blockquote><p>解題思考：輸入值 <code>iterable</code> 可能是「字串」或「陣列」，三元運算式，輸出結果可知不能用 <code>uniq</code> 來解</p></blockquote><h3 id="參考方法-amp-學習筆記"><a href="#參考方法-amp-學習筆記" class="headerlink" title="參考方法 &amp; 學習筆記"></a>參考方法 &amp; 學習筆記</h3><h4 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h4><h2 id="chunk"><a href="#chunk" class="headerlink" title="chunk"></a>chunk</h2><blockquote><p>enum.chunk {|elt| key }.each {|key, ary| … }<br>enum.chunk(initial_state) {|elt, state| key }.each {|key, ary| … }</p></blockquote><p>For example, consecutive even numbers and odd numbers can be splitted as follows.</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ruby">[<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">1</span>,<span class="hljs-number">5</span>,<span class="hljs-number">9</span>,<span class="hljs-number">2</span>,<span class="hljs-number">6</span>,<span class="hljs-number">5</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>].chunk &#123;<span class="hljs-params">|n|</span><br>  n.even?<br>&#125;.each &#123;<span class="hljs-params">|even, ary|</span><br>  p [even, ary]<br>&#125;<br><br><span class="hljs-comment">#=&gt; [false, [3, 1]]</span><br><span class="hljs-comment">#   [true, [4]]</span><br><span class="hljs-comment">#   [false, [1, 5, 9]]</span><br><span class="hljs-comment">#   [true, [2, 6]]</span><br><span class="hljs-comment">#   [false, [5, 3, 5]]</span><br></code></pre></td></tr></table></figure><h4 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h4><h2 id="Array-prototype-push"><a href="#Array-prototype-push" class="headerlink" title="Array.prototype.push()"></a>Array.prototype.push()</h2><blockquote><p>The push() method adds one or more elements to the end of an array and returns the new length of the array.</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">const</span> animals = [<span class="hljs-string">&#x27;pigs&#x27;</span>, <span class="hljs-string">&#x27;goats&#x27;</span>, <span class="hljs-string">&#x27;sheep&#x27;</span>];<br><br><span class="hljs-keyword">const</span> count = animals.push(<span class="hljs-string">&#x27;cows&#x27;</span>);<br><span class="hljs-built_in">console</span>.log(count);<br><span class="hljs-comment">// expected output: 4</span><br><span class="hljs-built_in">console</span>.log(animals);<br><span class="hljs-comment">// expected output: Array [&quot;pigs&quot;, &quot;goats&quot;, &quot;sheep&quot;, &quot;cows&quot;]</span><br><br>animals.push(<span class="hljs-string">&#x27;chickens&#x27;</span>, <span class="hljs-string">&#x27;cats&#x27;</span>, <span class="hljs-string">&#x27;dogs&#x27;</span>);<br></code></pre></td></tr></table></figure><h2 id="Array-prototype-filter"><a href="#Array-prototype-filter" class="headerlink" title="Array.prototype.filter()"></a>Array.prototype.filter()</h2><blockquote><p>The filter() method creates a new array with all elements that pass the test implemented by the provided function.</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">const</span> words = [<span class="hljs-string">&#x27;spray&#x27;</span>, <span class="hljs-string">&#x27;limit&#x27;</span>, <span class="hljs-string">&#x27;elite&#x27;</span>, <span class="hljs-string">&#x27;exuberant&#x27;</span>, <span class="hljs-string">&#x27;destruction&#x27;</span>, <span class="hljs-string">&#x27;present&#x27;</span>];<br><br><span class="hljs-keyword">const</span> result = words.filter(<span class="hljs-function"><span class="hljs-params">word</span> =&gt;</span> word.length &gt; <span class="hljs-number">6</span>);<br><br><span class="hljs-built_in">console</span>.log(result);<br><span class="hljs-comment">// expected output: Array [&quot;exuberant&quot;, &quot;destruction&quot;, &quot;present&quot;]</span><br></code></pre></td></tr></table></figure><h2 id="Spread-syntax-…x-ES6"><a href="#Spread-syntax-…x-ES6" class="headerlink" title="Spread syntax […x] ES6"></a>Spread syntax […x] ES6</h2><blockquote><p>Spread syntax allows an iterable such as an array expression or string to be expanded in places where zero or more arguments (for function calls) or elements (for array literals) are expected, or an object expression to be expanded in places where zero or more key-value pairs (for object literals) are expected.</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sum</span>(<span class="hljs-params">x, y, z</span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> x + y + z;<br>&#125;<br><br><span class="hljs-keyword">const</span> numbers = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>];<br><br><span class="hljs-built_in">console</span>.log(sum(...numbers));<br><span class="hljs-comment">// expected output: 6</span><br><br><span class="hljs-built_in">console</span>.log(sum.apply(<span class="hljs-literal">null</span>, numbers));<br><span class="hljs-comment">// expected output: 6</span><br><br></code></pre></td></tr></table></figure><blockquote><p>(下方是我寫的一些解題方法，有雷請小心服用ｏｕｏ～～)</p></blockquote><hr><h2 id="Ruby-1"><a href="#Ruby-1" class="headerlink" title="Ruby"></a>Ruby</h2><p>Solution(1):</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">unique_in_order</span><span class="hljs-params">(iterable)</span></span><br>  iterable.is_a?(String) ? iterable.split(<span class="hljs-string">&#x27;&#x27;</span>).chunk&#123; <span class="hljs-params">|x|</span> x &#125;.map&#123; <span class="hljs-params">|x, ary|</span> x &#125;<br>                         : iterable.chunk&#123; <span class="hljs-params">|x|</span> x &#125;.map&#123; <span class="hljs-params">|x, ary|</span> x &#125;<br><span class="hljs-keyword">end</span>  <br></code></pre></td></tr></table></figure><p>Solution(2):</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">unique_in_order</span><span class="hljs-params">(iterable)</span></span><br>  (iterable.is_a?(String) ? iterable.chars <br>                          : iterable )<br>                          .chunk &#123; <span class="hljs-params">|x|</span> x &#125;.map&#123; <span class="hljs-params">|x|</span> x &#125;<br><span class="hljs-keyword">end</span>  <br></code></pre></td></tr></table></figure><h2 id="JavaScript-1"><a href="#JavaScript-1" class="headerlink" title="JavaScript"></a>JavaScript</h2><p>Solution(1):</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">var</span> uniqueInOrder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">iterable</span>)</span>&#123;<br>  <span class="hljs-keyword">var</span> result = [];<br>  <span class="hljs-keyword">var</span> last = <span class="hljs-string">&#x27;&#x27;</span>;<br>  <br>  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; iterable.length; i++)&#123;<br>    <span class="hljs-keyword">if</span>(iterable[i] !== last)&#123;<br>      last = iterable[i]<br>      result.push(last);<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> result;<br>&#125;<br></code></pre></td></tr></table></figure><p>Solution(2):</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">var</span> uniqueInOrder=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">iterable</span>)</span>&#123;<br>  <span class="hljs-keyword">return</span> iterable.split(<span class="hljs-string">&#x27;&#x27;</span>).filter(<span class="hljs-function">(<span class="hljs-params">a, i</span>) =&gt;</span> a !== iterable[i-<span class="hljs-number">1</span>])<br>&#125;<br></code></pre></td></tr></table></figure><p>Solution(3):</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">var</span> uniqueInOrder=<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">iterable</span>)</span>&#123;<br>  <span class="hljs-keyword">return</span> [...iterable].filter(<span class="hljs-function">(<span class="hljs-params">a, i</span>) =&gt;</span> a !== iterable[i-<span class="hljs-number">1</span>])<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="https://apidock.com/ruby/Enumerable/chunk">chunk</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push">Array.prototype.push()</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter">Array.prototype.filter()</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax">Spread syntax</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>CodeWar</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>Ruby</tag>
      
      <tag>CodeWar</tag>
      
      <tag>6kyu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R 筆記 - try、try! 和 &amp;.</title>
    <link href="/2020/02/05/zyx0205/"/>
    <url>/2020/02/05/zyx0205/</url>
    
    <content type="html"><![CDATA[<h1 id="try、try-和-amp-（safe-navigation-operator）"><a href="#try、try-和-amp-（safe-navigation-operator）" class="headerlink" title="try、try! 和 &amp;.（safe navigation operator）"></a>try、try! 和 &amp;.（safe navigation operator）</h1><p>之前在做 Project 中因為沒有資料導致沒有該物件方法就噴錯，之後知道了 <code>&amp;.</code> 的用法，但也沒有特別理解（反正就只知道如果沒有這個方法會忽略不執行），但最近上班後又遇到一樣的問題，攝影大哥前輩秀了 <code>try</code> 方法，導致我很好奇所以特別查了一下它的用途，也就促使這篇文章的誕生。</p><blockquote><p>來點例子，讓大家能更了解這些方法的使用，希望之後在判斷 nil 值時，能有所幫助～</p></blockquote><p>在解釋之前，我們先從 Ruby 的 tap method 開始說起吧…</p><h2 id="tap"><a href="#tap" class="headerlink" title="tap"></a>tap</h2><p>其實在寫這篇之前，我也完全不知道這個方法，所以查了文件，來看看 Ruby API 文件的說明：</p><blockquote><p>Yields x to the block, and then returns x.</p></blockquote><p><code>tap</code> 是透過 yield 某個 <code>object物件</code> 進入 block，再傳回此 object。就如同以下（原始碼）：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># activesupport/lib/active_support/core_ext/object/misc.rb</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">tap</span></span><br>  <span class="hljs-keyword">yield</span> <span class="hljs-keyword">self</span><br>  <span class="hljs-keyword">self</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>代表著可以用於檢查 method chain，更便於 <code>除錯</code> 以及 <code>簡化程式碼</code>！（什麼意思呢？）</p><h3 id="用途一：除錯"><a href="#用途一：除錯" class="headerlink" title="用途一：除錯"></a>用途一：除錯</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs ruby">(<span class="hljs-number">1</span>..<span class="hljs-number">5</span>).tap &#123; <span class="hljs-params">|x|</span> puts <span class="hljs-string">&quot;original: <span class="hljs-subst">#&#123;x.inspect&#125;</span>&quot;</span> &#125;<br>  <span class="hljs-comment">#original: 1..5</span><br>  <span class="hljs-comment">#1..5</span><br>.to_a.tap&#123; <span class="hljs-params">|x|</span> puts <span class="hljs-string">&quot;array: <span class="hljs-subst">#&#123;x.inspect&#125;</span>&quot;</span> &#125;<br>  <span class="hljs-comment">#original: 1..5</span><br>  <span class="hljs-comment">#array: [1, 2, 3, 4, 5]</span><br>  <span class="hljs-comment">#[</span><br>  <span class="hljs-comment">#  [0] 1,</span><br>  <span class="hljs-comment">#  [1] 2,</span><br>  <span class="hljs-comment">#  [2] 3,</span><br>  <span class="hljs-comment">#  [3] 4,</span><br>  <span class="hljs-comment">#  [4] 5</span><br>  <span class="hljs-comment">#]</span><br>.select&#123; <span class="hljs-params">|x|</span> x%<span class="hljs-number">2</span> == <span class="hljs-number">0</span> &#125;.tap&#123; <span class="hljs-params">|x|</span> puts <span class="hljs-string">&quot;evens: <span class="hljs-subst">#&#123;x.inspect&#125;</span>&quot;</span> &#125;<br>  <span class="hljs-comment">#original: 1..5</span><br>  <span class="hljs-comment">#array: [1, 2, 3, 4, 5]</span><br>  <span class="hljs-comment">#evens: [2, 4]</span><br>  <span class="hljs-comment">#[</span><br>  <span class="hljs-comment">#   [0] 2,</span><br>  <span class="hljs-comment">#   [1] 4</span><br>  <span class="hljs-comment">#]</span><br>.map&#123; <span class="hljs-params">|x|</span> x*x &#125;.tap&#123; <span class="hljs-params">|x|</span> puts <span class="hljs-string">&quot;squares: <span class="hljs-subst">#&#123;x.inspect&#125;</span>&quot;</span> &#125;<br>  <span class="hljs-comment">#original: 1..5</span><br>  <span class="hljs-comment">#array: [1, 2, 3, 4, 5]</span><br>  <span class="hljs-comment">#evens: [2, 4]</span><br>  <span class="hljs-comment">#squares: [4, 16]</span><br>  <span class="hljs-comment">#[</span><br>  <span class="hljs-comment">#   [0] 4,</span><br>  <span class="hljs-comment">#   [1] 16</span><br>  <span class="hljs-comment">#]</span><br></code></pre></td></tr></table></figure><h3 id="用途二：簡化程式碼"><a href="#用途二：簡化程式碼" class="headerlink" title="用途二：簡化程式碼"></a>用途二：簡化程式碼</h3><p>不用先宣告變數～直接塞進去ouo</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ruby">[].tap&#123; <span class="hljs-params">|i|</span> i &lt;&lt; <span class="hljs-string">&quot;abc&quot;</span> &#125;<br><span class="hljs-string">&#x27;&#x27;</span>.tap&#123; <span class="hljs-params">|i|</span> i &lt;&lt; <span class="hljs-string">&quot;do_some_thing&quot;</span> &#125;<br></code></pre></td></tr></table></figure><blockquote><p>tap enables you to “tap into” a method chain and perform some tangential function.</p></blockquote><h2 id="amp-（safe-navigation-operator）"><a href="#amp-（safe-navigation-operator）" class="headerlink" title="&amp;.（safe navigation operator）"></a>&amp;.（safe navigation operator）</h2><p>safe navigation operator 使用起來跟等等底下要說的 <code>try!</code> 相似，唯一不同的點就是寫法簡潔更多。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ruby">REGEX = <span class="hljs-regexp">/(ruby) is (\w+)/i</span><br><span class="hljs-string">&quot;Ruby is awesome!&quot;</span>.match(REGEX).values_at(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>)<br><span class="hljs-comment"># =&gt; [&quot;Ruby&quot;, &quot;awesome&quot;]</span><br><span class="hljs-string">&quot;Python is fascinating!&quot;</span>.match(REGEX).values_at(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>)<br><span class="hljs-comment"># NoMethodError: undefined method `values_at&#x27; for nil:NilClass</span><br><span class="hljs-string">&quot;Python is fascinating!&quot;</span>.match(REGEX)&amp;.values_at(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>)<br><span class="hljs-comment"># =&gt; nil</span><br></code></pre></td></tr></table></figure><hr><blockquote><p>上述的方法是在 Ruby 內建的 method，而下方的 try 和 try! 是在 Rails 才有的 method！</p></blockquote><hr><h2 id="try-a-amp-b"><a href="#try-a-amp-b" class="headerlink" title="try(*a, &amp;b)"></a>try(*a, &amp;b)</h2><p>在使用方法 <code>try</code> 時，不用擔心前面的對象沒有後面這個方法導致噴錯（Nilclass）。就如同以下（原始碼）：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">try</span><span class="hljs-params">(*a, &amp;b)</span></span><br>  <span class="hljs-keyword">if</span> a.empty? &amp;&amp; block_given?<br>    <span class="hljs-keyword">yield</span> <span class="hljs-keyword">self</span><br>  <span class="hljs-keyword">else</span><br>    public_send(*a, &amp;b) <span class="hljs-keyword">if</span> respond_to?(a.first)<br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">try</span><span class="hljs-params">(*args)</span></span><br>  <span class="hljs-literal">nil</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>代表著如果只接受 block 則 yield slef 給 block，否則就執行 <code>public_send</code> ，而 <code>public_send</code> 只會 <code>call public_method</code>（什麼意思呢？）</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-variable">@person</span>.try(<span class="hljs-symbol">:spouse</span>).try(<span class="hljs-symbol">:name</span>)<br></code></pre></td></tr></table></figure><p>轉換後的意思其實是</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-variable">@person</span>.spouse.name <span class="hljs-keyword">if</span> <span class="hljs-variable">@person</span> &amp;&amp; <span class="hljs-variable">@person</span>.spouse<br></code></pre></td></tr></table></figure><p>這也如同開頭所說，不用擔心前面的對象沒有後面這個方法導致噴錯，因為它已經是個判斷了！</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-variable">@person</span>.try(<span class="hljs-symbol">:non_existing_method</span>) <span class="hljs-comment"># =&gt; nil</span><br></code></pre></td></tr></table></figure><p>轉換後的意思其實是</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-variable">@person</span>.non_existing_method <span class="hljs-keyword">if</span> <span class="hljs-variable">@person</span>.respond_to?(<span class="hljs-symbol">:non_existing_method</span>) <span class="hljs-comment"># =&gt; nil</span><br></code></pre></td></tr></table></figure><p>由此可知到，try 的用法就像是 Ruby 中的 <code>Object#send</code> 一樣，可以讓你把 method 當作 argument 傳入object。</p><p>但是跟 send 不同的是，當 receiving object（receiver）的該 method 不存在時，不會觸發 <code>NoMethodError</code>，而是回傳 nil 值。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby">user.try(<span class="hljs-symbol">:should_be_error</span>).try(<span class="hljs-symbol">:another_error</span>)<br><span class="hljs-comment">#=&gt; nil</span><br>user.send(<span class="hljs-symbol">:should_be_error</span>)<br><span class="hljs-comment">#=&gt; NoMethodError: undefined method `should_be_error&#x27; for #&lt;User:0x007fca78bf5848&gt;</span><br></code></pre></td></tr></table></figure><h2 id="try-a-amp-b-1"><a href="#try-a-amp-b-1" class="headerlink" title="try!(*a, &amp;b)"></a>try!(*a, &amp;b)</h2><p>用法跟 try 相同，唯一的區別是，當傳入的 argument（method）不存在時和 receiving object 不是 nil 時，會觸發 NoMethodError exception，而不是 nil；而當 receiving object 是 nil 值時，則會回傳 nil。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ruby">user = User.new<br>user.try(<span class="hljs-symbol">:should_be_error</span>).try(<span class="hljs-symbol">:another_error</span>)<br><span class="hljs-comment">#=&gt; nil</span><br>user.try!(<span class="hljs-symbol">:should_be_error</span>).try(<span class="hljs-symbol">:another_error</span>)<br><span class="hljs-comment">#=&gt; NoMethodError: undefined method `account&#x27; for #&lt;User:0x007fca7cf91340&gt;</span><br>user.try!(<span class="hljs-symbol">:should_be_error</span>).try!(<span class="hljs-symbol">:another_error</span>)<br><span class="hljs-comment">#=&gt; NoMethodError: undefined method `account&#x27; for #&lt;User:0x007fca7cf91340&gt;</span><br>user.try(<span class="hljs-symbol">:should_be_error</span>).try!(<span class="hljs-symbol">:another_error</span>)<br><span class="hljs-comment">#=&gt; nil</span><br></code></pre></td></tr></table></figure><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul><li><a href="https://apidock.com/ruby/Object/tap">API dock tap</a></li><li><a href="https://ruby-china.org/topics/5348">分享 Rails 技巧之 tap &amp; try</a></li><li><a href="https://devdocs.io/rails~5.1/object#method-i-try">devdocs object#try</a></li><li><a href="https://devdocs.io/rails~5.1/object#method-i-try">Object#try</a></li><li><a href="https://devdocs.io/rails~5.1/object#method-i-try-21">Object#try!</a></li><li><a href="https://medium.com/@pk60905/rails-try-try-%E5%92%8C-safe-navigation-operator-8503ad9b958a">try、try! 和 &amp;.</a></li><li><a href="https://ruby-doc.org/core-2.6/doc/syntax/calling_methods_rdoc.html#label-Safe+navigation+operator">ruby-doc.org Safe navigation operator</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Rails</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Rails</tag>
      
      <tag>Ruby</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>再談 Docker Repository</title>
    <link href="/2020/02/01/zyx0201/"/>
    <url>/2020/02/01/zyx0201/</url>
    
    <content type="html"><![CDATA[<p>在上篇的 <a href="https://chestertang.site/2020/01/31/zyx0131/">再談 Docker Container</a> 的介紹中對於 Docker Container 有了更深入的了解，接下來換來更深入瞭解 Docker Repository 吧！下篇就是 Deploy ～快到惹www</p><h1 id="Repository"><a href="#Repository" class="headerlink" title="Repository"></a>Repository</h1><blockquote><p>Repository(倉庫)、Registry(伺服器)，傻傻分不清楚？</p></blockquote><p>每個 Registry 上可以有多個 Repository，而每個 Repository 下面有多個 Image。簡單來說，Repository 可以被認為是一個具體的專案或目錄，例如對於 Repository 位址 dl.dockerpool.com/ubuntu 來說，dl.dockerpool.com 是註冊 Registry 位址，ubuntu 是 Repository 名稱。</p><h2 id="Docker-Hub"><a href="#Docker-Hub" class="headerlink" title="Docker Hub"></a>Docker Hub</h2><p>目前 Docker 官方維護了一個 <a href="https://hub.docker.com/">Docker Hub</a>，其中包括了超過 15,000 的 Image。大部分需求，都可以透過 Docker Hub 直接下載 Image 來實作。</p><h3 id="登入"><a href="#登入" class="headerlink" title="登入"></a>登入</h3><p>可以透過執行 docker login 指令來輸入使用者名稱、密碼和電子信箱來完成註冊和登錄。 註冊成功後，本地使用者目錄的 <code>.dockercfg</code> 中將保存使用者的認證資訊。</p><p>或者可以直接到官方註冊帳號密碼：<a href="https://hub.docker.com/">https://hub.docker.com/</a></p><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><p>使用者無需登錄即可透過 <code>docker search</code> 指令來查詢 Docker Hub 中的 Image，並利用 <code>docker pull</code> 將它下載到 local 端。</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker search ruby<br><br>NAME                         DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED<br>ruby                         Ruby is a dynamic, reflective, object-orient…   1823                [OK]<br>circleci/ruby                Ruby is a dynamic, reflective, object-orient…   67<br>starefossen/ruby-node        Docker Image with Ruby and Node.js installed    34                                      [OK]<br>heroku/ruby                  Docker Image <span class="hljs-keyword">for</span> Heroku Ruby                    22                                      [OK]<br>...<br></code></pre></td></tr></table></figure><p>下載官方 ruby Image 到 local 端</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker pull ruby<br><br>Using default tag: latest<br>latest: Pulling from library/ruby<br>8f0fdd3eaac0: Pull complete<br>d918eaefd9de: Pull complete<br>43bf3e3107f5: Pull complete<br>27622921edb2: Pull complete<br>dcfa0aa1ae2c: Pull complete<br>0e1f1dc37f65: Pull complete<br>ebd3e50ed509: Pull complete<br>660f560ba0a3: Pull complete<br>Digest: sha256:...<br>Status: Downloaded newer image <span class="hljs-keyword">for</span> ruby:latest<br>docker.io/library/ruby:latest<br></code></pre></td></tr></table></figure><p>看看剛剛下載的 ruby Image 吧！</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker images<br><br>REPOSITORY            TAG                 IMAGE ID            CREATED             SIZE<br>chestertang/sinatra   v2                  3bae0e76683f        8 days ago          447MB<br>ruby                  latest              fb53c5f433da        3 weeks ago         842MB<br></code></pre></td></tr></table></figure><p>反之當然，也可以在登錄後透過 docker push 將 Image 推送到 Docker Hub</p><h3 id="自動建立"><a href="#自動建立" class="headerlink" title="自動建立"></a>自動建立</h3><p>自動建立（Automated Builds）功能對於需要經常升級 Image 的人來說很方便。有時候，使用者建立了 Image，安裝了某個軟體，如果軟體發布新版本則需要手動更新 Image。</p><p>此外，也允許使用者透過 Docker Hub 指定跟蹤一個目標網站（目前支援 GitHub 或 BitBucket）上的專案，一旦專案發生新的 push，則自動執行建立。</p><p>設定自動建立，包括以下的步驟：</p><ul><li>建立並登入 Docker Hub，以及目標網站</li><li>在目標網站中連接帳戶到 Docker Hub</li><li>在 Docker Hub 中設定自動建立</li><li>選取一個目標網站中的專案（需要含 Dockerfile）和分支</li><li>指定 Dockerfile 的位置，並提交建立</li></ul><p>之後，可以在 Docker Hub 的自動建立頁面 中跟蹤每次建立的狀態</p><h2 id="私有-Repository"><a href="#私有-Repository" class="headerlink" title="私有 Repository"></a>私有 Repository</h2><p>有時候使用 Docker Hub 這樣的公共 Repository 可能不方便，使用者可以建立一個本地 Repository 供私人使用。</p><h2 id="安裝執行-docker-registry"><a href="#安裝執行-docker-registry" class="headerlink" title="安裝執行 docker-registry"></a>安裝執行 docker-registry</h2><h3 id="容器執行"><a href="#容器執行" class="headerlink" title="容器執行"></a>容器執行</h3><p>在安裝了 Docker 後，可以透過取得官方 registry Image 來執行</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker run -d -p 5000:5000 registry<br></code></pre></td></tr></table></figure><p>這將使用官方的 registry Image 來啟動本地的私有 Repository。 使用者可以透過指定參數來設定私有 Repository 位置，例如設定 Iamge 儲存到 Amazon S3 服務。</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker run \<br>       -e SETTINGS_FLAVOR=s3 \<br>       -e AWS_BUCKET=acme-docker \<br>       -e STORAGE_PATH=/registry \<br>       -e AWS_KEY=AKIAHSHB43HS3J92MXZ \<br>       -e AWS_SECRET=xdDowwlK7TJajV1Y7EoOZrmuPEJlHYcNP2k4j49T \<br>       -e SEARCH_BACKEND=sqlalchemy \<br>       -p 5000:5000 \<br>       registry<br></code></pre></td></tr></table></figure><h3 id="在私有-Repository-上傳、下載、搜索-Image"><a href="#在私有-Repository-上傳、下載、搜索-Image" class="headerlink" title="在私有 Repository 上傳、下載、搜索 Image"></a>在私有 Repository 上傳、下載、搜索 Image</h3><p>建立好私有 Repository 之後，就可以使用 docker tag 來標記一個 Image，然後推送它到 Repository，別的機器上就可以下載下了。例如私有 Repository 位址為 192.168.7.26:5000。</p><p>先來複製一個 Image</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker images<br><br>REPOSITORY            TAG                 IMAGE ID            CREATED             SIZE<br>registry              latest              708bc6af7e5e        7 days ago          25.8MB<br>chestertang/sinatra   v2                  3bae0e76683f        8 days ago          447MB<br><br>docker tag 708bc6af7e5e 192.168.7.26:5000/<span class="hljs-built_in">test</span><br>~<br><br>docker images<br><br>REPOSITORY               TAG                 IMAGE ID            CREATED             SIZE<br>registry                 latest              708bc6af7e5e        7 days ago          25.8MB<br>192.168.7.26:5000/<span class="hljs-built_in">test</span>   latest              708bc6af7e5e        7 days ago          25.8MB<br>chestertang/sinatra      v2                  3bae0e76683f        8 days ago          447MB<br></code></pre></td></tr></table></figure><p>使用 <code>docker push</code> 上傳 <code>192.168.7.26:5000/test</code> Image</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker push 192.168.7.26:5000/<span class="hljs-built_in">test</span><br><br>The push refers to a repository [192.168.7.26:5000/<span class="hljs-built_in">test</span>] (len: 1)<br>Sending image list<br>Pushing repository 192.168.7.26:5000/<span class="hljs-built_in">test</span> (1 tags)<br>Image 511136ea3c5a already pushed, skipping<br>Image 9bad880da3d2 already pushed, skipping<br>Image 25f11f5fb0cb already pushed, skipping<br>Image ebc34468f71d already pushed, skipping<br>Image 2318d26665ef already pushed, skipping<br>Image ba5877dc9bec already pushed, skipping<br>Pushing tag <span class="hljs-keyword">for</span> rev [ba5877dc9bec] on &#123;http://192.168.7.26:5000/v1/repositories/<span class="hljs-built_in">test</span>/tags/latest&#125;<br></code></pre></td></tr></table></figure><p>用 <code>curl</code> 查看倉庫中的映像檔</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs zsh">curl http://192.168.7.26:5000/v1/search<br><br>&#123;<span class="hljs-string">&quot;num_results&quot;</span>: 7, <span class="hljs-string">&quot;query&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;results&quot;</span>: [&#123;<span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;library/miaxis_j2ee&quot;</span>&#125;, &#123;<span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;library/tomcat&quot;</span>&#125;, &#123;<span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;library/ubuntu&quot;</span>&#125;, &#123;<span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;library/ubuntu_office&quot;</span>&#125;, &#123;<span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;library/desktop_ubu&quot;</span>&#125;, &#123;<span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;dockerfile/ubuntu&quot;</span>&#125;, &#123;<span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;library/test&quot;</span>&#125;]&#125;<br></code></pre></td></tr></table></figure><p>這樣就代表完成啦！</p><h2 id="設定檔案"><a href="#設定檔案" class="headerlink" title="設定檔案"></a>設定檔案</h2><p>Docker 的 Registry 利用設定檔案提供了一些 REPOSITORY 的模組（flavor），使用者可以來進行開發或部署。</p><h3 id="模組"><a href="#模組" class="headerlink" title="模組"></a>模組</h3><p>在 <code>config_sample.yml</code> 檔案中，可以如下：</p><ul><li><code>common</code>：基礎設定</li><li><code>local</code>：儲存資料到本地檔案系統</li><li><code>s3</code>：儲存資料到 AWS S3 中</li><li><code>dev</code>：使用 local 模組的基本設定</li><li><code>test</code>：單元測試使用</li><li><code>prod</code>：生產環境設定（基本上跟s3設定類似）</li><li><code>gcs</code>：儲存資料到 Google 的雲端</li><li><code>swift</code>：儲存資料到 OpenStack Swift 服務</li><li><code>glance</code>：儲存資料到 OpenStack Glance 服務，本地檔案系統為後備</li><li><code>glance-swift</code>：儲存資料到 OpenStack Glance 服務，Swift 為後備</li><li><code>elliptics</code>：儲存資料到 Elliptics key/value 儲存</li></ul><h3 id="範例設定"><a href="#範例設定" class="headerlink" title="範例設定"></a>範例設定</h3><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs zsh">common:<br>  loglevel: info<br>  search_backend: <span class="hljs-string">&quot;_env:SEARCH_BACKEND:&quot;</span><br>  sqlalchemy_index_database: <span class="hljs-string">&quot;_env:SQLALCHEMY_INDEX_DATABASE:sqlite:////tmp/docker-registry.db&quot;</span><br><br>prod:<br>  loglevel: warn<br>  storage: s3<br>  s3_access_key: _env:AWS_S3_ACCESS_KEY<br>  s3_secret_key: _env:AWS_S3_SECRET_KEY<br>  s3_bucket: _env:AWS_S3_BUCKET<br>  boto_bucket: _env:AWS_S3_BUCKET<br>  storage_path: /srv/docker<br>  smtp_host: localhost<br>  from_addr: docker@myself.com<br>  to_addr: my@myself.com<br><br>dev:<br>  loglevel: debug<br>  storage: <span class="hljs-built_in">local</span><br>  storage_path: /home/myself/docker<br><br><span class="hljs-built_in">test</span>:<br>  storage: <span class="hljs-built_in">local</span><br>  storage_path: /tmp/tmpdockertmp<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>再談 Docker Container</title>
    <link href="/2020/01/31/zyx0131/"/>
    <url>/2020/01/31/zyx0131/</url>
    
    <content type="html"><![CDATA[<p>在上篇 <a href="https://chestertang.site/2020/01/30/zyx0130/">再談 Docker Image</a> 的介紹中對於 Docker Image 有了更深入的了解，接下來換 Docker Container 吧！下篇還有 Docker Repository，再來就是實際 Deploy 惹～再等等啊w</p><h1 id="再談-Docker-Container"><a href="#再談-Docker-Container" class="headerlink" title="再談 Docker Container"></a>再談 Docker Container</h1><h2 id="啟動-Container"><a href="#啟動-Container" class="headerlink" title="啟動 Container"></a>啟動 Container</h2><p>啟動容器有兩種方式，一種是將 Docker Image 新建一個 Container 並啟動，另外一個是將終止狀態（stopped）的 Container 重新啟動。</p><h3 id="新建並啟動"><a href="#新建並啟動" class="headerlink" title="新建並啟動"></a>新建並啟動</h3><p>透過 <code>docker run</code> 給他新建啟動起來～</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker run -t -i ubuntu:14.04 /bin/bash<br></code></pre></td></tr></table></figure><p>其中，<code>-t</code> 指令讓 Docker 分配一個虛擬終端（pseudo-tty）並綁定到 Container 的 stdin 上，<code>-i</code> 則讓 Container 的 stdin 保持打開。意思是，使用者可以透過所建立的終端來輸入指令，例如：</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs zsh">root@af8bae53bdd3:/<span class="hljs-comment"># pwd</span><br>/<br>root@af8bae53bdd3:/<span class="hljs-comment"># ls</span><br>bin boot dev etc home lib lib64 media mnt opt proc root run sbin srv sys tmp usr var<br></code></pre></td></tr></table></figure><p>當利用 <code>docker run</code> 來建立 Container 時，Docker 在後臺執行的標準操作包括：</p><ul><li>檢查本地是否存在指定的 Image，不存在就從 Repository Hub 下載</li><li>利用 Image 建立並啟動一個 Container</li><li>分配一個檔案系統，並在 Read-only 的 Image 層外面掛載一層可讀寫層</li><li>從宿主主機設定的網路橋界面中橋接一個虛擬埠到容器中去</li><li>從位址池中設定一個 IP 位址給 Container </li><li>執行使用者指定的應用程式</li><li>執行完畢後 Container 被終止</li></ul><h3 id="啟動已終止-Container"><a href="#啟動已終止-Container" class="headerlink" title="啟動已終止 Container"></a>啟動已終止 Container</h3><p>首先，先來看看目前的 Container 狀態</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker ps -a<br><br>CONTAINER ID        IMAGE                    COMMAND             CREATED             STATUS                          NAMES<br>dd1c54fef918        ubuntu:14.04             <span class="hljs-string">&quot;/bin/bash&quot;</span>         10 minutes ago      Exited (0) 3 seconds ago        agitated_boyd<br>2f902d9238f5        chestertang/sinatra:v2   <span class="hljs-string">&quot;/bin/bash&quot;</span>         5 days ago          Exited (0) About a minute ago   confident_ritchie<br>d7b639b8385a        ubuntu:12.04             <span class="hljs-string">&quot;/bin/bash&quot;</span>         7 days ago          Exited (127) 7 days ago         dreamy_hypatia<br></code></pre></td></tr></table></figure><p>從狀態（STATUS）中可以知道目前有啟動的 Container，現在透過 <code>docker start</code>，直接將已經終止的 Container（dd1c54fef918）啟動起來w</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker start dd1c54fef918<br><br>CONTAINER ID        IMAGE                    COMMAND             CREATED             STATUS                          NAMES<br>dd1c54fef918        ubuntu:14.04             <span class="hljs-string">&quot;/bin/bash&quot;</span>         10 minutes ago      Up 3 seconds                    agitated_boyd<br>2f902d9238f5        chestertang/sinatra:v2   <span class="hljs-string">&quot;/bin/bash&quot;</span>         5 days ago          Exited (0) About a minute ago   confident_ritchie<br>d7b639b8385a        ubuntu:12.04             <span class="hljs-string">&quot;/bin/bash&quot;</span>         7 days ago          Exited (127) 7 days ago         dreamy_hypatia<br></code></pre></td></tr></table></figure><h2 id="停止-Container"><a href="#停止-Container" class="headerlink" title="停止 Container"></a>停止 Container</h2><p>跟上面就很類似了，相對的有 <code>start</code> 就會有 <code>stop</code></p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker ps -a<br><br>CONTAINER ID        IMAGE                    COMMAND             CREATED             STATUS                          NAMES<br>dd1c54fef918        ubuntu:14.04             <span class="hljs-string">&quot;/bin/bash&quot;</span>         10 minutes ago      Up 3 seconds                    agitated_boyd<br>2f902d9238f5        chestertang/sinatra:v2   <span class="hljs-string">&quot;/bin/bash&quot;</span>         5 days ago          Exited (0) About a minute ago   confident_ritchie<br>d7b639b8385a        ubuntu:12.04             <span class="hljs-string">&quot;/bin/bash&quot;</span>         7 days ago          Exited (127) 7 days ago         dreamy_hypatia<br><br>docker stop dd1c54fef918<br><br>CONTAINER ID        IMAGE                    COMMAND             CREATED             STATUS                          NAMES<br>dd1c54fef918        ubuntu:14.04             <span class="hljs-string">&quot;/bin/bash&quot;</span>         10 minutes ago      Exited (0) 2 seconds ago        agitated_boyd<br>2f902d9238f5        chestertang/sinatra:v2   <span class="hljs-string">&quot;/bin/bash&quot;</span>         5 days ago          Exited (0) About a minute ago   confident_ritchie<br>d7b639b8385a        ubuntu:12.04             <span class="hljs-string">&quot;/bin/bash&quot;</span>         7 days ago          Exited (127) 7 days ago         dreamy_hypatia<br></code></pre></td></tr></table></figure><p>此外，當 Docker Container 中指定的應用停止時，Container 也自動停止。例如退出啟動的一個終端機 Container，使用者透過 exit 命令或 Ctrl+d 來退出終端機時，所建立的 Container 也隨之結束。</p><blockquote><p><code>docker restart</code> 命令會將一個執行中的 Container 終止，然後再重新啟動。</p></blockquote><h2 id="Daemonized-執行"><a href="#Daemonized-執行" class="headerlink" title="Daemonized 執行"></a>Daemonized 執行</h2><p>更多的時候，需要讓 Docker Container 在後臺以 Daemonized 形式執行。此時，可以透過新增 -d 參數來實作</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker run -d ubuntu:14.04 /bin/sh -c <span class="hljs-string">&quot;while true; do echo hello world; sleep 1; done&quot;</span><br>31cec6c9afae51cd0adad62ac18b837e4d5caa80c141d7a8b0f7688670cb6e37<br></code></pre></td></tr></table></figure><p>Container 啟動後會返回一個唯一的 id，也可以透過 <code>docker ps</code> 指令來查看 Container 訊息</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker ps<br>CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              NAMES<br>31cec6c9afae        ubuntu:14.04        <span class="hljs-string">&quot;/bin/sh -c &#x27;while t…&quot;</span>   11 seconds ago      Up 10 seconds       confident_mirzakhani<br></code></pre></td></tr></table></figure><p>要取得 Container 的輸出訊息，可以透過 docker logs 指令來查看～</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker logs 31cec6c9afae<br><br>hello world<br>hello world<br>hello world<br>...<br></code></pre></td></tr></table></figure><blockquote><p><a href="http://linux.vbird.org/linux_basic/0560daemons.php">何謂 Daemonized ?</a></p></blockquote><h2 id="進入-Container"><a href="#進入-Container" class="headerlink" title="進入 Container"></a>進入 Container</h2><p>有些時候不能只是在背景執行而已，需要透過進入 Container 來進行操作，其中有以下幾種方法</p><h3 id="exec-指令"><a href="#exec-指令" class="headerlink" title="exec 指令"></a>exec 指令</h3><p>首先先列出想要進入的 Container（相信已經很熟悉像是：列出 Container、Image 這類型的操作，更或者是連新增刪除都很熟悉惹w）</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker ps<br><br>CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              NAMES<br>31cec6c9afae        ubuntu:14.04        <span class="hljs-string">&quot;/bin/sh -c &#x27;while t…&quot;</span>   18 minutes ago      Up 18 minutes       confident_mirzakhani<br><br>docker <span class="hljs-built_in">exec</span> -ti pensive_agnesi bash<br>root@f4bf4c32b4c9:/<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><h3 id="attach-指令"><a href="#attach-指令" class="headerlink" title="attach 指令"></a>attach 指令</h3><p>與 <code>exec</code> 要輸入的指令是完完全全相同的，只差在 <code>exec</code>、<code>attach</code> 這兩個字</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker ps<br><br>CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              NAMES<br>31cec6c9afae        ubuntu:14.04        <span class="hljs-string">&quot;/bin/sh -c &#x27;while t…&quot;</span>   18 minutes ago      Up 18 minutes       confident_mirzakhani<br><br>docker attach -ti pensive_agnesi bash<br>root@f4bf4c32b4c9:/<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><blockquote><p><a href="https://stackoverflow.com/questions/30960686/difference-between-docker-attach-and-docker-exec/43864530">所以 attach / exec 到底哪裡不同呢？</a></p></blockquote><h2 id="Import-and-Export-Container"><a href="#Import-and-Export-Container" class="headerlink" title="Import and Export Container"></a>Import and Export Container</h2><h3 id="Import-Container"><a href="#Import-Container" class="headerlink" title="Import Container"></a>Import Container</h3><p>如果要匯入別人的 Container 的話，可以透過 <code>docker import</code> 從 Container 檔案中再匯入為 Image</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs zsh">cat ubuntu.tar | sudo docker import - <span class="hljs-built_in">test</span>/ubuntu:v1.0<br>docker images<br><br>REPOSITORY          TAG                 IMAGE ID            CREATED              VIRTUAL SIZE<br><span class="hljs-built_in">test</span>/ubuntu         v1.0                9d37a6082e97        About a minute ago   171.3 MB<br></code></pre></td></tr></table></figure><h3 id="Export-Container"><a href="#Export-Container" class="headerlink" title="Export Container"></a>Export Container</h3><p>反之，如果要匯出 local 端的某一個 Container，可以使用 docker export 指令來進行</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker ps<br><br>CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              NAMES<br>31cec6c9afae        ubuntu:14.04        <span class="hljs-string">&quot;/bin/sh -c &#x27;while t…&quot;</span>   18 minutes ago      Up 18 minutes       confident_mirzakhani<br><br>docker <span class="hljs-built_in">export</span> 31cec6c9afae &gt; ubuntu1404.tar<br></code></pre></td></tr></table></figure><p>就會匯出檔案囉～～</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs zsh">ls<br>ubuntu1404.tar<br></code></pre></td></tr></table></figure><h2 id="刪除-Container"><a href="#刪除-Container" class="headerlink" title="刪除 Container"></a>刪除 Container</h2><p>在上一篇當中，就有提到過如果要刪除 Image 時，如果還有 Container 還在使用這個 Image 會導致無法刪除的問題，這時候就可以用 <code>docker rm</code> 指令來刪除</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker rm confident_mirzakhani<br>confident_mirzakhani<br></code></pre></td></tr></table></figure><blockquote><p>單純上方的指令只能刪除一個處於<code>終止狀態</code>的 Container，如果想要刪除正在執行中的 Container，可以新增 -f 參數指令，已完成需求。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>再談 Docker Image</title>
    <link href="/2020/01/30/zyx0130/"/>
    <url>/2020/01/30/zyx0130/</url>
    
    <content type="html"><![CDATA[<p>在上篇的 <a href="https://chestertang.site/2020/01/21/zyx0121/">Docker 是什麼？</a> 的介紹中我們知道了 Docker 三大元素，這篇就來講一下如何安裝及再談 Docker Image 吧 owo</p><h1 id="如何安裝-Docker？"><a href="#如何安裝-Docker？" class="headerlink" title="如何安裝 Docker？"></a>如何安裝 Docker？</h1><h2 id="Mac-安裝-Docker"><a href="#Mac-安裝-Docker" class="headerlink" title="Mac 安裝 Docker"></a>Mac 安裝 Docker</h2><h3 id="下載官方-Docker-dmg-安裝"><a href="#下載官方-Docker-dmg-安裝" class="headerlink" title="下載官方 Docker.dmg 安裝"></a>下載官方 <code>Docker.dmg</code> 安裝</h3><blockquote><p><a href="https://hub.docker.com/editions/community/docker-ce-desktop-mac">Docker Desktop for Mac</a></p></blockquote><h3 id="透過-Homebrew-安裝"><a href="#透過-Homebrew-安裝" class="headerlink" title="透過 Homebrew 安裝"></a>透過 Homebrew 安裝</h3><p>使用 brew 指令安裝</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs zsh">brew cask install docker<br></code></pre></td></tr></table></figure><p>啟動 docker for mac</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs zsh">open /Applications/Docker.app<br></code></pre></td></tr></table></figure><hr><h1 id="再談-Docker-Image"><a href="#再談-Docker-Image" class="headerlink" title="再談 Docker Image"></a>再談 Docker Image</h1><p>上篇對於 Docker 三大元素的基本介紹有了一定的了解，接下來再來學習如何操作吧！</p><h2 id="取得-Docker-Image"><a href="#取得-Docker-Image" class="headerlink" title="取得 Docker Image"></a>取得 Docker Image</h2><p>可以使用 <code>docker pull</code> 指令從 Docker Hub 取得所需要的 Image。舉例下載一個 Ubuntu 12.04 作業系統的 Image。</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs zsh">sudo docker pull ubuntu:12.04<br>Password: //輸入密碼<br><br>12.04: Pulling from library/ubuntu<br>d8868e50ac4c: Pull complete<br>83251ac64627: Pull complete<br>589bba2f1b36: Pull complete<br>d62ecaceda39: Pull complete<br>6d93b41cfc6b: Pull complete<br>Digest: sha256:...<br>Status: Downloaded newer image <span class="hljs-keyword">for</span> ubuntu:12.04<br>docker.io/library/ubuntu:12.04<br></code></pre></td></tr></table></figure><p>完成後，即可隨時使用我們下載的這個 Image 了（讓這個 Image 執行 bash）</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker run -t -i ubuntu:12.04 /bin/bash<br><br>root@d7b639b8385a:/<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><blockquote><p>之後會再介紹這段指令的意思～</p></blockquote><h2 id="列出-Docker-Image"><a href="#列出-Docker-Image" class="headerlink" title="列出 Docker Image"></a>列出 Docker Image</h2><p>使用 docker images 顯示本機已有的 Image</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker images<br>REPOSITORY    TAG      IMAGE ID        CREATED             SIZE<br>hello-world   latest   fce289e99eb9    12 months ago       1.84kB<br>ubuntu        12.04    5b117edd0b76    2 years ago         104MB<br></code></pre></td></tr></table></figure><p>在終端機列出訊息中，可以看到幾段文字訊息</p><ul><li>REPOSITORY：來自哪個 Registry</li><li>TAG：版本</li><li>IMAGE ID：Image 的 ID（唯一）</li><li>CREATED：建立時間</li><li>VIRTUAL SIZE：Image 檔案大小</li></ul><blockquote><p>題外話：可以看到 hello-world 的 TAG 是 <code>latest</code>，這代表著這個 Image 沒有設定 TAG，恩…</p></blockquote><h2 id="建立-Docker-Image"><a href="#建立-Docker-Image" class="headerlink" title="建立 Docker Image"></a>建立 Docker Image</h2><h3 id="修改別人的-Image-已建立新的-Image"><a href="#修改別人的-Image-已建立新的-Image" class="headerlink" title="修改別人的 Image 已建立新的 Image"></a>修改別人的 Image 已建立新的 Image</h3><p>首先，先把別人的 Image pull 下來並啟動 Container</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker run -t -i training/sinatra /bin/bash<br><br>Unable to find image <span class="hljs-string">&#x27;training/sinatra:latest&#x27;</span> locally<br>latest: Pulling from training/sinatra<br>Image docker.io/training/sinatra:latest uses outdated schema1 manifest format. Please upgrade to a schema2 image <span class="hljs-keyword">for</span> better future compatibility. More information at https://docs.docker.com/registry/spec/deprecated-schema-v1/<br>a3ed95caeb02: Pull complete<br>6e71c809542e: Pull complete<br>d196a7609355: Pull complete<br>08f6dff5acea: Pull complete<br>ce65532003d0: Pull complete<br>54bcaa4d1a10: Pull complete<br>8572ad96f6e1: Pull complete<br>Digest: ...<br>Status: Downloaded newer image <span class="hljs-keyword">for</span> training/sinatra:latest<br></code></pre></td></tr></table></figure><p>稍微對這個別人的 Image 對點手腳，加個 <code>gem install json</code> 為例來試試</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs zsh">root@360d0440d1d4:/<span class="hljs-comment"># gem install json</span><br><br>Fetching: json-2.3.0.gem (100%)<br>Building native extensions.  This could take a <span class="hljs-keyword">while</span>...<br>Successfully installed json-2.3.0<br>1 gem installed<br>Installing ri documentation <span class="hljs-keyword">for</span> json-2.3.0...<br>Installing RDoc documentation <span class="hljs-keyword">for</span> json-2.3.0...<br></code></pre></td></tr></table></figure><p>安裝完成 <code>gem install json</code> 後，代表我們這個 Container 已經被改變了！按下 control+D 或 exit 跳出這個 Container！再透過 <code>docker commit</code> 指令來新增這個 commit</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs zsh">~ docker commit -m <span class="hljs-string">&quot;Added json gem&quot;</span> -a <span class="hljs-string">&quot;Chester&quot;</span> 7c61f457e695 chestertang/sinatra:v2<br></code></pre></td></tr></table></figure><blockquote><p>如果 docker ps 中沒有 container，那執行上方指令將會 Error response from daemon: No such container: 49d952a36c58，因此，可以試試看下以下指令來看擁有的 Container ID</p></blockquote><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker ps -a<br></code></pre></td></tr></table></figure><p>在這段指令中，指令分別代表的意思如下</p><ul><li><code>-m &quot;Added json gem&quot;</code>：與 github commit 訊息一樣，後方的為這次 commit 的註解</li><li><code>-a &quot;Chester&quot;</code>：代表著是作者資訊</li><li><code>7c61f457e695</code>：Container ID，透過 docker ps / docker ps -a 取得</li><li><code>chestertang/sinatra:v2</code>：v2 冒號前半段是 Repository 名稱（不能大寫），後半段是 TAG</li></ul><p>再來看看 docker images 吧！</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker images<br><br>REPOSITORY            TAG         IMAGE ID          CREATED             SIZE<br>chestertang/sinatra   v2          3bae0e76683f      11 seconds ago      447MB<br>ubuntu                12.04       5b117edd0b76      2 years ago         104MB<br>training/sinatra      latest      49d952a36c58      5 years ago         447MB<br></code></pre></td></tr></table></figure><p>並且用剛剛新的 Images 來啟動 Container</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker run -t -i chestertang/sinatra:v2 /bin/bash<br><br>root@2f902d9238f5:/<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><h3 id="利用-Dockerfile-建立-Image"><a href="#利用-Dockerfile-建立-Image" class="headerlink" title="利用 Dockerfile 建立 Image"></a>利用 Dockerfile 建立 Image</h3><p>我們可以使用 docker build 來建立一個新的 Image。首先，需要建立一個 Dockerfile，裡面包含一些用來建立 Image 的指令。</p><p>新建一個資料夾和一個 Dockerfile</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs zsh">mkdir sinatra<br><span class="hljs-built_in">cd</span> sinatra<br>touch Dockerfile<br></code></pre></td></tr></table></figure><p>開啟建立的 Dockerfile 並來透過 ubuntu 與安裝 Ruby 來安裝 sinatra</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Dockerfile"><span class="hljs-comment"># This is a comment</span><br><span class="hljs-keyword">FROM</span> ubuntu:<span class="hljs-number">14.04</span><br><span class="hljs-keyword">MAINTAINER</span> Docker Chester &lt;chestertang.zyxel@gmail.com&gt;<br><span class="hljs-keyword">RUN</span><span class="bash"> apt-get -qq update</span><br><span class="hljs-keyword">RUN</span><span class="bash"> apt-get -qqy install ruby ruby-dev</span><br><span class="hljs-keyword">RUN</span><span class="bash"> gem install sinatra</span><br></code></pre></td></tr></table></figure><p>Dockerfile 的基本語法的思如下：</p><ul><li><code>#</code> 來表示註解</li><li><code>FROM</code> 指令告訴 Docker 使用哪個 Image 作為基底</li><li><code>MAINTAINER</code> 表示誰是這個 file 的維護者</li><li><code>RUN</code> 開頭的指令會在建立中執行，比如在這裏使用 <code>apt-get</code> 來安裝 <code>ruby</code>、<code>sinatra</code> 套件</li></ul><p>建立完成 Dockerfile 後可以使用 <code>docker build</code> 建立 Docker Image</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker build -t=<span class="hljs-string">&quot;chestertang/sinatra:v2&quot;</span> .<br><br>Uploading context  2.56 kB<br>Uploading context<br>Step 0 : FROM ubuntu:14.04<br>  ---&gt; 99ec81b80c55<br>Step 1 : MAINTAINER Kate Smith &lt;ksmith@example.com&gt;<br>  ---&gt; Running <span class="hljs-keyword">in</span> 7c5664a8a0c1<br>  ---&gt; 2fa8ca4e2a13<br>Removing intermediate container 7c5664a8a0c1<br>Step 2 : RUN apt-get -qq update<br>  ---&gt; Running <span class="hljs-keyword">in</span> b07cc3fb4256<br>  ---&gt; 50d21070ec0c<br>Removing intermediate container b07cc3fb4256<br>Step 3 : RUN apt-get -qqy install ruby ruby-dev<br>  ---&gt; Running <span class="hljs-keyword">in</span> a5b038dd127e<br>Selecting previously unselected package libasan0:amd64.<br>(Reading database ... 11518 files and directories currently installed.)<br>Preparing to unpack .../libasan0_4.8.2-19ubuntu1_amd64.deb ...<br>Setting up ruby (1:1.9.3.4) ...<br>Setting up ruby1.9.1 (1.9.3.484-2ubuntu1) ...<br>Processing triggers <span class="hljs-keyword">for</span> libc-bin (2.19-0ubuntu6) ...<br>  ---&gt; 2acb20f17878<br>Removing intermediate container a5b038dd127e<br>Step 4 : RUN gem install sinatra<br>  ---&gt; Running <span class="hljs-keyword">in</span> 5e9d0065c1f7<br>. . .<br>Successfully installed rack-protection-1.5.3<br>Successfully installed sinatra-1.4.5<br>4 gems installed<br>  ---&gt; 324104cde6ad<br>Removing intermediate container 5e9d0065c1f7<br>Successfully built 324104cde6ad<br></code></pre></td></tr></table></figure><blockquote><p>其中 -t 標記添加 TAG，指定新的 Image 的使用者資訊。 “.” 是 Dockerfile 所在的路徑，也可以換成具體的 Dockerfile 的路徑。</p></blockquote><p>Dockerfile 是設定專案必定使用的方式，這個將在之後的有更深入的一篇例子來實作</p><h3 id="從本機匯入"><a href="#從本機匯入" class="headerlink" title="從本機匯入"></a>從本機匯入</h3><p>要從本機匯入 Image，可以使用 <code>OpenVZ</code> 來建立(<a href="https://wiki.openvz.org/Download/template/precreated">https://wiki.openvz.org/Download/template/precreated</a>)</p><p>比如，先下載一個 ubuntu-14.04 的映像檔，之後使用以下命令匯入：</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs zsh">cat ubuntu-14.04-x86_64-minimal.tar.gz  |docker import - ubuntu:14.04<br></code></pre></td></tr></table></figure><p>然後查看新匯入的 Docker Image</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker images<br><br>REPOSITORY    TAG       IMAGE ID         CREATED           VIRTUAL SIZE<br>ubuntu        14.04     05ac7c0b9383     17 seconds ago    215.5 MB<br></code></pre></td></tr></table></figure><h3 id="上傳-Docker-Images"><a href="#上傳-Docker-Images" class="headerlink" title="上傳 Docker Images"></a>上傳 Docker Images</h3><p>可以透過 <code>docker push</code> 指令，把自己建立的 Docker Image 分享上傳到 <code>Repository</code> 。例如，使用者在 Docker Hub 上完成註冊後，可以推送自己的 Docker Image 到 Repository 中。</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker push chestertang/sinatra<br><br>sudo docker push chestertang/sinatra<br><br>The push refers to a repository [chestertang/sinatra]<br>Sending image list<br>Pushing repository chestertang/sinatra<br></code></pre></td></tr></table></figure><h2 id="儲存和載入-Image"><a href="#儲存和載入-Image" class="headerlink" title="儲存和載入 Image"></a>儲存和載入 Image</h2><h3 id="儲存-Image"><a href="#儲存-Image" class="headerlink" title="儲存 Image"></a>儲存 Image</h3><p>如果要建立 Docker Image 到 local 檔案，可以使用 docker save 指令來儲存</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker images<br><br>REPOSITORY      TAG         IMAGE ID          CREATED           VIRTUAL SIZE<br>ubuntu          14.04       c4ff7513909d      5 weeks ago       225.4 MB<br><br>docker save -o ubuntu_14.04.tar ubuntu:14.04<br></code></pre></td></tr></table></figure><h3 id="載入映像檔"><a href="#載入映像檔" class="headerlink" title="載入映像檔"></a>載入映像檔</h3><p>可以使用 <code>docker load</code> 從建立的 local 檔案再匯入到 local Image，例如：</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker load --input ubuntu_14.04.tar || docker load &lt; ubuntu_14.04.tar<br></code></pre></td></tr></table></figure><h2 id="移除-local-端-Docker-Image"><a href="#移除-local-端-Docker-Image" class="headerlink" title="移除 local 端 Docker Image"></a>移除 local 端 Docker Image</h2><p>  如果要移除 local 端的 Docker Image，可以使用 docker rmi 命令。（注意：如果有 Container 是透過現在這個 Image 在執行的話，必須先將 Container 刪除完畢後才能刪除 Image）</p><p>  先來列出有的 Container 與 Image</p>  <figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker ps -a<br><br>CONTAINER ID    IMAGE                    COMMAND          CREATED             STATUS                          NAMES<br>83be203c6040    chestertang/sinatra:v2   <span class="hljs-string">&quot;/bin/bash&quot;</span>      48 minutes ago      Exited (0) 18 minutes ago       elastic_hertz<br>2f902d9238f5    chestertang/sinatra:v2   <span class="hljs-string">&quot;/bin/bash&quot;</span>      4 days ago          Exited (130) 4 days ago         confident_ritchie<br>d7b639b8385a    ubuntu:12.04             <span class="hljs-string">&quot;/bin/bash&quot;</span>      7 days ago          Exited (127) 7 days ago         dreamy_hypatia<br>1d8d58333b3d    ubuntu:12.04             <span class="hljs-string">&quot;/bin/bash&quot;</span>      7 days ago          Exited (130) 7 days ago         wizardly_morse<br>c9a19d3553c9    ubuntu:12.04             <span class="hljs-string">&quot;/bin/bash&quot;</span>      7 days ago          Exited (0) 7 days ago           interesting_dubinsky<br>bcf468d00ca2    hello-world              <span class="hljs-string">&quot;/hello&quot;</span>         9 days ago          Exited (0) 9 days ago           inspiring_newton<br><br>docker images<br><br>REPOSITORY            TAG                IMAGE ID         CREATED             SIZE<br>chestertang/sinatra   v2                 3bae0e76683f     7 days ago          447MB<br>ubuntu                14.04              6e4f1fe62ff1     5 weeks ago         197MB<br>hello-world           latest             fce289e99eb9     13 months ago       1.84kB<br>ubuntu                12.04              5b117edd0b76     2 years ago         104MB<br>joshhu/webdemo        latest             c58bf6158823     4 years ago         243MB<br>training/sinatra      latest             49d952a36c58     5 years ago         447MB<br></code></pre></td></tr></table></figure><p>  來刪除 training/sinatra 這個 image</p>  <figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker rmi training/sinatra<br><br>Untagged: training/sinatra:latest<br>Untagged: training/sinatra@sha256:...<br></code></pre></td></tr></table></figure><p>  如果如上所述，在被刪除的這個 Image 底下還有 Container 未被刪除就會出現以下訊息：</p>  <figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs zsh">docker rmi fce289e99eb9<br><br>Error response from daemon: conflict: unable to delete fce289e99eb9 (must be forced) - image is being used by stopped container bcf468d00ca2<br></code></pre></td></tr></table></figure><blockquote><p>這時候就需要透過 <code>docker rm</code> 先去把底下的 Container 都刪除完畢完後，才能移除 Image！</p></blockquote><hr><h1 id="資料來源"><a href="#資料來源" class="headerlink" title="資料來源"></a>資料來源</h1><ul><li><a href="https://dotblogs.com.tw/aken1215/2016/09/18/132729">朕在coding</a></li><li><a href="https://yeasy.gitbooks.io/docker_practice/">Docker — 从入门到实践</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker 是什麼？</title>
    <link href="/2020/01/21/zyx0121/"/>
    <url>/2020/01/21/zyx0121/</url>
    
    <content type="html"><![CDATA[<h1 id="What’s-Docker？"><a href="#What’s-Docker？" class="headerlink" title="What’s Docker？"></a>What’s Docker？</h1><p>直接破題好惹w</p><ul><li><p>Docker 想解決的問題：<br>改善傳統虛擬機器因為需要額外安裝作業系統（Guest OS），導致啟動慢、佔較大記憶體的問題</p></li><li><p>Docker 要提供的解法：<br>以應用程式為核心虛擬化，取代傳統需要 Guest OS 的虛擬化技術</p></li></ul><p>白話文的翻譯就像是：</p><blockquote><p>「我寫好了一支程式，在我的電腦上可以正常運作，然後在你的電腦上運作就爆掉惹 ouo」</p></blockquote><p>就像是我的 Ruby 版本跟你的 Ruby 版本不同，結果根本沒有那個方法可以用。又或者是小菜的電腦是 windows 其他人的都是 mac，光作業系統與硬體配置就不盡相同了！更何況是他的程式可能跟其他人電腦上的環境又都不相容，而透過「<code>虛擬化</code>」的方式模擬一個環境，讓程式可以在不同硬體上執行，都以為自己在同一個環境中執行。</p><p>最為熟悉的莫過於在買 mac 電腦時，很想裝個 <code>虛擬機器</code> 來打電動或者是開啟專屬於 windows 的軟體，而目前常見用來比較的虛擬化技術有兩種：</p><ol><li>傳統方式是在硬體層面實現虛擬化，需要額外的虛擬機器管理軟體和虛擬機器作業系統層（Guest OS），如 <a href="https://www.virtualbox.org/">Oracle VM VirtualBox</a>。</li><li>Docker 容器是在作業系統層上實現虛擬化，直接使用本機的作業系統（Host OS），如 <a href="https://www.docker.com/">dotCloud Docker</a>。</li></ol><h1 id="所以什麼是-Docker？"><a href="#所以什麼是-Docker？" class="headerlink" title="所以什麼是 Docker？"></a>所以什麼是 Docker？</h1><p>如同前面破題的內容，知道了要解決的問題，因此來跟傳統的虛擬機技術來比較不同之處。傳統虛擬機技術是模擬出一套硬體後，在這系統上再運行所需要應用到的軟體；而 Docker 透過在容器內的應用直接運行於宿主的內核（Docker Engine），也不用模擬出虛擬的硬體（Guest OS）。</p><p>傳統虛擬機器：<br><img src="https://i.imgur.com/ZhbX4F4.png" alt="image"></p><p>Docker：<br><img src="https://i.imgur.com/NX7mfR4.png" alt="image"></p><h2 id="圖中名詞介紹（Host-OS-Guest-OS-Hypervisor）"><a href="#圖中名詞介紹（Host-OS-Guest-OS-Hypervisor）" class="headerlink" title="圖中名詞介紹（Host OS / Guest OS / Hypervisor）"></a>圖中名詞介紹（Host OS / Guest OS / Hypervisor）</h2><h3 id="Host-OS-Guest-OS"><a href="#Host-OS-Guest-OS" class="headerlink" title="Host OS | Guest OS"></a>Host OS | Guest OS</h3><p>Host（Host OS）指的是用來安裝虛擬機器軟體的作業系統，而 Guest（Guest OS）則是指安裝在虛擬機器上的作業系統。</p><p>舉例來說，我在筆電上裝了 Winodws 7，然後在 Windows 7 上安裝 VirtualBox，接著再透過 VirtualBox 建立的虛擬機上又建立了 Windows 10 環境。由此例推導，VirtualBox 虛擬機器的 Windows 10 就是 Guest OS，而原本筆電上安裝的 Windows 7 就是 Host OS。</p><h3 id="Hypervisor"><a href="#Hypervisor" class="headerlink" title="Hypervisor"></a>Hypervisor</h3><p>又稱虛擬機器監視器（Virtual machine monitor），是用來建立與執行虛擬機器的軟體、韌體或硬體。</p><p>被 Hypervisor 用來執行一個或多個虛擬機器的電腦稱為宿主機（Host machine），這些虛擬機器則稱為客戶機（Guest machine）。Hypervisor 提供虛擬的作業平台來執行 Guest OS，負責管理其他 Guest OS 的執行階段，而這些 Guest OS 又共同分享虛擬化後的硬體資源。</p><h1 id="虛擬機器-vs-容器"><a href="#虛擬機器-vs-容器" class="headerlink" title="虛擬機器 vs 容器"></a>虛擬機器 vs 容器</h1><h2 id="虛擬機器（Virtual-machine）"><a href="#虛擬機器（Virtual-machine）" class="headerlink" title="虛擬機器（Virtual machine）"></a>虛擬機器（Virtual machine）</h2><p>虛擬機器是在系統層上虛擬化，透過 Hypervisor 在目標的機器上提供可以執行一個或多個虛擬機器的平台。而這些虛擬機器可以執行完整的作業系統。簡單來說，Hypervisor 就是一個可以讓你在作業系統（Host OS）上面再裝一個作業系統（Guest OS）。</p><p>透過選擇不同的 Guest OS，虛擬機器的技術就可以確保只要我的程式在該 Guest OS 上可以正常運作，那放到你的電腦上跑時，可以不管你的 Host OS 是什麼，只要在你的 Host OS 上先裝上我的 Guest OS，我的程式就可以正常在你的電腦上運作。</p><h2 id="容器（Container）"><a href="#容器（Container）" class="headerlink" title="容器（Container）"></a>容器（Container）</h2><p>容器是在作業系統層上虛擬化，透過 Container Manager（ex: Docker Engine） 直接將一個應用程式所需的程式碼、函式庫打包，建立資源控管機制隔離各個容器，並分配 Host OS 上的系統資源。透過容器，應用程式不需要再另外安裝作業系統（Guest OS）也可以執行。</p><h2 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h2><table><thead><tr><th>特性</th><th>容器</th><th>虛擬機器</th></tr></thead><tbody><tr><td>啟動速度</td><td>秒</td><td>分鐘</td></tr><tr><td>硬碟使用</td><td>通常為 MB</td><td>通常為 GB</td></tr><tr><td>電腦效能</td><td>接近於原本</td><td>弱於容器</td></tr><tr><td>系統支援數量</td><td>支持上千個容器</td><td>通常幾十個</td></tr></tbody></table><p>好了，寫到這邊應該都對 Docker 技術、優勢及背景知識有了大概的了解，現在終於要來切入 Docker 啦～</p><hr><h1 id="Docker-三大元素"><a href="#Docker-三大元素" class="headerlink" title="Docker 三大元素"></a>Docker 三大元素</h1><p>在了解完基本概念後，接下來我們要進一步了解要使用 Docker 時最重要的三個元素：映像檔（Docker Image，文中簡稱 Image）、容器（Docker Container，文中簡稱 Container）、倉庫（Docker Repository，文中簡稱 Repository）。</p><p>白話文的翻譯就像是：</p><blockquote><p>我有一個很大的樂高積木箱子（Repository），裡面專門放置很多很多的樂高積木（Image），而透過積木產生的樂高，則是容器（Container）。</p></blockquote><h2 id="映像檔（Image）"><a href="#映像檔（Image）" class="headerlink" title="映像檔（Image）"></a>映像檔（Image）</h2><p>Docker Image 是一個模板，用來重複產生 Container。如同一個 Image 裡可以包含一個完整的 PostgreSQL 資料庫服務、一個 Ruby 的編譯環境、或是一個 Ubuntu 作業系統。</p><p>透過 Image 我們可以快速的產生可以執行應用程式的 Container。而 Docker Image 可以透過撰寫 Dockerfile 建立，或甚至可以從公開的地方下載已經做好的 Image 來使用。另外要注意的是，Docker Image 是唯讀（Read-only）的。</p><blockquote><p> Docker 設計時，充分利用 <a href="https://en.wikipedia.org/wiki/Union_mount">Union FS</a> 的技術，來設計分層儲存的架構。因此，Image 在建構時，會一層層建構，前一層是後一層的基礎。每一層建構完就不會再發生改變，後一層上的任何改變只會發生在自己這一層。</p></blockquote><h2 id="容器（Container）-1"><a href="#容器（Container）-1" class="headerlink" title="容器（Container）"></a>容器（Container）</h2><p>Container 是用 Image 建立出來的執行實例，他們之間的關係，就像是實體與類別的概念一樣，Image 是靜態的定義，Container 是 Image 運行的實體。它可以被創建、啟動、刪除、停止等，且每個容器都是相互隔離。</p><p>又可以把 Container 看做是一個執行的應用程式加上執行它的簡易版 Linux 環境（包括 root 使用者權限、程式空間、使用者空間和網路空間等），就好像在獨立的系統下操作一樣。</p><blockquote><p>Container 與 Image 都是使用分層儲存。其儲存層的生命週期和 Container 一樣，Container 刪除時，容器儲存層也隨之結束。因此，任何保存於裡面的資訊都會隨 Container 刪除而丟失。</p></blockquote><h2 id="倉庫（Repository）"><a href="#倉庫（Repository）" class="headerlink" title="倉庫（Repository）"></a>倉庫（Repository）</h2><p>Image 建構完成後，可以很容易的當前的電腦上運行，但是如果需要在其他伺服器使用這個 Image 時候，就需要一個集中儲存 Image 的服務，<code>Docker Registry</code> 就是這樣的服務。</p><p>一個 Docker Registry 中可以包含多個 Repository；每個 Repository 又可以包含多個版本；每個版本對應一個 Image。</p><p>最常用的 Registry 公開服務是官方的 Docker Hub，也就是 Docker 倉庫註冊伺服器的代表，此外還有像是 Google 的 <a href="https://cloud.google.com/container-registry/">Google Container Registry</a>，Kubernetes 的 Image 使用的就是這個服務。且概念及使用方式跟 Github 類似，你可以在上面建立多個倉庫，然後透過 push、pull 的方式上傳、存取。</p><hr><h3 id="狀況題"><a href="#狀況題" class="headerlink" title="狀況題"></a>狀況題</h3><p>如同上述的灰色區塊可知，如果今天我想升級 mysql 的版本，於是我把正在跑的 mysql:5.5 關掉，然後重新跑一個 mysql:5.7 的 Container，那資料庫裡面的資料不就不見了嗎？</p><blockquote><p>沒錯，這時候就需要 Volume 了，簡單來說 Volume 的生命週期獨立於 Container，Container 的結束不會影響 Volume 的存亡，因此使用 <code>volume</code> 就是用來保存容器內的資料。</p></blockquote><p>那又是另一個主題了…</p><hr><h1 id="資料來源"><a href="#資料來源" class="headerlink" title="資料來源"></a>資料來源</h1><ul><li><a href="https://www.arthurtoday.com/2009/12/host-guest.html">Host OS 和 Guest OS 是什麼 ?</a></li><li><a href="https://en.wikipedia.org/wiki/Hypervisor">Hypervisor Wiki</a></li><li><a href="https://stackoverflow.com/questions/16047306/how-is-docker-different-from-a-virtual-machine#">How is Docker different from a virtual machine?</a></li><li><a href="http://epaper.gotop.com.tw/pdf/ACA020700.pdf">Docker 入門</a></li><li><a href="https://medium.com/unorthodox-paranoid/docker-tutorial-101-c3808b899ac6">Docker 基礎教學與介紹 101</a></li><li><a href="https://yeasy.gitbooks.io/docker_practice/content/introduction/what.html">Docker – 從入門到實踐</a></li><li><a href="https://5xruby.tw/posts/deploying-your-docker-rails-app/">Johnson God 用 Docker 部署 Rails，原來是這樣！？</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AWS - Cloud Services Overview</title>
    <link href="/2020/01/13/zyx0113/"/>
    <url>/2020/01/13/zyx0113/</url>
    
    <content type="html"><![CDATA[<h1 id="雲端運算-Cloud-Services-Overview"><a href="#雲端運算-Cloud-Services-Overview" class="headerlink" title="雲端運算 Cloud Services Overview"></a>雲端運算 Cloud Services Overview</h1><p>雲端運算，是一種基於網際網路的資源使用方式，通過這種方式，共享的軟硬體資源和資訊可以按需求提供給電腦各種終端和其他裝置。簡單來說，從應用環境、資料、執行環境、中介程式、作業系統、伺服器、儲存硬體、網路到機房，可以依據從服務商提供的不同服務模式來使用。</p><h2 id="服務模式"><a href="#服務模式" class="headerlink" title="服務模式"></a>服務模式</h2><p>美國國家標準和技術研究院的雲端運算定義中明確了三種服務模式：</p><p><img src="https://i.imgur.com/mpWDLoP.png" alt="image"></p><ul><li><p>基礎架構即服務 Infrastructure as a Service（IaaS）</p><p>消費者使用「基礎運算資源」，如處理能力、儲存空間。消費者能掌控作業系統、儲存空間、已部署的應用程式及網路元件（如防火牆），但並不掌控雲端基礎架構。例如：Amazon AWS。</p><p>跟過去的傳統架設機房來相比，我們可以解釋成和服務商租賃雲端機房、伺服器、網路環境等等，而不用像過去需要在公司內部自行建置機房。</p></li></ul><ul><li><p>平台即服務 Platform as a Service（PaaS）</p><p>除 IaaS 的項目之外，消費者掌控運作應用程式的環境（也擁有主機部分掌控權），但並不掌控作業系統、硬體或運作的網路基礎架構。平台通常是應用程式基礎架構。就像 Microsoft Azure 所提供的 PaaS 服務，像 IaaS 一樣提供包括基礎架構服務器，存儲和網路，而且還包括開發環境、開發工具，商業智能服務，數據庫管理系統等。</p></li></ul><ul><li><p>軟體即服務 Software as a Service（SaaS）</p><p>消費者使用應用程式，但並不掌控作業系統、硬體或運作的網路基礎架構。是一種服務觀念的基礎，軟體服務供應商，以租賃的概念提供客戶服務，而非購買，比較常見的模式是提供一組帳號密碼。</p><p>舉 Google 為例，它提供免費的電子郵件、日曆等服務給大眾使用外，還針對企業推出服務層級協定較高的付費網路郵件服務，企業不需要另外採購應用電子郵件的軟體和硬體設備，只要訂購 Google 的 Gmail 服務，就能取代自建的電子郵件系統。</p><h1 id="亞馬遜雲端運算服務-Amazon-Web-Services-Overview"><a href="#亞馬遜雲端運算服務-Amazon-Web-Services-Overview" class="headerlink" title="亞馬遜雲端運算服務 Amazon Web Services Overview"></a>亞馬遜雲端運算服務 Amazon Web Services Overview</h1></li></ul><p>亞馬遜雲端運算服務（Amazon Web Services），由亞馬遜公司所建立的雲端運算平台，提供許多遠端 Web 服務。Amazon EC2 與 Amazon S3 都架構在這個平台上。在2002年7月首次公開運作，提供其他網站及客戶端的服務。</p><p>AWS 雲端產品服務：</p><p><img src="https://i.imgur.com/3rGHyJp.png" alt="image"></p><h1 id="AWS-免費試用帳戶"><a href="#AWS-免費試用帳戶" class="headerlink" title="AWS 免費試用帳戶"></a>AWS 免費試用帳戶</h1><p>AWS 有提供 12 個月免費試用帳號，每個月有限定的免費金額可以使用，大部分服務在到期後是不會直接中止的，但注意時間超過會被持續收費。</p><p>完整的使用限制與每月換算可使用額度，可以參考 <a href="https://aws.amazon.com/tw/free/?all-free-tier.sort-by=item.additionalFields.SortRank&all-free-tier.sort-order=asc#legal">AWS Free Tier (Non-expiring Offers)</a></p><h1 id="AWS-價格計算"><a href="#AWS-價格計算" class="headerlink" title="AWS 價格計算"></a>AWS 價格計算</h1><p>用多少算多少的概念，取決於使用的時間、單位、占用的資源與方式，如果整個服務都是在雲端內部自己存取的跟需要用到外部網路讓雲端資源可以給目前單位的本機電腦使用就會有不同的費用計算方式。</p><p>官方提供租用價格計算方式：</p><ul><li><p>每月成本簡易計算器（<a href="https://calculator.s3.amazonaws.com/index.html">AWS Simple Monthly Calculator</a>）</p></li><li><p>TCO 計算器（<a href="https://aws.amazon.com/tw/tco-calculator/">AWS TCO calculator</a>）</p></li></ul><blockquote><p>雲端比較：<a href="https://www.flexera.com/blog/cloud/2016/11/aws-vs-azure-vs-google-cloud-pricing-compute-instances/">AWS vs Azure vs Google Cloud Pricing: Compute Instances</a></p></blockquote><p>結論：以前大學學的雲端運算都忘了，默默再重新把把這些名詞通通記回來，改天來開通一下 AWS 的試用帳戶吧 owo！</p>]]></content>
    
    
    <categories>
      
      <category>Amazon Web Services</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AWS</tag>
      
      <tag>Saas</tag>
      
      <tag>Iaas</tag>
      
      <tag>Paas</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CoffeeScript 是什麼？</title>
    <link href="/2020/01/10/zyx0110/"/>
    <url>/2020/01/10/zyx0110/</url>
    
    <content type="html"><![CDATA[<h2 id="CoffeeScript"><a href="#CoffeeScript" class="headerlink" title="CoffeeScript"></a>CoffeeScript</h2><p><strong>CoffeeScript 是個能夠編譯成 JavaScript 的簡易語言</strong>。受到 Ruby、Python 與 Haskell 等語言的啟發，CoffeeScript 增強了 JavaScript 的簡潔性與可讀性。</p><h3 id="直接來個簡單的概觀看看"><a href="#直接來個簡單的概觀看看" class="headerlink" title="直接來個簡單的概觀看看"></a>直接來個簡單的概觀看看</h3><p>賦值：</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-comment"># 賦值：</span><br>number   = <span class="hljs-number">42</span><br>opposite = <span class="hljs-literal">true</span><br><br><span class="hljs-comment"># 條件式：</span><br>number = <span class="hljs-number">-42</span> <span class="hljs-keyword">if</span> opposite<br><br><span class="hljs-comment"># 函式：</span><br><span class="hljs-function"><span class="hljs-title">square</span> = <span class="hljs-params">(x)</span> -&gt;</span> x * x<br><br><span class="hljs-comment"># 陣列：</span><br>list = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]<br><br><span class="hljs-comment"># 物件：</span><br>math =<br>  root:   <span class="hljs-built_in">Math</span>.sqrt<br>  square: square<br>  cube:   <span class="hljs-function"><span class="hljs-params">(x)</span> -&gt;</span> x * square x<br><br><span class="hljs-comment"># 變參：</span><br><span class="hljs-function"><span class="hljs-title">race</span> = <span class="hljs-params">(winner, runners...)</span> -&gt;</span><br>  <span class="hljs-built_in">print</span> winner, runners<br><br><span class="hljs-comment"># 空值偵測：</span><br>alert <span class="hljs-string">&quot;I knew it!&quot;</span> <span class="hljs-keyword">if</span> elvis?<br><br><span class="hljs-comment"># 陣列推導：</span><br>cubes = (math.cube num <span class="hljs-keyword">for</span> num <span class="hljs-keyword">in</span> list)<br></code></pre></td></tr></table></figure><p>編譯成：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 賦值：</span><br><span class="hljs-keyword">var</span> cubes, list, math, num, number, opposite, race, square;<br><br>number = <span class="hljs-number">42</span>;<br><br>opposite = <span class="hljs-literal">true</span>;<br><br><span class="hljs-keyword">if</span> (opposite) &#123;<br>  <span class="hljs-comment">// 條件式：</span><br>  number = -<span class="hljs-number">42</span>;<br>&#125;<br><br><span class="hljs-comment">// 函式：</span><br>square = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x</span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> x * x;<br>&#125;;<br><br><span class="hljs-comment">// 陣列：</span><br>list = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>];<br><br><span class="hljs-comment">// 物件：</span><br>math = &#123;<br>  root: <span class="hljs-built_in">Math</span>.sqrt,<br>  square: square,<br>  cube: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> x * square(x);<br>  &#125;<br>&#125;;<br><br><span class="hljs-comment">// 變參：</span><br>race = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">winner, ...runners</span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> print(winner, runners);<br>&#125;;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> elvis !== <span class="hljs-string">&quot;undefined&quot;</span> &amp;&amp; elvis !== <span class="hljs-literal">null</span>) &#123;<br>  <span class="hljs-comment">// 空值偵測：</span><br>  alert(<span class="hljs-string">&quot;I knew it!&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">// 陣列推導：</span><br>cubes = (<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">var</span> i, len, results;<br>  results = [];<br>  <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>, len = list.length; i &lt; len; i++) &#123;<br>    num = list[i];<br>    results.push(math.cube(num));<br>  &#125;<br>  <span class="hljs-keyword">return</span> results;<br>&#125;)();<br></code></pre></td></tr></table></figure><h2 id="CoffeeScript-2"><a href="#CoffeeScript-2" class="headerlink" title="CoffeeScript 2"></a>CoffeeScript 2</h2><p>在 CoffeeScript 2 中，最大的改變莫過於輸出的 JavaScript 程式碼格式（現在會輸出成較新的 ES6 或 ES2015 風格）。</p><p>而 CoffeeScript 中的 <code>=&gt;</code> 亦會變成 JS 中的 <code>=&gt;</code>，且 CoffeeScript 的 class 也會等同於 JS 的 class 類別標籤…等。還有主要追加的新功能，像是：非同步函式和 JSX。</p><h3 id="非同步函式"><a href="#非同步函式" class="headerlink" title="非同步函式"></a>非同步函式</h3><p>ES2017 的非同步函式現在能夠透過 <code>await</code> 關鍵字進行使用，不需要額外使用 <code>async</code>，使得非同步函式在 CoffeeScript 中寫起來就像一般的函式。</p><p><code>yield return</code> 可以強迫函式成為一個產生器函式，而 <code>await return</code> 則能夠強迫讓一個函式成為非同步函式。</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span> (resolve) -&gt;<br><span class="hljs-built_in">window</span>.<span class="hljs-built_in">setTimeout</span> resolve, ms<br><br><span class="hljs-function"><span class="hljs-title">say</span> = <span class="hljs-params">(text)</span> -&gt;</span><br>  <span class="hljs-built_in">window</span>.speechSynthesis.cancel()<br>  <span class="hljs-built_in">window</span>.speechSynthesis.speak <span class="hljs-keyword">new</span> SpeechSynthesisUtterance text<br><br><span class="hljs-function"><span class="hljs-title">countdown</span> = <span class="hljs-params">(seconds)</span> -&gt;</span><br>  <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> [seconds.<span class="hljs-number">.1</span>]<br>    say i<br>    <span class="hljs-keyword">await</span> sleep <span class="hljs-number">1000</span> <span class="hljs-comment"># 等個一秒</span><br>  say <span class="hljs-string">&quot;Blastoff!&quot;</span><br><br>countdown <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>編譯成：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> countdown, say, sleep;<br><br>sleep = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">ms</span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">resolve</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">window</span>.setTimeout(resolve, ms);<br>  &#125;);<br>&#125;;<br><br>say = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">text</span>) </span>&#123;<br>  <span class="hljs-built_in">window</span>.speechSynthesis.cancel();<br>  <span class="hljs-keyword">return</span> <span class="hljs-built_in">window</span>.speechSynthesis.speak(<span class="hljs-keyword">new</span> SpeechSynthesisUtterance(text));<br>&#125;;<br><br>countdown = <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">seconds</span>) </span>&#123;<br>  <span class="hljs-keyword">var</span> i, j, ref;<br>  <span class="hljs-keyword">for</span> (i = j = ref = seconds; (ref &lt;= <span class="hljs-number">1</span> ? j &lt;= <span class="hljs-number">1</span> : j &gt;= <span class="hljs-number">1</span>); i = ref &lt;= <span class="hljs-number">1</span> ? ++j : --j) &#123;<br>    say(i);<br>    <span class="hljs-keyword">await</span> sleep(<span class="hljs-number">1000</span>); <span class="hljs-comment">// 等個一秒</span><br>  &#125;<br>  <span class="hljs-keyword">return</span> say(<span class="hljs-string">&quot;Blastoff!&quot;</span>);<br>&#125;;<br><br>countdown(<span class="hljs-number">3</span>);<br></code></pre></td></tr></table></figure><h3 id="JSX"><a href="#JSX" class="headerlink" title="JSX"></a>JSX</h3><p>JSX 是能夠帶有類 XML 元素結構的 JavaScript。雖然初期是為了 React 所設計的，但這並不是一個框架或者函式庫。</p><p>CoffeeScript 不需要任何的額外擴充套件或設定，就能夠支援類 XML 元素。XML 元素會被編譯並輸出成一般的 JSX 結果，就像 Babel 與 React JSX 的轉化。不過 CoffeeScript 並不會輸出用以呼叫 <code>React.createElement</code> 的函式，亦不會有任何與 React 和其他框架有關的程式碼。</p><p>就像 JSX 和 HTML 那樣，你可以使用 <code>&lt;</code> 與 <code>&gt;</code> 符號。你也能在 { 和 } 標籤中使用 CoffeeScript。為了避免編譯器錯誤，當 <code>&lt;</code> 和 <code>&gt;</code> 是用作「小於」或「大於」符號時，你應該透過空白來避免它們被誤認為 XML 標籤。所以你該使用 <code>i &lt; len</code> 而不是 <code>i&lt;len</code>。</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-function"><span class="hljs-title">renderStarRating</span> = <span class="hljs-params">(&#123; rating, maxStars &#125;)</span> -&gt;</span><br>  &lt;aside title=&#123;<span class="hljs-string">&quot;Rating: <span class="hljs-subst">#&#123;rating&#125;</span> of <span class="hljs-subst">#&#123;maxStars&#125;</span> stars&quot;</span>&#125;&gt;<br>    &#123;<span class="hljs-keyword">for</span> wholeStar <span class="hljs-keyword">in</span> [<span class="hljs-number">0.</span>..<span class="hljs-built_in">Math</span>.floor(rating)]<br>      &lt;Star className=<span class="hljs-string">&quot;wholeStar&quot;</span> key=&#123;wholeStar&#125; /&gt;&#125;<br>    &#123;<span class="hljs-keyword">if</span> rating % <span class="hljs-number">1</span> <span class="hljs-keyword">isnt</span> <span class="hljs-number">0</span><br>      &lt;Star className=<span class="hljs-string">&quot;halfStar&quot;</span> /&gt;&#125;<br>    &#123;<span class="hljs-keyword">for</span> emptyStar <span class="hljs-keyword">in</span> [<span class="hljs-built_in">Math</span>.ceil(rating)...maxStars]<br>      &lt;Star className=<span class="hljs-string">&quot;emptyStar&quot;</span> key=&#123;emptyStar&#125; /&gt;&#125;<br>  &lt;/aside&gt;<br></code></pre></td></tr></table></figure><p>編譯成：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript">  <span class="hljs-keyword">var</span> renderStarRating;<br><br>renderStarRating = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">&#123;rating, maxStars&#125;</span>) </span>&#123;<br>  <span class="hljs-keyword">var</span> emptyStar, wholeStar;<br>  <span class="hljs-keyword">return</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">aside</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&#123;</span>`<span class="hljs-attr">Rating:</span> $&#123;<span class="hljs-attr">rating</span>&#125; <span class="hljs-attr">of</span> $&#123;<span class="hljs-attr">maxStars</span>&#125; <span class="hljs-attr">stars</span>`&#125;&gt;</span></span><br><span class="xml">    &#123;(function() &#123;</span><br><span class="xml">    var i, ref, results;</span><br><span class="xml">    results = [];</span><br><span class="xml">    for (wholeStar = i = 0, ref = Math.floor(rating); (0 &lt;= ref ? i &lt; ref : i &gt; ref); wholeStar = 0 &lt;= ref ? ++i : --i) &#123;</span><br><span class="xml">      results.push(<span class="hljs-tag">&lt;<span class="hljs-name">Star</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;wholeStar&quot;</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&#123;wholeStar&#125;</span> /&gt;</span>);</span><br><span class="xml">    &#125;</span><br><span class="xml">    return results;</span><br><span class="xml">  &#125;)()&#125;</span><br><span class="xml">    &#123;(rating % 1 !== 0 ? <span class="hljs-tag">&lt;<span class="hljs-name">Star</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;halfStar&quot;</span> /&gt;</span> : void 0)&#125;</span><br><span class="xml">    &#123;(function() &#123;</span><br><span class="xml">    var i, ref, ref1, results;</span><br><span class="xml">    results = [];</span><br><span class="xml">    for (emptyStar = i = ref = Math.ceil(rating), ref1 = maxStars; (ref &lt;= ref1 ? i &lt; ref1 : i &gt; ref1); emptyStar = ref &lt;= ref1 ? ++i : --i) &#123;</span><br><span class="xml">      results.push(<span class="hljs-tag">&lt;<span class="hljs-name">Star</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;emptyStar&quot;</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&#123;emptyStar&#125;</span> /&gt;</span>);</span><br><span class="xml">    &#125;</span><br><span class="xml">    return results;</span><br><span class="xml">  &#125;)()&#125;</span><br><span class="xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">aside</span>&gt;</span></span>;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Markup Language</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CoffeeScript</tag>
      
      <tag>javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Haml 是什麼？</title>
    <link href="/2020/01/09/zyx0109/"/>
    <url>/2020/01/09/zyx0109/</url>
    
    <content type="html"><![CDATA[<h2 id="Haml（HTML-Abstraction-Markup-Language"><a href="#Haml（HTML-Abstraction-Markup-Language" class="headerlink" title="Haml（HTML Abstraction Markup Language)"></a>Haml（HTML Abstraction Markup Language)</h2><p>HTML 抽象標記式語言是一種模板系統，它可以避免在 Web 文件中內嵌代碼，使 HTML 更簡易和乾淨</p><p>Haml 為 HTML 中提供了一些動態內容的靈活性。為執行 Haml 代碼，檔案需要採用 .haml 副檔名。這些檔案類似 .erb 檔案，這有助於在開發網路應用程式時嵌入 Ruby 代碼。在解析代碼注釋時，Haml 採用與 Ruby 1.9 或之後版本相同的規則</p><p>Haml 只能理解相容 ASCII 的編碼（例如UTF-8），而不能理解不相容ASCII的UTF-16與UTF-32</p><h3 id="來個-Hello-World-例子"><a href="#來個-Hello-World-例子" class="headerlink" title="來個 Hello-World 例子"></a>來個 Hello-World 例子</h3><p>HTML:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sample&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;welcome&quot;</span> &gt;</span> Hello, World!!! <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p>Haml:</p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haml"><span class="hljs-tag">%<span class="hljs-selector-tag">p</span>&#123;<span class="hljs-attr">:class</span> =&gt; <span class="hljs-string">&quot;sample&quot;</span>, <span class="hljs-attr">:id</span> =&gt; <span class="hljs-string">&quot;welcome&quot;</span>&#125;</span> Hello, World!!!<br></code></pre></td></tr></table></figure><p>又可以變成：</p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haml"><span class="hljs-tag">%<span class="hljs-selector-tag">p</span><span class="hljs-selector-class">.sample</span><span class="hljs-selector-id">#welcome</span></span> Hello, World!!!<br></code></pre></td></tr></table></figure><p>類似 eRuby，Haml也可以存取局部變數（在同一個檔案中以Ruby代碼聲明）</p><ul><li><p>file: app/controllers/messages_controller.rb</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MessagesController</span> &lt; ApplicationController</span><br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span></span><br>    <span class="hljs-variable">@message</span> = <span class="hljs-string">&quot;Hello, World!!!&quot;</span><br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure></li><li><p>file: app/views/messages/index.html.haml</p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs haml">#welcome<br><span class="hljs-tag">  %<span class="hljs-selector-tag">p</span></span>= @message<br></code></pre></td></tr></table></figure><p>將得到：</p><ul><li><p>Haml 編譯成 HTML</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;welcome&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span> Hello, World!!!<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="再來跟跟習慣的-eRuby-erb-比較看看"><a href="#再來跟跟習慣的-eRuby-erb-比較看看" class="headerlink" title="再來跟跟習慣的 eRuby(erb) 比較看看"></a>再來跟跟習慣的 eRuby(erb) 比較看看</h3></li><li><p>Haml</p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs haml">#content<br>  .left.column<br><span class="hljs-tag">    %<span class="hljs-selector-tag">h2</span></span> Welcome to our site!<br><span class="hljs-tag">    %<span class="hljs-selector-tag">p</span></span>= print_information<br>  .right.column<br>    =<span class="ruby"> render <span class="hljs-symbol">:partial</span> =&gt; <span class="hljs-string">&quot;sidebar&quot;</span></span><br></code></pre></td></tr></table></figure></li><li><p>ERB</p><figure class="highlight erb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs erb"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&#x27;content&#x27;</span>&gt;</span></span><br><span class="xml">  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;left column&#x27;</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Welcome to our site!<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>&lt;%=</span><span class="ruby"> print_information </span><span class="xml">%&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml">  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;right column&quot;</span>&gt;</span></span><br><span class="xml">    &lt;%=</span><span class="ruby"> render <span class="hljs-symbol">:partial</span> =&gt; <span class="hljs-string">&quot;sidebar&quot;</span> </span><span class="xml">%&gt;</span><br><span class="xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="讓專案執行-haml-檔案"><a href="#讓專案執行-haml-檔案" class="headerlink" title="讓專案執行 haml 檔案"></a>讓專案執行 haml 檔案</h3></li></ul><p>安裝 Haml gem：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">gem <span class="hljs-string">&#x27;haml&#x27;</span>, <span class="hljs-string">&#x27;~&gt; 4.0&#x27;</span>, <span class="hljs-string">&#x27;&gt;= 4.0.7&#x27;</span><br></code></pre></td></tr></table></figure><blockquote><p><a href="https://rubygems.org/gems/haml/versions/4.0.7?locale=zh-TW">Rubygem.org</a></p></blockquote></li></ul><h2 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h2><p>  其實如果有接觸過 pug / sass 這類的話，基本上再來看就會發現整體很熟悉，簡單的規則歸類以下：</p><ol><li> &lt;h1&gt;&lt;/h1&gt; 省略 <code>結尾</code>、 <code>大於小於</code> 變成 %h1</li><li> class / id 將以 <code>.</code> / <code>#</code> 來代表</li><li> &lt;%= %&gt; 將直接以 <code>=</code> 來代表 </li><li> &lt;% %&gt; 將直接以 <code>-</code> 來代表</li></ol>]]></content>
    
    
    <categories>
      
      <category>Markup Language</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Ruby on Rails</tag>
      
      <tag>html</tag>
      
      <tag>Haml</tag>
      
      <tag>erb</tag>
      
      <tag>gem</tag>
      
      <tag>eRuby</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>環境架設 macOS</title>
    <link href="/2020/01/06/zyx0107/"/>
    <url>/2020/01/06/zyx0107/</url>
    
    <content type="html"><![CDATA[<h1 id="環境架設-macOS"><a href="#環境架設-macOS" class="headerlink" title="環境架設 macOS"></a>環境架設 macOS</h1><p>這兩天上班架設環境發現一些問題，重新灌了好幾次，於是就想說來把所有的問題都列下來，這樣也好等問題遇到也可以重新來看看ouo</p><h2 id="Homebrew"><a href="#Homebrew" class="headerlink" title="Homebrew"></a>Homebrew</h2><p>  Homebrew 是 Mac OSX 上的的套件管理工具，是方便安裝管理 OSX 裡需要用到但預設沒安裝的套件。Homebrew 的安裝只需要打開終端機輸入安裝指令</p><p>  安裝指令：</p>  <figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs zsh">/usr/bin/ruby -e <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span><br></code></pre></td></tr></table></figure><p>  確認是否有安裝成功：</p>  <figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs zsh">brew --version<br></code></pre></td></tr></table></figure><h2 id="終端機-iTerm2"><a href="#終端機-iTerm2" class="headerlink" title="終端機 iTerm2"></a>終端機 iTerm2</h2><p>  iTerm2 是一個可以用來取代 MAC 原生終端機的工具，只需到官網下載，或在 terminal 中輸入以下指令，直接透過 homebrew 安裝</p><p>  安裝指令：</p>  <figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs zsh"><span class="hljs-comment"># 如果你從來沒有用過 brew cask 的話需要先跑這行</span><br>brew tap caskroom/cask<br><br><span class="hljs-comment"># 安裝 iTerm2</span><br>brew cask instal iterm2<br></code></pre></td></tr></table></figure><blockquote><h2 id="iTerm2-主題配色"><a href="#iTerm2-主題配色" class="headerlink" title="iTerm2 主題配色"></a>iTerm2 主題配色</h2></blockquote><p>  可以參考以下這個連結來進行主題配色，綜合整篇，我整理我有使用的指令配色等等如下：</p><h3 id="安裝-powerline-font"><a href="#安裝-powerline-font" class="headerlink" title="安裝 powerline font"></a>安裝 powerline font</h3><p>  因為我們要用的 theme 會用一些特殊 icon，所以 iTerm2 選用的字型必需要支援這種特殊 icon font，沒有安裝這個 icon 的話，符號會變成正方形包問號的框框</p><p>  安裝指令：</p>  <figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs zsh"><span class="hljs-comment"># 安裝指令</span><br>brew cask install font-sourcecodepro-nerd-font<br></code></pre></td></tr></table></figure><p>  裝完後，記得修改 iTerm2 字型。改成 SauceCodePro Nerd Font<br>  設定路徑：<code>Preferences</code> &gt; <code>Profiles</code> &gt; <code>Text</code> &gt; <code>Change Font</code> &gt; <code>SauceCodePro Nerd Font</code></p><h2 id="安裝-zsh"><a href="#安裝-zsh" class="headerlink" title="安裝 zsh"></a>安裝 zsh</h2><p>  zsh 是個取代 bash 的強大 shell，比 bash 好用幾百倍。這篇文章介紹的 command line 設定一定要跑在 zsh。沒用過的一定要試一下</p><p>  安裝指令：</p>  <figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs zsh"><span class="hljs-comment"># 安裝指令</span><br>brew install zsh<br></code></pre></td></tr></table></figure><p>  設定為你的預設終端機為 zsh：</p>  <figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs zsh">sudo sh -c <span class="hljs-string">&quot;echo <span class="hljs-subst">$(which zsh)</span> &gt;&gt; /etc/shells&quot;</span> <br>chsh -s $(<span class="hljs-built_in">which</span> zsh)<br></code></pre></td></tr></table></figure><h2 id="安裝-oh-my-zsh"><a href="#安裝-oh-my-zsh" class="headerlink" title="安裝 oh-my-zsh"></a>安裝 oh-my-zsh</h2><p>  原始的 zsh設定太難搞，所以來安裝 framework oh-my-zsh。現在幾乎所有 zsh 好用的工具都有支援 oh-my-zsh，所以裝就對惹…</p><p>  安裝指令：</p>  <figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs zsh">sh -c <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>&quot;</span><br></code></pre></td></tr></table></figure><blockquote><h2 id="zsh-theme-powerlevel9k"><a href="#zsh-theme-powerlevel9k" class="headerlink" title="zsh theme powerlevel9k"></a>zsh theme powerlevel9k</h2></blockquote><p>  安裝 powerlevel9k ：</p>  <figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs zsh">git <span class="hljs-built_in">clone</span> https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k<br></code></pre></td></tr></table></figure><p>  更改 ZSH_THEME 的主題：</p>  <figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs zsh"><span class="hljs-comment"># 透過 vscode 打開檔案並編輯 code ~/.zshrc</span><br>ZSH_THEME=”ZSH_THEME=<span class="hljs-string">&quot;powerlevel9k/powerlevel9k&quot;</span>” <br></code></pre></td></tr></table></figure><p>  重新執行以下指令才會生效：</p>  <figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs zsh"><span class="hljs-built_in">exec</span> <span class="hljs-variable">$SHELL</span><br></code></pre></td></tr></table></figure><p>  更改一些我推薦的內容：</p>  <figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs zsh"><span class="hljs-comment"># command line 左邊圖示 + 版控</span><br>POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(dir vcs) <span class="hljs-comment"># &lt;= left prompt 設了 &quot;dir&quot; / &quot;vcs&quot; 版本控制的資訊</span><br><span class="hljs-comment"># command line 右邊時間圖示</span><br>POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(time) <span class="hljs-comment"># &lt;= right prompt 設了 &quot;time&quot;</span><br></code></pre></td></tr></table></figure><hr><h1 id="好用的工具"><a href="#好用的工具" class="headerlink" title="好用的工具"></a>好用的工具</h1><ol><li><h2 id="Spectacle"><a href="#Spectacle" class="headerlink" title="Spectacle"></a><a href="https://www.spectacleapp.com/">Spectacle</a></h2><p> mac 版本的分割視窗，可以設定在哪個 app 中啟用，快速鍵也都能客製化，習慣把 app 視窗全螢幕，或者是切割螢幕左右查找文件的好幫手</p></li><li><h2 id="Alfred-4"><a href="#Alfred-4" class="headerlink" title="Alfred 4"></a><a href="https://www.alfredapp.com/">Alfred 4</a></h2><p> 跟內建的 Spotlight 搜尋其實滿像的，不過個人覺得好用些，如果查詢不到的資料就可以透過瀏覽器開啟（Spotlight 沒有此項功能，單純搜尋本機的檔案）</p></li><li><h2 id="Dash"><a href="#Dash" class="headerlink" title="Dash"></a><a href="https://kapeli.com/dash">Dash</a></h2><p> 找程式語法的app，同時軟體也支援 Stackoverflow，不管是框架、語法，基本上你能想到的東西都能查，應該說最常用到的工具，前提是你要知道那個語法XDDD</p></li><li><h2 id="Sourcetree"><a href="#Sourcetree" class="headerlink" title="Sourcetree"></a><a href="https://www.sourcetreeapp.com/">Sourcetree</a></h2><p> 看 Git branch / commit 圖像工具，同時也可以在 app 按按鈕完成 merge / pull 指令，有時候輔助整體看 branch / commit 的好工具</p></li><li><h2 id="Postman"><a href="#Postman" class="headerlink" title="Postman"></a><a href="https://www.getpostman.com/">Postman</a></h2><p> 測試 API 的工具，還有出 Postwoman 也是相同的～</p></li><li><h2 id="Quiver-APP-Store-付費軟體"><a href="#Quiver-APP-Store-付費軟體" class="headerlink" title="Quiver (APP Store 付費軟體)"></a><a href="https://apps.apple.com/tw/app/quiver-take-better-notes/id866773894?mt=12">Quiver (APP Store 付費軟體)</a></h2><p> 之前用 <code>Typora</code> 也是大推，不過缺點是沒有同步功能，且想同時在 mac / Pad / Iphone 下使用基本上是不可能，這款付費軟體一次就買斷，寫寫文章也好用，搭配 Dropbox 可以直接備份同步</p></li><li><h2 id="TablePlus"><a href="#TablePlus" class="headerlink" title="TablePlus"></a><a href="https://tableplus.com/">TablePlus</a></h2><p> 導入 DB 的好工具，目前工作專案才用，之後有什麼心得會補上ouo</p></li></ol><hr><h1 id="從-rvm-切換到-rbenv"><a href="#從-rvm-切換到-rbenv" class="headerlink" title="從 rvm 切換到 rbenv"></a>從 rvm 切換到 rbenv</h1><p>說一下原因好惹，因為發現工作專案要 Ruby 2.3.7 版本，原本的電腦為 2.6.3，在新版 2.6.3 的狀況下，把專案 clone 下來之後，跑 bundle 正常，不過  rails s 會噴錯滿正常的，因為專案內容中的 images 是 2.3.7 版本</p><p>因此透過 <code>rvm</code> 安裝 2.3.7，結果跑 bundle 噴出以下錯誤：</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs zsh">Could not load OpenSSL.<br>You must recompile Ruby with OpenSSL support or change the sources <span class="hljs-keyword">in</span> your Gemfile from <span class="hljs-string">&#x27;https&#x27;</span> to <span class="hljs-string">&#x27;http&#x27;</span>. Instructions<br><span class="hljs-keyword">for</span> compiling with OpenSSL using RVM are available at http://rvm.io/packages/openssl.<br></code></pre></td></tr></table></figure><p>去安裝 openssl 後</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs zsh">~ brew install openssl                                                                                  <br>Warning: openssl@1.1 1.1.1d is already installed and up-to-date<br>To reinstall 1.1.1d, run `brew reinstall openssl@1.1`<br></code></pre></td></tr></table></figure><p>經過研究之後，發現好像踩到地雷了… 所以忍痛割愛（誤</p><h2 id="清理-rvm"><a href="#清理-rvm" class="headerlink" title="清理 rvm"></a>清理 rvm</h2><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs zsh">rvm implode<br>sudo rm -rf ~/.rvm<br></code></pre></td></tr></table></figure><h2 id="安裝-rbenv"><a href="#安裝-rbenv" class="headerlink" title="安裝 rbenv"></a>安裝 rbenv</h2><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs zsh">brew doctor<br>brew update<br>brew install rbenv<br>brew install ruby-build<br></code></pre></td></tr></table></figure><h2 id="設置-rbenv-的環境"><a href="#設置-rbenv-的環境" class="headerlink" title="設置 rbenv 的環境"></a>設置 rbenv 的環境</h2><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs zsh"><span class="hljs-comment"># Unubtu请放到 ~/.bashrc 里, zsh用戶是 ~/.zshrc</span><br><span class="hljs-built_in">export</span> PATH=<span class="hljs-string">&quot;/Users/andy/.rbenv/shims:<span class="hljs-variable">$PATH</span>&quot;</span> <span class="hljs-built_in">eval</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(rbenv init -)</span>&quot;</span><br></code></pre></td></tr></table></figure><h2 id="安裝-Ruby"><a href="#安裝-Ruby" class="headerlink" title="安裝 Ruby"></a>安裝 Ruby</h2><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs zsh">rbenv install --list         <span class="hljs-comment"># 列出所有 ruby 版本</span><br>rbenv install 2.3.7          <span class="hljs-comment"># 安装 2.3.7</span><br></code></pre></td></tr></table></figure><h2 id="列出版本"><a href="#列出版本" class="headerlink" title="列出版本"></a>列出版本</h2><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs zsh">rbenv versions               <span class="hljs-comment"># 列出安装的版本</span><br>rbenv version                <span class="hljs-comment"># 列出正在使用的版本</span><br></code></pre></td></tr></table></figure><h2 id="设置版本"><a href="#设置版本" class="headerlink" title="设置版本"></a>设置版本</h2><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs zsh">rbenv global 2.3.7           <span class="hljs-comment"># 預設使用 2.3.7</span><br>rbenv shell 2.3.7            <span class="hljs-comment"># 目前的 shell 使用 2.3.7</span><br></code></pre></td></tr></table></figure><h2 id="重啟"><a href="#重啟" class="headerlink" title="重啟"></a>重啟</h2><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs zsh">rbenv <span class="hljs-built_in">rehash</span>                 <span class="hljs-comment"># 切換ruby 版本和執行 bundle 後須執行的指令</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>環境架設macOS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>rvm</tag>
      
      <tag>rbenv</tag>
      
      <tag>zsh</tag>
      
      <tag>Oh-my-zsh</tag>
      
      <tag>iTrem2</tag>
      
      <tag>macOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2019 面試分享</title>
    <link href="/2019/12/29/Interview2019/"/>
    <url>/2019/12/29/Interview2019/</url>
    
    <content type="html"><![CDATA[<h1 id="2019-面試分享-11-13-12-24"><a href="#2019-面試分享-11-13-12-24" class="headerlink" title="2019 面試分享(11/13-12/24)"></a>2019 面試分享(11/13-12/24)</h1><ul><li><a href="https://starrocket.io/">三創基金會</a></li><li><a href="https://www.vysioneer.com/">Vysioneer 醫隼智慧</a></li><li><a href="http://www.square1research.com/">SquareOne</a></li><li><a href="https://aktsk.com.tw/">Akatsuki</a></li><li><a href="https://www.104.com.tw/company/a5hh36w">合勤集團科技</a></li><li><a href="https://www.104.com.tw/company/18m9x6ah?jobsource=jolist_a_relevance">T客邦</a></li><li><a href="https://www.104.com.tw/company/oe84aqo">德義資訊</a></li><li><a href="https://www.104.com.tw/company/1a2x6biidu">Pinkoi</a></li><li><a href="https://www.104.com.tw/company/1a2x6bjyqi">天旭國際科技</a></li><li><a href="https://www.104.com.tw/company/1a2x6bk0hw">塞席爾商悠福科技</a></li><li><a href="https://www.104.com.tw/company/cqcrfnk">ThinkPower – 昕力資訊</a></li></ul><p>(公司排列順序以面試時間排列，以下將依照前、後和全端來分類)</p><hr><h1 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h1><h2 id="三創基金會"><a href="#三創基金會" class="headerlink" title="三創基金會"></a>三創基金會</h2><p>鴻海集團下的基金會，技術主管兼副執行長Lawrence是ROR的前輩（第二屆的評審之一），很喜歡轉職的人，認為人的企圖心比你現在的實力重要，在意你是不是真的想變強，選擇信任他的人為主，是個認為前端會是這個世代的大耀進，團隊勇於嘗試用新的技術（EX: graphql、nuxtjs、now…），工程師人數就是副執行長，他的過往作品就應該不用多說了…</p><ul><li><p>面試問題：主要都在聊天了解個人特質居多，大多為軟性問題</p><ul><li>document.querySelectorAll / document.querySelector 的差別</li><li>你未來想成為什麼樣的人？</li><li>你認為怎樣才是強的人？</li><li>等等… 聊天聊到忘記惹XD</li></ul></li><li><p>工作環境：四顆星，三創11F，工作環境辦公室雖然小，但外面是一個咖啡廳～不一定要在辦公室內工作</p></li><li><p>工作內容：不太方便說，大多工作型態為remote，副執行長比較少在辦公室出現</p></li><li><p>投遞履歷方式(自)：<a href="https://github.com/f2etw/jobs/issues/585">https://github.com/f2etw/jobs/issues/585</a></p></li></ul><blockquote><p>結果：GET</p></blockquote><h2 id="Vysioneer-醫隼智慧"><a href="#Vysioneer-醫隼智慧" class="headerlink" title="Vysioneer 醫隼智慧"></a>Vysioneer 醫隼智慧</h2><p>醫療產業的公司，基本上跟台大醫院合作，因此地點就在五倍附近的君悅排骨旁的大樓樓上，工程師主要為兩塊，大多為寫演算法的工程師(忘記多少人了好像10個人左右，都在寫醫療的數據等等)，另外處理前端的工程師只有一位Senior，包辦官網、醫療器材影像處理、舉辦大型研討會需要小的Demo作品等等。</p><ul><li><p>面試問題：以Demo Project的方式下去問問題，舉例來說</p><ul><li>你有用過 ROR 的 <code>cocoon</code> 這個 gem，那如果你用JS下去寫該如何實作？</li><li>透過 Devise 及 Ouath2 來處理使用者登入問題，你可以解釋一下整個的流程嗎？</li><li>Cookie / Session 的差別</li><li>過往的工作經驗</li><li>碩士論文也問ww</li><li>等等…（不過沒有問到框架問題 ex：React）</li></ul></li><li><p>工作環境：三顆星，空間為一層的大樓辦公室，出入的人大多都穿西裝</p></li><li><p>工作內容：大致上就是分擔主管的工作，畢竟是新創且只有他一個人，像是花兩個禮拜處理官方網站、之後處理實作一些小作品讓公司在研討會可以給人實作。</p></li><li><p>面試時間：只有一階段、也沒有人資面試(Senior工程師來面試而已)，約莫2.5hr左右～</p></li><li><p>遞履歷方式(自)：<a href="https://github.com/f2etw/jobs/issues/605">https://github.com/f2etw/jobs/issues/605</a></p></li></ul><blockquote><p>結果：感謝信，主要原因為需要找更有經驗的Junior</p></blockquote><h2 id="天旭國際科技-101博弈業"><a href="#天旭國際科技-101博弈業" class="headerlink" title="天旭國際科技(101博弈業)"></a>天旭國際科技(101博弈業)</h2><p><del>博弈業就大概那樣子…不太好說～博弈業就大概那樣子…不太好說～</del></p><ul><li><p>面試問題：總共五個部分(JS、React、CSS、Web Tech、Git)</p><ol><li>JS<ul><li>Promises 之於 Callbacks 的優劣？</li><li>你曾經用過 Async/Await 嗎？它的好處是什麼？</li><li>你曾經用過 Arrow Function 嗎？它與一般 <code>function() &#123;&#125;</code>的差異是什麼？</li><li>請解釋 Closure 是什麼？</li><li>請解釋 Hoisting 是什麼？</li><li>請問你使用過 Array.prototype.filter 嗎？跟 map / reduce 的差異是什麼？</li><li>你曾經用過哪些 Bundle 工具？為什麼會選擇它？</li></ul></li><li>React<ul><li>請問 State / Props 的使用時機是什麼？</li><li>請問 Function Component / Class Component 的使用時機是什麼？</li><li>請問什麼時候需要用到 PureComponent？</li><li>你會如何預防非必要的 React 元件渲染？</li><li>你曾經用過 Redux 嗎？請解釋它的優/缺點。</li><li>你知道 RenderProps / HighOrderComponent 是什麼嗎？他們的使用時機？</li></ul></li><li>CSS<ul><li>你曾經使用過哪些 UI Framework 呢？他們的優缺點是什麼？你為什麼會選擇它？</li><li>請解釋 CSS 的 Box Model</li><li>請解釋 CSS 的 Flexbox</li><li>請描述三種垂直置中的方式</li></ul></li><li>Web Tech<ul><li>請解釋 RWD 是什麼和實作方式。</li><li>請解釋 PWA 是什麼和實作方式。</li></ul></li><li>Git<ul><li>你曾經在多人協作的專案中使用過 Git 嗎？</li><li>你曾經使用過任何一個 Git Flow 嗎？請描述他們的優缺點</li><li>你會怎麼解決 ConFlict 呢？</li><li>什麼情況下你會用到 rebase 指令？</li></ul></li></ol></li><li><p>工作環境：五顆星，在101有兩層，一層大概一百多人左右…</p></li><li><p>工作內容：你知道的</p></li><li><p>面試時間：人資介紹公司1HR + 面談考試2HR，約莫3HR</p></li><li><p>投遞履歷方式(公司人資104訊息)：<a href="https://www.104.com.tw/job/5vzsd?jobsource=company_job">https://www.104.com.tw/job/5vzsd?jobsource=company_job</a></p></li></ul><blockquote><p>結果：GET</p></blockquote><h2 id="ThinkPower-昕力"><a href="#ThinkPower-昕力" class="headerlink" title="ThinkPower 昕力"></a>ThinkPower 昕力</h2><p>類似接案公司，主力為數位金融Chatbox產品，公司有四個項目在做，一個是大型接案、小型接案、自有產品、一個忘記惹ouo，不過面試主管居然找了美術的部門來，多在問過往有沒有與UI/UX的經驗等等，主要的產品像是台新銀行的 Richart 、阿發…等等</p><ul><li><p>面試問題：總共兩個部分(邏輯測驗 + JS測驗)</p><ol><li><p>邏輯測驗(15mins)</p><ul><li>選擇*10<ul><li>Ex: 數列 4, 6, 9, 13, 18，下個數字是多少？</li></ul></li><li>多選*5<ul><li>Ex: 有幾座塔是矮人，而有幾個矮人是碼頭工人，以下選項何者正確？ </li></ul></li></ul></li><li><p>JS測驗(20mins)</p><ul><li>選擇*15<ul><li>好好看 Kuro 大大的 008 百分之百都在考前幾章的東西</li></ul></li></ul></li></ol></li><li><p>工作環境：五顆星，在內湖仁寶電腦旁邊大樓，辦公室挺美的</p></li><li><p>工作內容：處理接案內容，依照 UI/UX設計師的 Sketch 設計稿來切版之類的～</p></li><li><p>面試時間：先考紙筆邏輯測驗 + JS測驗後，與 UI/UX設計師介紹，再跟人資面談，約莫2.5HR</p></li><li><p>投遞履歷方式(公司人資104訊息)：<a href="https://www.104.com.tw/job/60fal?jobsource=company_job">https://www.104.com.tw/job/60fal?jobsource=company_job</a></p></li></ul><blockquote><p>結果：GET</p></blockquote><hr><h1 id="後端"><a href="#後端" class="headerlink" title="後端"></a>後端</h1><h2 id="Akatsuki-Taiwan-曉數碼-手遊"><a href="#Akatsuki-Taiwan-曉數碼-手遊" class="headerlink" title="Akatsuki Taiwan 曉數碼(手遊)"></a>Akatsuki Taiwan 曉數碼(手遊)</h2><p>後端是ROR，流量非常大的日商遊戲產業公司，稍微去官網大概就知道它們的手遊產品有哪兩個～面試人資不會介紹公司，他們認為你應該先做好功課，有多麼想要近來這間公司才是重點（英文面試），下一關技術主管也是大大，主要是系統維運工程師，整體面談給人的感覺偏差。</p><ul><li><p>面試問題：</p><ul><li>可以參考小菜的文章 <a href="https://github.com/River-Ye">https://github.com/River-Ye</a></li></ul></li><li><p>工作環境：五顆星，新創的概念，很～美</p></li><li><p>工作內容：系統工程師，維護遊戲使用者的資料等等，開發手遊功能，像是轉蛋的概念</p></li><li><p>面試時間：人資1.5hr + 技術面談1.5hr，約莫3hr左右</p></li><li><p>投遞履歷方式(快速面試)</p></li></ul><blockquote><p>結果：感謝信</p></blockquote><h2 id="Pinkoi"><a href="#Pinkoi" class="headerlink" title="Pinkoi"></a>Pinkoi</h2><p>後端是python，人資面試相當親切，主要就是文創的電商平台，後端的面試主管剛好是我的學長，據說裡面有兩個python的大神，另外公司也就在228公園旁邊而已，離五倍距離基本上等於沒有，結束還有小禮物（唯一一個TT</p><ul><li><p>面試問題：</p><ul><li>leetcode * 2，大概都是簡單~中等的題目 ( Ex：ord() )，兩題的內容會再延伸為白板題</li><li>SQL * 2，概念是要考會不會用關聯表，沒有ORM的方式下如何 join 兩個表單</li><li>介紹一下資料結構，何謂陣列、Object、這類型等等…</li><li>常用的 Git 指令 *3</li></ul></li><li><p>工作環境：五顆星，非常美</p></li><li><p>工作內容：後端工程師，電商平台</p></li><li><p>面試時間：紙筆測驗0.5hr + 人資0.5hr + 技術面談1hr(有白板題)，約莫2hr左右</p></li><li><p>投遞履歷方式(自)：<a href="https://www.pinkoi.com/about/careers#backend-engineer">https://www.pinkoi.com/about/careers#backend-engineer</a></p></li></ul><blockquote><p>結果：感謝信</p></blockquote><hr><h1 id="全端"><a href="#全端" class="headerlink" title="全端"></a>全端</h1><h2 id="SquareOne"><a href="#SquareOne" class="headerlink" title="SquareOne"></a>SquareOne</h2><p>老闆接下一些國外的案子，此外前端框架主要是 React，裡頭的 Senior 大大非常強，性質主要是投資風險的平台，後端全端都要寫，個人覺得老闆的對談非常好，雖然是個小公司，但整體面談分數算這幾間滿高的。</p><ul><li><p>面試問題：</p><ul><li>主要以 DemoProject 來問問題居多</li><li>透過 fb/google 做登入，如果換信箱該如何處理？</li><li>如果想要自己手刻一個 CSS 框架，該如何實作？</li></ul></li><li><p>工作環境：四顆星，cowork 的小公司，整體氣氛滿好的我認為</p></li><li><p>工作內容：全端工程師，前端技術只要是 React</p></li><li><p>面試時間：聊天0.5hr(全英) + Senior技術面談1hr，老闆0.5hr，約莫2.5hr左右</p></li><li><p>投遞履歷方式(快速面試)</p></li></ul><blockquote><p>結果：感謝信，被好朋友幹掉惹ouo</p></blockquote><h2 id="合勤集團科技"><a href="#合勤集團科技" class="headerlink" title="合勤集團科技"></a>合勤集團科技</h2><p>在新竹園區的傳統硬體大公司，主要多能接觸到AWS的部分，有80%的時間都在接觸後端打API之類的，前端偶爾會有網頁要稍微改一下，多為處理較複雜的商業邏輯</p><ul><li><p>面試問題：</p><ul><li>多在問 DemoProject 居多</li><li>必須對 API 的操作跟方式很熟悉</li></ul></li><li><p>工作環境：三顆星，傳統大公司</p></li><li><p>工作內容：全端工程師</p></li><li><p>面試時間：技術面談2hr，約莫2hr左右</p></li><li><p>投遞履歷方式(快速面試)</p></li></ul><blockquote><p>結果：GET</p></blockquote><h2 id="T客邦"><a href="#T客邦" class="headerlink" title="T客邦"></a>T客邦</h2><p>城邦集團底下公司，主要有四個產品(Ｔ客邦、MF變型男、T17)，包含三個論壇以及之後要開發的一個平台，裡面有一個大大 + 一個PM + 一個Senior，整體面試都挺和善，不過要同時經營三個平台的維護加上新平台的開發，新平台的開發前後台的是 React 框架，屬於電商、Ecommerce的平台</p><ul><li><p>面試問題：考卷共五張，前端 / 後端 / Git / Web Tech / 雲端</p><ul><li>一個小時的紙筆測驗(考卷五張)</li><li>題目有點多… 當初忘記拍下來了ouo</li><li>雲端這部分我都空白，單純只會 Heroku 的話基本上都看不懂，唯一看得懂 何謂 redis 而已</li></ul></li><li><p>工作環境：三顆星，傳統小公司</p></li><li><p>工作內容：全端工程師</p></li><li><p>面試時間：紙筆面試*5張1hr  + 技術面談2hr，約莫3hr左右</p></li><li><p>投遞履歷方式(快速面試)</p></li></ul><blockquote><p>結果：GET</p></blockquote><h2 id="德義資訊"><a href="#德義資訊" class="headerlink" title="德義資訊"></a>德義資訊</h2><p>爆炸雷，叫你去學 Java，底下就不用看了</p><ul><li>面試問題：略</li><li>工作環境：兩顆星，傳統公司那樣子</li><li>工作內容：接樂天的案子，在裡面學JAVA？</li><li>面試時間：筆試1hr + 技術面談1.5hr，約莫2.5hr左右</li><li>投遞履歷方式(公司人資104訊息)：<a href="https://www.104.com.tw/company/oe84aqo">https://www.104.com.tw/company/oe84aqo</a></li></ul><blockquote><p>結果：GET</p></blockquote><h2 id="塞席爾商悠福科技"><a href="#塞席爾商悠福科技" class="headerlink" title="塞席爾商悠福科技"></a>塞席爾商悠福科技</h2><p>小雷，公司小又舊，人非常奇怪。主要在做下廣告的公司，包含 fb/google/SEO 這塊等等…雖然主管問問題都很到位，不管是從前端到後端，但是整體公司氣氛有點詭異，不打卡且要來公司不來都可以</p><ul><li>面試問題：略</li><li>工作環境：一顆星，很小又很破舊</li><li>工作內容：廣告分析的公司，前端要寫Vue</li><li>面試時間：技術面談1.5hr，白板題0.5hr(遞迴數列)，約莫2hr左右</li><li>投遞履歷方式(公司人資104訊息)：<a href="https://www.104.com.tw/company/1a2x6bk0hw">https://www.104.com.tw/company/1a2x6bk0hw</a></li></ul><blockquote><p>結果：無聲卡</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>面試分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>2019 面試</tag>
      
      <tag>Ruby on Rails</tag>
      
      <tag>React</tag>
      
      <tag>Frontend</tag>
      
      <tag>Backend</tag>
      
      <tag>Fullstack</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村30 - Whack A Mole</title>
    <link href="/2019/10/15/javascript30/"/>
    <url>/2019/10/15/javascript30/</url>
    
    <content type="html"><![CDATA[<h2 id="30-Whack-A-Mole"><a href="#30-Whack-A-Mole" class="headerlink" title="30 - Whack A Mole"></a>30 - Whack A Mole</h2><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h1 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h1><p>做一個打地鼠的遊戲</p><ul><li>功能<ul><li>一個關卡要幾分鐘要固定</li><li>地鼠冒出來、自動縮下去的時間間隔要不一樣</li></ul></li><li>畫面<ul><li>畫面要顯示目前的關卡</li><li>地鼠要自動冒出來、縮下去</li><li>地鼠被點到要縮下去、數量要增加</li></ul></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Whack A Mole!<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&#x27;https://fonts.googleapis.com/css?family=Amatic+SC:400,700&#x27;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&#x27;stylesheet&#x27;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&#x27;text/css&#x27;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;style.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Whack-a-mole! <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;score&quot;</span>&gt;</span>0<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&quot;startGame()&quot;</span>&gt;</span>Start!<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;game&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hole hole1&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mole&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hole hole2&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mole&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hole hole3&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mole&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hole hole4&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mole&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hole hole5&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mole&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hole hole6&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mole&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">  <span class="hljs-keyword">const</span> holes = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;.hole&#x27;</span>);</span><br><span class="javascript">  <span class="hljs-keyword">const</span> scoreBoard = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.score&#x27;</span>);</span><br><span class="javascript">  <span class="hljs-keyword">const</span> moles = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;.mole&#x27;</span>);</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="style-css"><a href="#style-css" class="headerlink" title="style.css"></a>style.css</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">html</span> &#123;<br>  <span class="hljs-attribute">box-sizing</span>: border-box;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">10px</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#ffc600</span>;<br>&#125;<br><br>*, *:before, *:after &#123;<br>  box-sizing: inherit;<br>&#125;<br><br><span class="hljs-selector-tag">body</span> &#123;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;Amatic SC&#x27;</span>, cursive;<br>&#125;<br><br><span class="hljs-selector-tag">h1</span> &#123;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">10rem</span>;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.score</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">0.2</span>);<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">3rem</span>;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">1rem</span>;<br>&#125;<br><br><span class="hljs-selector-class">.game</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">600px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">400px</span>;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-wrap</span>: wrap;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;<br>&#125;<br><br><span class="hljs-selector-class">.hole</span> &#123;<br>  <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">33.33%</span>;<br>  <span class="hljs-attribute">overflow</span>: hidden;<br>  <span class="hljs-attribute">position</span>: relative;<br>&#125;<br><br><span class="hljs-selector-class">.hole</span>:after &#123;<br>  display: block;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">dirt.svg</span>) bottom center no-repeat;<br>  <span class="hljs-attribute">background-size</span>: contain;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;&#x27;</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>:<span class="hljs-number">70px</span>;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">z-index</span>: <span class="hljs-number">2</span>;<br>  <span class="hljs-attribute">bottom</span>: -<span class="hljs-number">30px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.mole</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;mole.svg&#x27;</span>) bottom center no-repeat;<br>  <span class="hljs-attribute">background-size</span>: <span class="hljs-number">60%</span>;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">transition</span>:all <span class="hljs-number">0.4s</span>;<br>&#125;<br><br><span class="hljs-selector-class">.hole</span><span class="hljs-selector-class">.up</span> <span class="hljs-selector-class">.mole</span> &#123;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，我們先將需要的元素選取起來，必須先找到地鼠洞的List、地鼠圖的List、 <code>span</code> 的數量 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> holes = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;.hole&#x27;</span>);<br>  <span class="hljs-keyword">const</span> scoreBoard = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.score&#x27;</span>);<br>  <span class="hljs-keyword">const</span> moles = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;.mole&#x27;</span>);<br>  <span class="hljs-built_in">console</span>.log(holes)<br>  <span class="hljs-built_in">console</span>.log(scoreBoard)<br>  <span class="hljs-built_in">console</span>.log(moles)<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>先來製作一個函式，讓這個函式執行後有一個上下限的隨機時間</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> holes = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;.hole&#x27;</span>);<br>  <span class="hljs-keyword">const</span> scoreBoard = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.score&#x27;</span>);<br>  <span class="hljs-keyword">const</span> moles = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;.mole&#x27;</span>);<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">randomTime</span>(<span class="hljs-params">min, max</span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> time = <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * (max - min) + min);<br>    <span class="hljs-keyword">return</span> time<br>  &#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>接下來，我們來取得隨機一個 <code>hole</code> 元素，如果與上一次取到的相同，我們就再次執行一次隨機選取的函式，不同的話就把現在的Hole指定給變數 <code>lastHole</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> holes = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;.hole&#x27;</span>);<br>  <span class="hljs-keyword">const</span> scoreBoard = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.score&#x27;</span>);<br>  <span class="hljs-keyword">const</span> moles = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;.mole&#x27;</span>);<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">randomTime</span>(<span class="hljs-params">min, max</span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> time = <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * (max - min) + min);<br>    <span class="hljs-keyword">return</span> time<br>  &#125;;<br><br>  <span class="hljs-keyword">let</span> lastHole;<br>  <br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">randomHole</span>(<span class="hljs-params">holes</span>) </span>&#123;<br>    <span class="hljs-keyword">const</span> idx = <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * holes.length);<br>    <span class="hljs-keyword">const</span> hole = holes[idx];<br>    <span class="hljs-keyword">if</span> (hole === lastHole) &#123;<br>      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Ah nah thats the same one bud&#x27;</span>);<br>      <span class="hljs-keyword">return</span> randomHole(holes);<br>    &#125;<br>    lastHole = hole;<br>    <span class="hljs-keyword">return</span> hole;<br>  &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>時間都處理完畢後，我們要來來地鼠可以從地鼠洞跑出來，在前面的CSS當中可以知道，地鼠的一開始是被做了相對定位並 <code>top:100%</code> 及 <code>overflow:hidden</code> 起來了！因此剛開始的時候地鼠其實是偷偷躲在底下的w</p><p>現在只要判斷什麼時候加上一個 Class 讓地鼠從地鼠洞出來以及多久會從地鼠洞出來一次，要新增&amp;移除 Class</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;  <br>  <span class="hljs-comment">//上略</span><br>  <span class="hljs-keyword">let</span> timeUp = <span class="hljs-literal">false</span>;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">peep</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">const</span> time = randomTime(<span class="hljs-number">200</span>, <span class="hljs-number">1000</span>);<br>    <span class="hljs-keyword">const</span> hole = randomHole(holes);<br>    hole.classList.add(<span class="hljs-string">&#x27;up&#x27;</span>);<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>      hole.classList.remove(<span class="hljs-string">&#x27;up&#x27;</span>);<br>      <span class="hljs-keyword">if</span> (!timeUp) peep();<br>    &#125;, time);<br>  &#125;<br>&lt;/script&gt;  <br></code></pre></td></tr></table></figure><p>最後，再加上遊戲開始及點到一個就增加分數吧！這部分比較單純只要將 <code>score</code> 宣告變數出來，以及點到分數++就可以，然後趕緊來打地鼠吧w</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;  <br>  <span class="hljs-comment">//上略  </span><br>  moles.forEach(<span class="hljs-function"><span class="hljs-params">mole</span> =&gt;</span> mole.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, bonk));<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bonk</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span>(!e.isTrusted) <span class="hljs-keyword">return</span>; <span class="hljs-comment">// cheater!</span><br>    score++;<br>    <span class="hljs-built_in">this</span>.parentNode.classList.remove(<span class="hljs-string">&#x27;up&#x27;</span>);<br>    scoreBoard.textContent = score;<br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">startGame</span>(<span class="hljs-params"></span>) </span>&#123;<br>    scoreBoard.textContent = <span class="hljs-number">0</span>;<br>    timeUp = <span class="hljs-literal">false</span>;<br>    score = <span class="hljs-number">0</span>;<br>    peep();<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> timeUp = <span class="hljs-literal">true</span>, <span class="hljs-number">10000</span>)<br>  &#125;<br>&lt;/script&gt;  <br></code></pre></td></tr></table></figure><p>就大功告成啦！</p><h2 id="JS-final"><a href="#JS-final" class="headerlink" title="JS - final"></a>JS - final</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> holes = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;.hole&#x27;</span>);<br>  <span class="hljs-keyword">const</span> scoreBoard = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.score&#x27;</span>);<br>  <span class="hljs-keyword">const</span> moles = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;.mole&#x27;</span>);<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">randomTime</span>(<span class="hljs-params">min, max</span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> time = <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * (max - min) + min);<br>    <span class="hljs-keyword">return</span> time<br>  &#125;;<br><br>  <span class="hljs-keyword">let</span> lastHole;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">randomHole</span>(<span class="hljs-params">holes</span>) </span>&#123;<br>    <span class="hljs-keyword">const</span> idx = <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * holes.length);<br>    <span class="hljs-keyword">const</span> hole = holes[idx];<br>    <span class="hljs-keyword">if</span> (hole === lastHole) &#123;<br>      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Ah nah thats the same one bud&#x27;</span>);<br>      <span class="hljs-keyword">return</span> randomHole(holes);<br>    &#125;<br>    lastHole = hole;<br>    <span class="hljs-keyword">return</span> hole;<br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">peep</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">const</span> time = randomTime(<span class="hljs-number">200</span>, <span class="hljs-number">1000</span>);<br>    <span class="hljs-keyword">const</span> hole = randomHole(holes);<br>    hole.classList.add(<span class="hljs-string">&#x27;up&#x27;</span>);<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>      hole.classList.remove(<span class="hljs-string">&#x27;up&#x27;</span>);<br>      <span class="hljs-keyword">if</span> (!timeUp) peep();<br>    &#125;, time);<br>  &#125;<br><br>  moles.forEach(<span class="hljs-function"><span class="hljs-params">mole</span> =&gt;</span> mole.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, bonk));<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bonk</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span>(!e.isTrusted) <span class="hljs-keyword">return</span>; <span class="hljs-comment">// cheater!</span><br>    score++;<br>    <span class="hljs-built_in">this</span>.parentNode.classList.remove(<span class="hljs-string">&#x27;up&#x27;</span>);<br>    scoreBoard.textContent = score;<br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">startGame</span>(<span class="hljs-params"></span>) </span>&#123;<br>    scoreBoard.textContent = <span class="hljs-number">0</span>;<br>    timeUp = <span class="hljs-literal">false</span>;<br>    score = <span class="hljs-number">0</span>;<br>    peep();<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> timeUp = <span class="hljs-literal">true</span>, <span class="hljs-number">10000</span>)<br>  &#125;<br>  <br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>本刊同步於個人網站：<a href="http://chestertang.site/">http://chestertang.site/</a></p><p>本次範例程式碼原作者來源：<a href="https://tinyurl.com/yavm5f5n">https://tinyurl.com/yavm5f5n</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村29 - Countdown Timer</title>
    <link href="/2019/10/14/javascript29/"/>
    <url>/2019/10/14/javascript29/</url>
    
    <content type="html"><![CDATA[<h2 id="29-Countdown-Timer"><a href="#29-Countdown-Timer" class="headerlink" title="29 - Countdown Timer"></a>29 - Countdown Timer</h2><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h1 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h1><p>做一個倒數計時器</p><ul><li>功能<ul><li>各種設定好的時間可以進行倒數</li><li>可以客製化時間倒數</li></ul></li><li>畫面<ul><li>顯示目前倒數的數字</li><li>顯示倒數結束時是幾點幾分</li></ul></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Countdown Timer<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&#x27;https://fonts.googleapis.com/css?family=Inconsolata&#x27;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&#x27;stylesheet&#x27;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&#x27;text/css&#x27;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;style.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;timer&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;timer__controls&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;20&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;timer__button&quot;</span>&gt;</span>20 Secs<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;300&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;timer__button&quot;</span>&gt;</span>Work 5<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;900&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;timer__button&quot;</span>&gt;</span>Quick 15<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;1200&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;timer__button&quot;</span>&gt;</span>Snack 20<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;3600&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;timer__button&quot;</span>&gt;</span>Lunch Break<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;customForm&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;custom&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;minutes&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Enter Minutes&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;display&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;display__time-left&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;display__end-time&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;scripts-START.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h2 id="Style-css"><a href="#Style-css" class="headerlink" title="Style.css"></a>Style.css</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">html</span> &#123;<br>  <span class="hljs-attribute">box-sizing</span>: border-box;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">10px</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#8E24AA</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">45deg</span>,  <span class="hljs-number">#42a5f5</span> <span class="hljs-number">0%</span>,<span class="hljs-number">#478ed1</span> <span class="hljs-number">50%</span>,<span class="hljs-number">#0d47a1</span> <span class="hljs-number">100%</span>);<br>&#125;<br><br>*, *:before, *:after &#123;<br>  box-sizing: inherit;<br>&#125;<br><br><span class="hljs-selector-tag">body</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;Inconsolata&#x27;</span>, monospace;<br>&#125;<br><br><span class="hljs-selector-class">.display__time-left</span> &#123;<br>  <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">100</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20rem</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">color</span>: white;<br>  <span class="hljs-attribute">text-shadow</span>: <span class="hljs-number">4px</span> <span class="hljs-number">4px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.05</span>);<br>&#125;<br><br><span class="hljs-selector-class">.timer</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">min-height</span>: <span class="hljs-number">100vh</span>;<br>  <span class="hljs-attribute">flex-direction</span>: column;<br>&#125;<br><br><span class="hljs-selector-class">.timer__controls</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>&#125;<br><br><span class="hljs-selector-class">.timer__controls</span> &gt; * &#123;<br>  <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;<br>&#125;<br><br><span class="hljs-selector-class">.timer__controls</span> <span class="hljs-selector-tag">form</span> &#123;<br>  <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">display</span>: flex;<br>&#125;<br><br><span class="hljs-selector-class">.timer__controls</span> <span class="hljs-selector-tag">input</span> &#123;<br>  <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">2rem</span>;<br>&#125;<br><br><span class="hljs-selector-class">.timer__button</span> &#123;<br>  <span class="hljs-attribute">background</span>: none;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">cursor</span>: pointer;<br>  <span class="hljs-attribute">color</span>: white;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">2rem</span>;<br>  <span class="hljs-attribute">text-transform</span>: uppercase;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.1</span>);<br>  <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">3px</span> solid <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.2</span>);<br>  <span class="hljs-attribute">border-right</span>: <span class="hljs-number">1px</span> solid <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.2</span>);<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">1rem</span>;<br>  <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;Inconsolata&#x27;</span>, monospace;<br>&#125;<br><br><span class="hljs-selector-class">.timer__button</span><span class="hljs-selector-pseudo">:hover</span>,<br><span class="hljs-selector-class">.timer__button</span><span class="hljs-selector-pseudo">:focus</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.2</span>);<br>  <span class="hljs-attribute">outline</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.display</span> &#123;<br>  <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-direction</span>: column;<br>  <span class="hljs-attribute">align-items</span>: center;<br>  <span class="hljs-attribute">justify-content</span>: center;<br>&#125;<br><br><span class="hljs-selector-class">.display__end-time</span> &#123;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">4rem</span>;<br>  <span class="hljs-attribute">color</span>: white;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="scripts-START-js"><a href="#scripts-START-js" class="headerlink" title="scripts-START.js"></a>scripts-START.js</h2><p>空</p><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，我們先將需要的元素選取起來，必須先找到點擊的按鈕、點擊按鈕後會觸發的 <code>h1</code>、 <code>p</code> </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> countdown;<br><span class="hljs-keyword">const</span> timerDisplay = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.display__time-left&#x27;</span>);<br><span class="hljs-keyword">const</span> endTime = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.display__end-time&#x27;</span>);<br><span class="hljs-keyword">const</span> buttons = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;[data-time]&#x27;</span>);<br><br><span class="hljs-built_in">console</span>.log(timerDisplay);<br><span class="hljs-comment">//&lt;h1 class=&quot;display__time-left&quot;&gt;&lt;/h1&gt;</span><br><span class="hljs-built_in">console</span>.log(endTime);<br>  <span class="hljs-comment">//&lt;p class=&quot;display__end-time&quot;&gt;&lt;/p&gt;</span><br><span class="hljs-built_in">console</span>.log(buttons);<br><span class="hljs-comment">//NodeList(5) [button.timer__button, button.timer__button, button.timer__button, button.timer__button, button.timer__button]</span><br></code></pre></td></tr></table></figure><p>接下來，當我們觸發點擊按鈕時，我們應該先要取得現在的時間、取得倒數的時間長度、執行倒數計時、顯示剩餘的時間於 h1，顯示結束時間於 p，變數 <code>seconds</code> 為取得 data-attibute 中所代表的倒數計時時間並轉為數字；其中在呼叫方法 <code>timer</code> 之前，我們必須先執行一次 <code>clearInterval()</code> 將先前的 <code>setInterval()</code> 方法先清除掉（後續避免會有BUG），變數 <code>now</code> 為取得目前的時間，變數 <code>then</code> 為將取得的時間轉換為秒數</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">startTimer</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">const</span> seconds = <span class="hljs-built_in">parseInt</span>(<span class="hljs-built_in">this</span>.dataset.time);<br>  timer(seconds);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">timer</span>(<span class="hljs-params">seconds</span>) </span>&#123;<br>  <span class="hljs-built_in">clearInterval</span>(countdown);<br><br>  <span class="hljs-keyword">const</span> now = <span class="hljs-built_in">Date</span>.now();<br>  <span class="hljs-keyword">const</span> then = now + seconds * <span class="hljs-number">1000</span>;<br>  displayTimeLeft(seconds);<br>  displayEndTime(then);<br><br>  countdown = <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> secondsLeft = <span class="hljs-built_in">Math</span>.round((then - <span class="hljs-built_in">Date</span>.now()) / <span class="hljs-number">1000</span>);<br>    <span class="hljs-keyword">if</span>(secondsLeft &lt; <span class="hljs-number">0</span>) &#123;<br>      <span class="hljs-built_in">clearInterval</span>(countdown);<br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br>    displayTimeLeft(secondsLeft);<br>  &#125;, <span class="hljs-number">1000</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>接下來來完成 Function 中的 <code>displayTimeLeft</code> 與 <code>displayEndTime</code> ，一個為計算倒數計時的大標題 <code>h1</code> ，另一個為計算結束時間為何，讓使用者可以知道倒數終止的時間為幾點幾分</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">displayTimeLeft</span>(<span class="hljs-params">seconds</span>) </span>&#123;<br>  <span class="hljs-keyword">const</span> minutes = <span class="hljs-built_in">Math</span>.floor(seconds / <span class="hljs-number">60</span>);<br>  <span class="hljs-keyword">const</span> remainderSeconds = seconds % <span class="hljs-number">60</span>;<br>  <span class="hljs-keyword">const</span> display = <span class="hljs-string">`<span class="hljs-subst">$&#123;minutes&#125;</span>:<span class="hljs-subst">$&#123;remainderSeconds &lt; <span class="hljs-number">10</span> ? <span class="hljs-string">&#x27;0&#x27;</span> : <span class="hljs-string">&#x27;&#x27;</span> &#125;</span><span class="hljs-subst">$&#123;remainderSeconds&#125;</span>`</span>;<br>  <span class="hljs-built_in">document</span>.title = display;<br>  timerDisplay.textContent = display;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">displayEndTime</span>(<span class="hljs-params">timestamp</span>) </span>&#123;<br>  <span class="hljs-keyword">const</span> end = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(timestamp);<br>  <span class="hljs-keyword">const</span> hour = end.getHours();<br>  <span class="hljs-keyword">const</span> adjustedHour = hour &gt; <span class="hljs-number">12</span> ? hour - <span class="hljs-number">12</span> : hour;<br>  <span class="hljs-keyword">const</span> minutes = end.getMinutes();<br>  endTime.textContent = <span class="hljs-string">`Be Back At <span class="hljs-subst">$&#123;adjustedHour&#125;</span>:<span class="hljs-subst">$&#123;minutes &lt; <span class="hljs-number">10</span> ? <span class="hljs-string">&#x27;0&#x27;</span> : <span class="hljs-string">&#x27;&#x27;</span>&#125;</span><span class="hljs-subst">$&#123;minutes&#125;</span>`</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>最後，再加上讓使用者可以自己輸入時間的 <code>submit</code> 按鈕，可以客製化自己想要多少的時間</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">document</span>.customForm.addEventListener(<span class="hljs-string">&#x27;submit&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) </span>&#123;<br>  e.preventDefault();<br>  <span class="hljs-keyword">const</span> mins = <span class="hljs-built_in">this</span>.minutes.value;<br>  <span class="hljs-built_in">console</span>.log(mins);<br>  timer(mins * <span class="hljs-number">60</span>);<br>  <span class="hljs-built_in">this</span>.reset();<br>&#125;);<br></code></pre></td></tr></table></figure><p>就大功告成啦！</p><h2 id="JS-final"><a href="#JS-final" class="headerlink" title="JS - final"></a>JS - final</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> countdown;<br><span class="hljs-keyword">const</span> timerDisplay = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.display__time-left&#x27;</span>);<br><span class="hljs-keyword">const</span> endTime = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.display__end-time&#x27;</span>);<br><span class="hljs-keyword">const</span> buttons = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;[data-time]&#x27;</span>);<br><br><span class="hljs-built_in">console</span>.log(timerDisplay);<br><span class="hljs-comment">//&lt;h1 class=&quot;display__time-left&quot;&gt;&lt;/h1&gt;</span><br><span class="hljs-built_in">console</span>.log(endTime);<br><span class="hljs-comment">//&lt;p class=&quot;display__end-time&quot;&gt;&lt;/p&gt;</span><br><span class="hljs-built_in">console</span>.log(buttons);<br><span class="hljs-comment">//NodeList(5) [button.timer__button, button.timer__button, button.timer__button, button.timer__button, button.timer__button]</span><br><br>buttons.forEach(<span class="hljs-function"><span class="hljs-params">button</span> =&gt;</span> button.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, startTimer));<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">startTimer</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">const</span> seconds = <span class="hljs-built_in">parseInt</span>(<span class="hljs-built_in">this</span>.dataset.time);<br>  timer(seconds);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">timer</span>(<span class="hljs-params">seconds</span>) </span>&#123;<br>  <span class="hljs-comment">// clear any existing timers</span><br>  <span class="hljs-built_in">clearInterval</span>(countdown);<br><br>  <span class="hljs-keyword">const</span> now = <span class="hljs-built_in">Date</span>.now();<br>  <span class="hljs-keyword">const</span> then = now + seconds * <span class="hljs-number">1000</span>;<br>  displayTimeLeft(seconds);<br>  displayEndTime(then);<br><br>  countdown = <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> secondsLeft = <span class="hljs-built_in">Math</span>.round((then - <span class="hljs-built_in">Date</span>.now()) / <span class="hljs-number">1000</span>);<br>    <span class="hljs-comment">// check if we should stop it!</span><br>    <span class="hljs-keyword">if</span>(secondsLeft &lt; <span class="hljs-number">0</span>) &#123;<br>      <span class="hljs-built_in">clearInterval</span>(countdown);<br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-comment">// display it</span><br>    displayTimeLeft(secondsLeft);<br>  &#125;, <span class="hljs-number">1000</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">displayTimeLeft</span>(<span class="hljs-params">seconds</span>) </span>&#123;<br>  <span class="hljs-keyword">const</span> minutes = <span class="hljs-built_in">Math</span>.floor(seconds / <span class="hljs-number">60</span>);<br>  <span class="hljs-keyword">const</span> remainderSeconds = seconds % <span class="hljs-number">60</span>;<br>  <span class="hljs-keyword">const</span> display = <span class="hljs-string">`<span class="hljs-subst">$&#123;minutes&#125;</span>:<span class="hljs-subst">$&#123;remainderSeconds &lt; <span class="hljs-number">10</span> ? <span class="hljs-string">&#x27;0&#x27;</span> : <span class="hljs-string">&#x27;&#x27;</span> &#125;</span><span class="hljs-subst">$&#123;remainderSeconds&#125;</span>`</span>;<br>  <span class="hljs-built_in">document</span>.title = display;<br>  timerDisplay.textContent = display;<br>&#125;<br>  <br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">displayEndTime</span>(<span class="hljs-params">timestamp</span>) </span>&#123;<br>  <span class="hljs-keyword">const</span> end = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(timestamp);<br>  <span class="hljs-keyword">const</span> hour = end.getHours();<br>  <span class="hljs-keyword">const</span> adjustedHour = hour &gt; <span class="hljs-number">12</span> ? hour - <span class="hljs-number">12</span> : hour;<br>  <span class="hljs-keyword">const</span> minutes = end.getMinutes();<br>  endTime.textContent = <span class="hljs-string">`Be Back At <span class="hljs-subst">$&#123;adjustedHour&#125;</span>:<span class="hljs-subst">$&#123;minutes &lt; <span class="hljs-number">10</span> ? <span class="hljs-string">&#x27;0&#x27;</span> : <span class="hljs-string">&#x27;&#x27;</span>&#125;</span><span class="hljs-subst">$&#123;minutes&#125;</span>`</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>本刊同步於個人網站：<a href="http://chestertang.site/">http://chestertang.site/</a></p><p>本次範例程式碼原作者來源：<a href="https://tinyurl.com/yavm5f5n">https://tinyurl.com/yavm5f5n</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村28 - Video Speed Controller</title>
    <link href="/2019/10/13/javascript28/"/>
    <url>/2019/10/13/javascript28/</url>
    
    <content type="html"><![CDATA[<h2 id="28-Video-Speed-Controller"><a href="#28-Video-Speed-Controller" class="headerlink" title="28 - Video Speed Controller"></a>28 - Video Speed Controller</h2><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h1 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h1><ul><li>功能<ul><li>拖拉 Range 改變影片播放數度</li></ul></li><li>畫面<ul><li>拖拉 Range 可以顯示目前的速度倍率（格式：nx）</li></ul></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Video Speed Scrubber<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;style.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;wrapper&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;flex&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;765&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;430&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://clips.vorwaerts-gmbh.de/VfE_html5.mp4&quot;</span> <span class="hljs-attr">loop</span> <span class="hljs-attr">controls</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;speed&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;speed-bar&quot;</span>&gt;</span>1×<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Style-css"><a href="#Style-css" class="headerlink" title="Style.css"></a>Style.css</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">body</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">justify-content</span>: center;<br>  <span class="hljs-attribute">align-items</span>: center;<br>  <span class="hljs-attribute">min-height</span>: <span class="hljs-number">100vh</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#4C4C4C</span> <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;https://unsplash.it/1500/900?image=1021&#x27;</span>);<br>  <span class="hljs-attribute">background-size</span>: cover;<br>  <span class="hljs-attribute">font-family</span>: sans-serif;<br>&#125;<br><br><span class="hljs-selector-class">.wrapper</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">850px</span>;<br>  <span class="hljs-attribute">display</span>: flex;<br>&#125;<br><br><span class="hljs-selector-tag">video</span> &#123;<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1px</span> <span class="hljs-number">3px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.1</span>);<br>&#125;<br><br><span class="hljs-selector-class">.speed</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#efefef</span>;<br>  <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">align-items</span>: flex-start;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1px</span> <span class="hljs-number">3px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.1</span>);<br>  <span class="hljs-attribute">overflow</span>: hidden;<br>&#125;<br><br><span class="hljs-selector-class">.speed-bar</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(-<span class="hljs-number">170deg</span>, <span class="hljs-number">#2376ae</span> <span class="hljs-number">0%</span>, <span class="hljs-number">#c16ecf</span> <span class="hljs-number">100%</span>);<br>  <span class="hljs-attribute">text-shadow</span>: <span class="hljs-number">1px</span> <span class="hljs-number">1px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.2</span>);<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">align-items</span>: center;<br>  <span class="hljs-attribute">justify-content</span>: center;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">2px</span>;<br>  <span class="hljs-attribute">color</span>: white;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">16.3%</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，我們先將需要的元素選取起來，分別要整個調整速度的元件、調整速度內的Bar及當調整Bar的數值會影響到左側Video的播放速度</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> speed = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.speed&#x27;</span>);<br>  <span class="hljs-keyword">const</span> bar = speed.querySelector(<span class="hljs-string">&#x27;.speed-bar&#x27;</span>);<br>  <span class="hljs-keyword">const</span> video = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.flex&#x27;</span>);<br><br>  <span class="hljs-built_in">console</span>.log(speed)<br>  <span class="hljs-comment">//&lt;div class=&quot;speed&quot;&gt;</span><br>  <span class="hljs-comment">//  &lt;div class=&quot;speed-bar&quot; style=&quot;height: 87%;&quot;&gt;3.53×&lt;/div&gt;</span><br>  <span class="hljs-comment">//&lt;/div&gt;</span><br><br>  <span class="hljs-built_in">console</span>.log(bar)<br>  <span class="hljs-comment">//&lt;div class=&quot;speed-bar&quot;&gt;1×&lt;/div&gt;</span><br><br>  <span class="hljs-built_in">console</span>.log(video)<br>  <span class="hljs-comment">//&lt;video class=&quot;flex&quot; width=&quot;765&quot; height=&quot;430&quot; src=&quot;http://clips.vorwaerts-</span><br>  <span class="hljs-comment">//gmbh.de/VfE_html5.mp4&quot; loop controls&gt;&lt;/video&gt;</span><br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>再來加上個監聽事件吧～每當滑鼠調整Bar的數值會觸發事件 <code>handleMove</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><span class="hljs-keyword">const</span> speed = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.speed&#x27;</span>);<br>  <span class="hljs-keyword">const</span> bar = speed.querySelector(<span class="hljs-string">&#x27;.speed-bar&#x27;</span>);<br>  <span class="hljs-keyword">const</span> video = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.flex&#x27;</span>);<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">handleMove</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(e);<br>  &#125;<br>speed.addEventListener(<span class="hljs-string">&#x27;mousemove&#x27;</span>, handleMove);<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>現在來取得控制器背景元素中的 Y 軸位置、整體高度吧！</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><span class="hljs-keyword">const</span> speed = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.speed&#x27;</span>);<br>  <span class="hljs-keyword">const</span> bar = speed.querySelector(<span class="hljs-string">&#x27;.speed-bar&#x27;</span>);<br>  <span class="hljs-keyword">const</span> video = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.flex&#x27;</span>);<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">handleMove</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-keyword">const</span> y = e.pageY - <span class="hljs-built_in">this</span>.offsetTop;<br>    <span class="hljs-keyword">const</span> percent = y / <span class="hljs-built_in">this</span>.offsetHeight;<br>    <span class="hljs-keyword">const</span> min = <span class="hljs-number">0.4</span>;<br>    <span class="hljs-keyword">const</span> max = <span class="hljs-number">4</span>;<br>    <span class="hljs-keyword">const</span> playbackRate = percent * (max - min) + min;<br>  &#125;<br>speed.addEventListener(<span class="hljs-string">&#x27;mousemove&#x27;</span>, handleMove);<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>最後只要指定控制器的顯示高度、文字內容，還有左側的影片的播放速度就可以調整惹w</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><span class="hljs-keyword">const</span> speed = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.speed&#x27;</span>);<br>  <span class="hljs-keyword">const</span> bar = speed.querySelector(<span class="hljs-string">&#x27;.speed-bar&#x27;</span>);<br>  <span class="hljs-keyword">const</span> video = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.flex&#x27;</span>);<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">handleMove</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-keyword">const</span> y = e.pageY - <span class="hljs-built_in">this</span>.offsetTop;<br>    <span class="hljs-keyword">const</span> percent = y / <span class="hljs-built_in">this</span>.offsetHeight;<br>    <span class="hljs-keyword">const</span> min = <span class="hljs-number">0.4</span>;<br>    <span class="hljs-keyword">const</span> max = <span class="hljs-number">4</span>;<br>    <span class="hljs-keyword">const</span> playbackRate = percent * (max - min) + min;<br>    <br>    bar.style.height = height;<br>    <span class="hljs-keyword">const</span> height = <span class="hljs-built_in">Math</span>.round(percent * <span class="hljs-number">100</span>) + <span class="hljs-string">&#x27;%&#x27;</span>;<br><br>bar.textContent = playbackRate.toFixed(<span class="hljs-number">2</span>) + <span class="hljs-string">&#x27;×&#x27;</span>;<br><br>video.playbackRate = playbackRate;<br>  &#125;<br>  <br>speed.addEventListener(<span class="hljs-string">&#x27;mousemove&#x27;</span>, handleMove);<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>就大功告成啦！</p><h2 id="JS-final"><a href="#JS-final" class="headerlink" title="JS - final"></a>JS - final</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><span class="hljs-keyword">const</span> speed = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.speed&#x27;</span>);<br>  <span class="hljs-keyword">const</span> bar = speed.querySelector(<span class="hljs-string">&#x27;.speed-bar&#x27;</span>);<br>  <span class="hljs-keyword">const</span> video = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.flex&#x27;</span>);<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">handleMove</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-keyword">const</span> y = e.pageY - <span class="hljs-built_in">this</span>.offsetTop;<br>    <span class="hljs-keyword">const</span> percent = y / <span class="hljs-built_in">this</span>.offsetHeight;<br>    <span class="hljs-keyword">const</span> min = <span class="hljs-number">0.4</span>;<br>    <span class="hljs-keyword">const</span> max = <span class="hljs-number">4</span>;<br>    <span class="hljs-keyword">const</span> playbackRate = percent * (max - min) + min;<br>    <br>    bar.style.height = height;<br>    <span class="hljs-keyword">const</span> height = <span class="hljs-built_in">Math</span>.round(percent * <span class="hljs-number">100</span>) + <span class="hljs-string">&#x27;%&#x27;</span>;<br>bar.textContent = playbackRate.toFixed(<span class="hljs-number">2</span>) + <span class="hljs-string">&#x27;×&#x27;</span>;<br>video.playbackRate = playbackRate;<br>  &#125;<br>speed.addEventListener(<span class="hljs-string">&#x27;mousemove&#x27;</span>, handleMove);<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>本刊同步於個人網站：<a href="http://chestertang.site/">http://chestertang.site/</a></p><p>本次範例程式碼原作者來源：<a href="https://tinyurl.com/yavm5f5n">https://tinyurl.com/yavm5f5n</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村27 - Click and Drag</title>
    <link href="/2019/10/12/javascript27/"/>
    <url>/2019/10/12/javascript27/</url>
    
    <content type="html"><![CDATA[<h2 id="27-Click-and-Drag"><a href="#27-Click-and-Drag" class="headerlink" title="27 - Click and Drag"></a>27 - Click and Drag</h2><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h1 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h1><ul><li>功能<ul><li>拖拉互動要有拖拉畫面的功能</li></ul></li><li>畫面<ul><li>拖拉的程度要和畫面移動程度相同的px</li></ul></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Click and Drag<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;style.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;items&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item1&quot;</span>&gt;</span>01<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item2&quot;</span>&gt;</span>02<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item3&quot;</span>&gt;</span>03<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item4&quot;</span>&gt;</span>04<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item5&quot;</span>&gt;</span>05<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item6&quot;</span>&gt;</span>06<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item7&quot;</span>&gt;</span>07<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item8&quot;</span>&gt;</span>08<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item9&quot;</span>&gt;</span>09<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item10&quot;</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item11&quot;</span>&gt;</span>11<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item12&quot;</span>&gt;</span>12<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item13&quot;</span>&gt;</span>13<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item14&quot;</span>&gt;</span>14<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item15&quot;</span>&gt;</span>15<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item16&quot;</span>&gt;</span>16<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item17&quot;</span>&gt;</span>17<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item18&quot;</span>&gt;</span>18<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item19&quot;</span>&gt;</span>19<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item20&quot;</span>&gt;</span>20<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item21&quot;</span>&gt;</span>21<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item22&quot;</span>&gt;</span>22<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item23&quot;</span>&gt;</span>23<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item24&quot;</span>&gt;</span>24<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item item25&quot;</span>&gt;</span>25<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h2 id="CSS-START-html"><a href="#CSS-START-html" class="headerlink" title="CSS_START.html"></a>CSS_START.html</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">html</span> &#123;<br>  <span class="hljs-attribute">box-sizing</span>: border-box;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;https://source.unsplash.com/NFs6dRTBgaM/2000x2000&#x27;</span>) fixed;<br>  <span class="hljs-attribute">background-size</span>: cover;<br>&#125;<br><br>*, *:before, *:after &#123;<br>  box-sizing: inherit;<br>&#125;<br><br><span class="hljs-selector-tag">body</span> &#123;<br>  <span class="hljs-attribute">min-height</span>: <span class="hljs-number">100vh</span>;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">justify-content</span>: center;<br>  <span class="hljs-attribute">align-items</span>: center;<br>  <span class="hljs-attribute">font-family</span>: sans-serif;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.items</span> &#123;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">800px</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">100px</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid white;<br>  <span class="hljs-attribute">overflow-x</span>: scroll;<br>  <span class="hljs-attribute">overflow-y</span>: hidden;<br>  <span class="hljs-attribute">white-space</span>: nowrap;<br>  user-select: none;<br>  <span class="hljs-attribute">cursor</span>: pointer;<br>  <span class="hljs-attribute">transition</span>: all <span class="hljs-number">0.2s</span>;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scale</span>(<span class="hljs-number">0.98</span>);<br>  will-change: transform;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">0.1</span>);<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">perspective</span>: <span class="hljs-number">500px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.items</span><span class="hljs-selector-class">.active</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">0.3</span>);<br>  <span class="hljs-attribute">cursor</span>: grabbing;<br>  <span class="hljs-attribute">cursor</span>: -webkit-grabbing;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scale</span>(<span class="hljs-number">1</span>);<br>&#125;<br><br><span class="hljs-selector-class">.item</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">100%</span> - <span class="hljs-number">40px</span>);<br>  <span class="hljs-attribute">display</span>: inline-flex;<br>  <span class="hljs-attribute">align-items</span>: center;<br>  <span class="hljs-attribute">justify-content</span>: center;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">80px</span>;<br>  <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">100</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.15</span>);<br>  <span class="hljs-attribute">box-shadow</span>: inset <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">10px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.15</span>);<br>&#125;<br><br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">9</span>n+<span class="hljs-number">1</span>) &#123; <span class="hljs-attribute">background</span>: dodgerblue;&#125;<br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">9</span>n+<span class="hljs-number">2</span>) &#123; <span class="hljs-attribute">background</span>: goldenrod;&#125;<br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">9</span>n+<span class="hljs-number">3</span>) &#123; <span class="hljs-attribute">background</span>: paleturquoise;&#125;<br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">9</span>n+<span class="hljs-number">4</span>) &#123; <span class="hljs-attribute">background</span>: gold;&#125;<br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">9</span>n+<span class="hljs-number">5</span>) &#123; <span class="hljs-attribute">background</span>: cadetblue;&#125;<br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">9</span>n+<span class="hljs-number">6</span>) &#123; <span class="hljs-attribute">background</span>: tomato;&#125;<br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">9</span>n+<span class="hljs-number">7</span>) &#123; <span class="hljs-attribute">background</span>: lightcoral;&#125;<br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">9</span>n+<span class="hljs-number">8</span>) &#123; <span class="hljs-attribute">background</span>: darkslateblue;&#125;<br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">9</span>n+<span class="hljs-number">9</span>) &#123; <span class="hljs-attribute">background</span>: rebeccapurple;&#125;<br><br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child</span>(even) &#123; <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scaleX</span>(<span class="hljs-number">1.31</span>) <span class="hljs-built_in">rotateY</span>(<span class="hljs-number">40deg</span>); &#125;<br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child</span>(odd) &#123; <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scaleX</span>(<span class="hljs-number">1.31</span>) <span class="hljs-built_in">rotateY</span>(-<span class="hljs-number">40deg</span>); &#125;<br><br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，一樣也是透過 <code>querySelector</code> 選取 Class <code>items</code>，可以將到所有的卡片外的 <code>div</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> slider = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.items&#x27;</span>);<br>  <span class="hljs-built_in">console</span>.log(slider);<br>  <span class="hljs-comment">// 抓到25個div</span><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>並先來把觸發對象和條件先建構出來吧！在這個範例中，我們會分別用到 <code>mousedown</code> 、<code>mousemove</code> 、<code>mouseup</code> 三個觸發事件，分別是當滑鼠按下、移動、按起來事件會被觸發。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> slider = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.items&#x27;</span>);<br>  <span class="hljs-built_in">console</span>.log(slider);<br>  <span class="hljs-comment">// 抓到25個div</span><br>  <br>  slider.addEventListener(<span class="hljs-string">&#x27;mousedown&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;&#125;);<br>slider.addEventListener(<span class="hljs-string">&#x27;mouseup&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;&#125;);<br>slider.addEventListener(<span class="hljs-string">&#x27;mousemove&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;&#125;);<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>先來判斷使用者是不是按下按鈕的，宣告變數 <code>isDown</code> 來判斷使用者有沒有按下滑鼠，預設一開始為 <code>false</code>，當使用者 <code>mousedown</code> 的時候表示按下， <code>isDown = true</code>  ，使用者 <code>mouseup</code> 的時候表示按起， <code>isDown = false</code>，而在 <code>mousemove</code> 的能持續觸發事件的時候，應該判斷使用者是不是在按下的情況，否則應該停止 Function</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> slider = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.items&#x27;</span>);<br>  <span class="hljs-built_in">console</span>.log(slider);<br><span class="hljs-keyword">let</span> isDown = <span class="hljs-literal">false</span>;<br>  <span class="hljs-comment">// 抓到25個div</span><br>  <br>  slider.addEventListener(<span class="hljs-string">&#x27;mousedown&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>isDown = <span class="hljs-literal">true</span>;<br>&#125;);<br>slider.addEventListener(<span class="hljs-string">&#x27;mouseup&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>isDown = <span class="hljs-literal">false</span>;<br>&#125;);<br>slider.addEventListener(<span class="hljs-string">&#x27;mousemove&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br><span class="hljs-keyword">if</span> (!isDown) <span class="hljs-keyword">return</span>;<br>&#125;);<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>接下來我們透過加上 Class <code>active</code> 來產生特效，分別在滑鼠按下及按起時候新增移除 Class</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> slider = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.items&#x27;</span>);<br>  <span class="hljs-built_in">console</span>.log(slider);<br><span class="hljs-keyword">let</span> isDown = <span class="hljs-literal">false</span>;<br>  <span class="hljs-comment">// 抓到25個div</span><br>  <br>  slider.addEventListener(<span class="hljs-string">&#x27;mousedown&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>isDown = <span class="hljs-literal">true</span>;<br>slider.classList.add(<span class="hljs-string">&#x27;active&#x27;</span>);<br>&#125;);<br>slider.addEventListener(<span class="hljs-string">&#x27;mouseup&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>isDown = <span class="hljs-literal">false</span>;<br>slider.classList.remove(<span class="hljs-string">&#x27;active&#x27;</span>);<br>&#125;);<br>slider.addEventListener(<span class="hljs-string">&#x27;mousemove&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br><span class="hljs-keyword">if</span> (!isDown) <span class="hljs-keyword">return</span>;<br>&#125;);<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>最後再記錄現在的 <code>offsetX</code> &amp; <code>pageX</code> 為變數 <code>startX</code> ，<code>slider.scrollLeft</code> 為變數 <code>scrollLeft</code>，最後在移動X軸時處理位置即可～</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> slider = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.items&#x27;</span>);<br>  <span class="hljs-built_in">console</span>.log(slider);<br>  <span class="hljs-keyword">let</span> isDown = <span class="hljs-literal">false</span>;<br>  <span class="hljs-keyword">let</span> startX;<br>  <span class="hljs-keyword">let</span> scrollLeft;<br><br>  slider.addEventListener(<span class="hljs-string">&#x27;mousedown&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>    isDown = <span class="hljs-literal">true</span>;<br>    slider.classList.add(<span class="hljs-string">&#x27;active&#x27;</span>);<br>    startX = e.pageX + slider.offsetLeft;<br>    scrollLeft = slider.scrollLeft;<br>  &#125;); <br><br>  slider.addEventListener(<span class="hljs-string">&#x27;mouseup&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>    isDown = <span class="hljs-literal">false</span>;<br>    slider.classList.remove(<span class="hljs-string">&#x27;active&#x27;</span>);<br>  &#125;);<br><br>  slider.addEventListener(<span class="hljs-string">&#x27;mousemove&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (!isDown) <span class="hljs-keyword">return</span>;<br>    e.preventDefault();<br>    <span class="hljs-keyword">const</span> x = e.pageX - slider.offsetLeft;<br>    <span class="hljs-keyword">const</span> walk = (x - startX) * <span class="hljs-number">3</span>;<br>    slider.scrollLeft = scrollLeft - walk;<br>  &#125;);<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>就大功告成啦！</p><h2 id="JS-final"><a href="#JS-final" class="headerlink" title="JS - final"></a>JS - final</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> slider = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.items&#x27;</span>);<br>  <span class="hljs-built_in">console</span>.log(slider);<br>  <span class="hljs-keyword">let</span> isDown = <span class="hljs-literal">false</span>;<br>  <span class="hljs-keyword">let</span> startX;<br>  <span class="hljs-keyword">let</span> scrollLeft;<br><br>  slider.addEventListener(<span class="hljs-string">&#x27;mousedown&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>    isDown = <span class="hljs-literal">true</span>;<br>    slider.classList.add(<span class="hljs-string">&#x27;active&#x27;</span>);<br>    startX = e.pageX + slider.offsetLeft;<br>    scrollLeft = slider.scrollLeft;<br>  &#125;); <br><br>  slider.addEventListener(<span class="hljs-string">&#x27;mouseup&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>    isDown = <span class="hljs-literal">false</span>;<br>    slider.classList.remove(<span class="hljs-string">&#x27;active&#x27;</span>);<br>  &#125;);<br><br>  slider.addEventListener(<span class="hljs-string">&#x27;mousemove&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (!isDown) <span class="hljs-keyword">return</span>;<br>    e.preventDefault();<br>    <span class="hljs-keyword">const</span> x = e.pageX - slider.offsetLeft;<br>    <span class="hljs-keyword">const</span> walk = (x - startX) * <span class="hljs-number">3</span>;<br>    slider.scrollLeft = scrollLeft - walk;<br>  &#125;);<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>本刊同步於個人網站：<a href="http://chestertang.site/">http://chestertang.site/</a></p><p>本次範例程式碼原作者來源：<a href="https://tinyurl.com/yavm5f5n">https://tinyurl.com/yavm5f5n</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村26 - Stripe Follow Along Nav</title>
    <link href="/2019/10/11/javascript26/"/>
    <url>/2019/10/11/javascript26/</url>
    
    <content type="html"><![CDATA[<h2 id="26-Stripe-Follow-Along-Nav"><a href="#26-Stripe-Follow-Along-Nav" class="headerlink" title="26 - Stripe Follow Along Nav"></a>26 - Stripe Follow Along Nav</h2><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h2 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h2><ul><li>功能<ul><li>連結Hover時白色區塊要出現在該連結下方</li></ul></li><li>畫面<ul><li>白色區塊的寬高要符合該連結的下拉區塊</li><li>滑鼠移開時白色區塊要消失</li><li>白色區塊出現內容才出現</li><li>下拉區塊尚未完全出現，滑鼠移動時要取消顯示內容</li></ul></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Follow Along Nav<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Cool<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">nav</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;top&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;dropdownBackground&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;arrow&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cool&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>About Me<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;dropdown dropdown1&quot;</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bio&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://logo.clearbit.com/wesbos.com&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Wes Bos sure does love web development. He teaches things like JavaScript, CSS and BBQ. Wait. BBQ isn&#x27;t part of web development. It should be though!<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Courses<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;dropdown courses&quot;</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;code&quot;</span>&gt;</span>RFB<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://ReactForBeginners.com&quot;</span>&gt;</span>React For Beginners<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;code&quot;</span>&gt;</span>ES6<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://ES6.io&quot;</span>&gt;</span>ES6 For Everyone<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;code&quot;</span>&gt;</span>NODE<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://LearnNode.com&quot;</span>&gt;</span>Learn Node<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;code&quot;</span>&gt;</span>STPU<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://SublimeTextBook.com&quot;</span>&gt;</span>Sublime Text Power User<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;code&quot;</span>&gt;</span>WTF<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://Flexbox.io&quot;</span>&gt;</span>What The Flexbox?!<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;code&quot;</span>&gt;</span>GRID<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://CSSGrid.io&quot;</span>&gt;</span>CSS Grid<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;code&quot;</span>&gt;</span>LRX<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://LearnRedux.com&quot;</span>&gt;</span>Learn Redux<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;code&quot;</span>&gt;</span>CLPU<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://CommandLinePowerUser.com&quot;</span>&gt;</span>Command Line Power User<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;code&quot;</span>&gt;</span>MMD<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://MasteringMarkdown.com&quot;</span>&gt;</span>Mastering Markdown<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Other Links<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;dropdown dropdown3&quot;</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://twitter.com/wesbos&quot;</span>&gt;</span>Twitter<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://facebook.com/wesbos.developer&quot;</span>&gt;</span>Facebook<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://wesbos.com&quot;</span>&gt;</span>Blog<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://wesbos.com/courses&quot;</span>&gt;</span>Course Catalog<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><span class="css">  <span class="hljs-selector-tag">html</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">box-sizing</span>: border-box;</span><br><span class="css">    <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&quot;Arial Rounded MT Bold&quot;</span>, <span class="hljs-string">&quot;Helvetica Rounded&quot;</span>, Arial, sans-serif;</span><br>  &#125;<br>  <br>  *, *:before, *:after &#123;<br><span class="css">    <span class="hljs-attribute">box-sizing</span>: inherit;</span><br>  &#125;<br>  <br><span class="css">  <span class="hljs-selector-tag">body</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="css">    <span class="hljs-attribute">min-height</span>: <span class="hljs-number">100vh</span>;</span><br><span class="css">    <span class="hljs-attribute">background</span>:</span><br>      linear-gradient(45deg, hsla(340, 100%, 55%, 1) 0%, hsla(340, 100%, 55%, 0) 70%),<br>      linear-gradient(135deg, hsla(225, 95%, 50%, 1) 10%, hsla(225, 95%, 50%, 0) 80%),<br>      linear-gradient(225deg, hsla(140, 90%, 50%, 1) 10%, hsla(140, 90%, 50%, 0) 80%),<br>      linear-gradient(315deg, hsla(35, 95%, 55%, 1) 100%, hsla(35, 95%, 55%, 0) 70%);<br>  &#125;<br><br><span class="css">  <span class="hljs-selector-tag">h2</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">0</span>;</span><br><span class="css">    <span class="hljs-attribute">padding-top</span>: .<span class="hljs-number">8em</span>;</span><br>  &#125;<br><br><span class="css">  <span class="hljs-selector-tag">nav</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">position</span>: relative;</span><br><span class="css">    <span class="hljs-attribute">perspective</span>: <span class="hljs-number">600px</span>;</span><br>  &#125;<br><br><span class="css">  <span class="hljs-selector-class">.cool</span> &gt; <span class="hljs-selector-tag">li</span> &gt; <span class="hljs-selector-tag">a</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">color</span>: yellow;</span><br><span class="css">    <span class="hljs-attribute">text-decoration</span>: none;</span><br><span class="css">    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;</span><br><span class="css">    <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.2</span>);</span><br><span class="css">    <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span> <span class="hljs-number">20px</span>;</span><br><span class="css">    <span class="hljs-attribute">display</span>: inline-block;</span><br><span class="css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">20px</span>;</span><br><span class="css">    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">5px</span>;</span><br>  &#125;<br><br><span class="css">  <span class="hljs-selector-tag">nav</span> <span class="hljs-selector-tag">ul</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">list-style</span>: none;</span><br><span class="css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="css">    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</span><br><span class="css">    <span class="hljs-attribute">display</span>: flex;</span><br><span class="css">    <span class="hljs-attribute">justify-content</span>: center;</span><br>  &#125;<br><br><span class="css">  <span class="hljs-selector-class">.cool</span> &gt; <span class="hljs-selector-tag">li</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">position</span>: relative;</span><br><span class="css">    <span class="hljs-attribute">display</span>: flex;</span><br><span class="css">    <span class="hljs-attribute">justify-content</span>: center;</span><br>  &#125;<br><br>  .dropdown &#123;<br><span class="css">    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;</span><br><span class="css">    <span class="hljs-attribute">position</span>: absolute;</span><br><span class="css">    <span class="hljs-attribute">overflow</span>: hidden;</span><br><span class="css">    <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;</span><br><span class="css">    <span class="hljs-attribute">top</span>: -<span class="hljs-number">20px</span>;</span><br><span class="css">    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">2px</span>;</span><br><span class="css">    <span class="hljs-attribute">transition</span>: all <span class="hljs-number">0.5s</span>;</span><br><span class="css">    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">100px</span>);</span><br><span class="css">    will-change: opacity;</span><br><span class="css">    <span class="hljs-attribute">display</span>: none;</span><br>  &#125;<br><br>  .trigger-enter .dropdown &#123;<br><span class="css">    <span class="hljs-attribute">display</span>: block;</span><br>  &#125;<br><br>  .trigger-enter-active .dropdown &#123;<br><span class="css">    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;</span><br>  &#125;<br>  <br>  .dropdownBackground &#123;<br><span class="css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">    <span class="hljs-attribute">position</span>: absolute;</span><br><span class="css">    <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;</span><br><span class="css">    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">4px</span>;</span><br><span class="css">    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">50px</span> <span class="hljs-number">100px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">50</span>,<span class="hljs-number">50</span>,<span class="hljs-number">93</span>,.<span class="hljs-number">1</span>), <span class="hljs-number">0</span> <span class="hljs-number">15px</span> <span class="hljs-number">35px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">50</span>,<span class="hljs-number">50</span>,<span class="hljs-number">93</span>,.<span class="hljs-number">15</span>), <span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-number">15px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,.<span class="hljs-number">1</span>);</span><br><span class="css">    <span class="hljs-attribute">transition</span>: all <span class="hljs-number">0.3s</span>, opacity <span class="hljs-number">0.1s</span>, transform <span class="hljs-number">0.2s</span>;</span><br><span class="css">    <span class="hljs-attribute">transform-origin</span>: <span class="hljs-number">50%</span> <span class="hljs-number">0</span>;</span><br><span class="css">    <span class="hljs-attribute">display</span>: flex;</span><br><span class="css">    <span class="hljs-attribute">justify-content</span>: center;</span><br><span class="css">    <span class="hljs-attribute">opacity</span>:<span class="hljs-number">0</span>;</span><br>  &#125;<br><br>  .dropdownBackground.open &#123;<br><span class="css">    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;</span><br>  &#125;<br><br>  .arrow &#123;<br><span class="css">    <span class="hljs-attribute">position</span>: absolute;</span><br><span class="css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">20px</span>;</span><br><span class="css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">20px</span>;</span><br><span class="css">    <span class="hljs-attribute">display</span>: block;</span><br><span class="css">    <span class="hljs-attribute">background</span>: white;</span><br><span class="css">    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(-<span class="hljs-number">50%</span>) <span class="hljs-built_in">rotate</span>(<span class="hljs-number">45deg</span>);</span><br>  &#125;<br><br>  .bio &#123;<br><span class="css">    <span class="hljs-attribute">min-width</span>: <span class="hljs-number">500px</span>;</span><br><span class="css">    <span class="hljs-attribute">display</span>: flex;</span><br><span class="css">    <span class="hljs-attribute">justify-content</span>: center;</span><br><span class="css">    <span class="hljs-attribute">align-items</span>: center;</span><br><span class="css">    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.7</span>;</span><br>  &#125;<br><br><span class="css">  <span class="hljs-selector-class">.bio</span> <span class="hljs-selector-tag">img</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">float</span>: left;</span><br><span class="css">    <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">20px</span>;</span><br>  &#125;<br><br>  .courses &#123;<br><span class="css">    <span class="hljs-attribute">min-width</span>: <span class="hljs-number">300px</span>;</span><br>  &#125;<br><br><span class="css">  <span class="hljs-selector-class">.courses</span> <span class="hljs-selector-tag">li</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0</span>;</span><br><span class="css">    <span class="hljs-attribute">display</span>: block;</span><br><span class="css">    <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.2</span>);</span><br>  &#125;<br><br><span class="css">  <span class="hljs-selector-class">.dropdown</span> <span class="hljs-selector-tag">a</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">text-decoration</span>: none;</span><br><span class="css">    <span class="hljs-attribute">color</span>: <span class="hljs-number">#ffc600</span>;</span><br>  &#125;<br><br><span class="css">  <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.button</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">background</span>: black;</span><br><span class="css">    <span class="hljs-attribute">display</span>: block;</span><br><span class="css">    <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;</span><br><span class="css">    <span class="hljs-attribute">color</span>: white;</span><br><span class="css">    <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">10px</span>;</span><br>  &#125;<br><br><span class="css">  <span class="hljs-comment">/* Matches Twitter, TWITTER, twitter, tWitter, TWiTTeR... */</span></span><br><span class="css">  <span class="hljs-selector-class">.button</span><span class="hljs-selector-attr">[href*=twitter]</span> &#123; <span class="hljs-attribute">background</span>: <span class="hljs-number">#019FE9</span>; &#125;</span><br><span class="css">  <span class="hljs-selector-class">.button</span><span class="hljs-selector-attr">[href*=facebook]</span> &#123; <span class="hljs-attribute">background</span>: <span class="hljs-number">#3B5998</span>; &#125;</span><br><span class="css">  <span class="hljs-selector-class">.button</span><span class="hljs-selector-attr">[href*=courses]</span> &#123; <span class="hljs-attribute">background</span>: <span class="hljs-number">#ffc600</span>; &#125;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h2 id="CSS-step-by-step"><a href="#CSS-step-by-step" class="headerlink" title="CSS - step by step"></a>CSS - step by step</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.dropdown</span> &#123;<br>  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">overflow</span>: hidden;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;<br>  <span class="hljs-attribute">top</span>: -<span class="hljs-number">20px</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">2px</span>;<br>  <span class="hljs-attribute">transition</span>: all <span class="hljs-number">0.5s</span>;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">100px</span>);<br>  will-change: opacity;<br>  <span class="hljs-attribute">display</span>: none;<br>&#125;<br><br><span class="hljs-selector-class">.trigger-enter</span> <span class="hljs-selector-class">.dropdown</span> &#123;<br>  <span class="hljs-attribute">display</span>: block;<br>&#125;<br><br><span class="hljs-selector-class">.trigger-enter-active</span> <span class="hljs-selector-class">.dropdown</span> &#123;<br>  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，先把觸發對象和條件先建構出來！分別抓到 <code>NodeList</code>、<code>dropdownBackground</code>、<code>nav class=&quot;top&quot;</code> 三個元素，其中將 <code>NodeList</code> 的中的 li 透過 <code>foreach</code> 迴圈抓出每個 li 並觸發監聽事件 <code>mouseenter</code>、<code>mouseleave</code> 兩項，並執行 <code>handleEnter</code>、<code>handleLeave</code> 兩個方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;  <br><span class="hljs-keyword">const</span> triggers = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&quot;.cool &gt; li&quot;</span>);<br>  <span class="hljs-keyword">const</span> background = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;.dropdownBackground&quot;</span>);<br>  <span class="hljs-keyword">const</span> nav = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;.top&quot;</span>);<br><br>  <span class="hljs-comment">//NodeList(3) [li, li, li]</span><br>  <span class="hljs-comment">//&lt;div class=&quot;dropdownBackground&quot;&gt;&lt;span class=&quot;arrow&quot;&gt;&lt;/span&gt;&lt;/div&gt;</span><br>  <span class="hljs-comment">//&lt;nav class=&quot;top&quot;&gt;...&lt;/nav&gt;</span><br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">handleEnter</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-comment">//..</span><br>  &#125;<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">handleLeave</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-comment">//..</span><br>  &#125;<br><br>  triggers.forEach(<span class="hljs-function"><span class="hljs-params">trigger</span> =&gt;</span> trigger.addEventListener(<span class="hljs-string">&quot;mouseenter&quot;</span>, handleEnter));<br>  triggers.forEach(<span class="hljs-function"><span class="hljs-params">trigger</span> =&gt;</span> trigger.addEventListener(<span class="hljs-string">&quot;mouseleave&quot;</span>, handleLeave));<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>滑鼠移入後，第一個先將 <code>display:none</code> 屬性更改掉，另一個利用 <code>setTimeout()</code> 方法，延遲一段時間後更改內容的透明度，而當滑鼠移開時，則是同時移除：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;  <br><span class="hljs-keyword">const</span> triggers = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&quot;.cool &gt; li&quot;</span>);<br>  <span class="hljs-keyword">const</span> background = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;.dropdownBackground&quot;</span>);<br>  <span class="hljs-keyword">const</span> nav = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;.top&quot;</span>);<br><br>  <span class="hljs-comment">//NodeList(3) [li, li, li]</span><br>  <span class="hljs-comment">//&lt;div class=&quot;dropdownBackground&quot;&gt;&lt;span class=&quot;arrow&quot;&gt;&lt;/span&gt;&lt;/div&gt;</span><br>  <span class="hljs-comment">//&lt;nav class=&quot;top&quot;&gt;...&lt;/nav&gt;</span><br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">handleEnter</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.classList.add(<span class="hljs-string">&#x27;trigger-enter&#x27;</span>);<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.classList.contains(<span class="hljs-string">&#x27;trigger-enter&#x27;</span>)) &#123;<br>        <span class="hljs-built_in">this</span>.classList.add(<span class="hljs-string">&#x27;trigger-enter-active&#x27;</span>)<br>      &#125;<br>    &#125;, <span class="hljs-number">150</span>)<br>    background.classList.add(<span class="hljs-string">&#x27;open&#x27;</span>);<br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">handleLeave</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-comment">//..</span><br>  &#125;<br><br>  triggers.forEach(<span class="hljs-function"><span class="hljs-params">trigger</span> =&gt;</span> trigger.addEventListener(<span class="hljs-string">&quot;mouseenter&quot;</span>, handleEnter));<br>  triggers.forEach(<span class="hljs-function"><span class="hljs-params">trigger</span> =&gt;</span> trigger.addEventListener(<span class="hljs-string">&quot;mouseleave&quot;</span>, handleLeave));<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p> 滑鼠移出後，同時移除 <code>display:block</code> 和 <code>opacity</code> 兩個 Class</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;  <br><span class="hljs-keyword">const</span> triggers = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&quot;.cool &gt; li&quot;</span>);<br>  <span class="hljs-keyword">const</span> background = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;.dropdownBackground&quot;</span>);<br>  <span class="hljs-keyword">const</span> nav = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;.top&quot;</span>);<br><br>  <span class="hljs-comment">//NodeList(3) [li, li, li]</span><br>  <span class="hljs-comment">//&lt;div class=&quot;dropdownBackground&quot;&gt;&lt;span class=&quot;arrow&quot;&gt;&lt;/span&gt;&lt;/div&gt;</span><br>  <span class="hljs-comment">//&lt;nav class=&quot;top&quot;&gt;...&lt;/nav&gt;</span><br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">handleEnter</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-comment">//略</span><br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">handleLeave</span>(<span class="hljs-params"></span>) </span>&#123;<br>    background.classList.remove(<span class="hljs-string">&#x27;open&#x27;</span>);<br>    <span class="hljs-built_in">this</span>.classList.remove(<span class="hljs-string">&#x27;trigger-enter&#x27;</span>, <span class="hljs-string">&#x27;trigger-enter-active&#x27;</span>);<br>  &#125;<br><br>  triggers.forEach(<span class="hljs-function"><span class="hljs-params">trigger</span> =&gt;</span> trigger.addEventListener(<span class="hljs-string">&quot;mouseenter&quot;</span>, handleEnter));<br>  triggers.forEach(<span class="hljs-function"><span class="hljs-params">trigger</span> =&gt;</span> trigger.addEventListener(<span class="hljs-string">&quot;mouseleave&quot;</span>, handleLeave));<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>就大功告成啦！如果想看看更炫砲一點的效果，可以參考底下的程式碼w</p><h2 id="JS-final"><a href="#JS-final" class="headerlink" title="JS - final"></a>JS - final</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> triggers = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;.cool &gt; li&#x27;</span>);<br>  <span class="hljs-keyword">const</span> background  = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.dropdownBackground&#x27;</span>);<br>  <span class="hljs-keyword">const</span> nav  = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.top&#x27;</span>);<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">handleEnter</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.classList.add(<span class="hljs-string">&#x27;trigger-enter&#x27;</span>);<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">this</span>.classList.contains(<span class="hljs-string">&#x27;trigger-enter&#x27;</span>) &amp;&amp; <span class="hljs-built_in">this</span>.classList.add(<span class="hljs-string">&#x27;trigger-enter-active&#x27;</span>), <span class="hljs-number">150</span>);<br>    background.classList.add(<span class="hljs-string">&#x27;open&#x27;</span>);<br><br>    <span class="hljs-keyword">const</span> dropdown = <span class="hljs-built_in">this</span>.querySelector(<span class="hljs-string">&#x27;.dropdown&#x27;</span>);<br>    <span class="hljs-keyword">const</span> dropdownCoords = dropdown.getBoundingClientRect();<br>    <span class="hljs-keyword">const</span> navCoords = nav.getBoundingClientRect();<br><br>    <span class="hljs-keyword">const</span> coords = &#123;<br>      height: dropdownCoords.height,<br>      width: dropdownCoords.width,<br>      top: dropdownCoords.top - navCoords.top,<br>      left: dropdownCoords.left - navCoords.left<br>    &#125;;<br><br>    background.style.setProperty(<span class="hljs-string">&#x27;width&#x27;</span>, <span class="hljs-string">`<span class="hljs-subst">$&#123;coords.width&#125;</span>px`</span>);<br>    background.style.setProperty(<span class="hljs-string">&#x27;height&#x27;</span>, <span class="hljs-string">`<span class="hljs-subst">$&#123;coords.height&#125;</span>px`</span>);<br>    background.style.setProperty(<span class="hljs-string">&#x27;transform&#x27;</span>, <span class="hljs-string">`translate(<span class="hljs-subst">$&#123;coords.left&#125;</span>px, <span class="hljs-subst">$&#123;coords.top&#125;</span>px)`</span>);<br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">handleLeave</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.classList.remove(<span class="hljs-string">&#x27;trigger-enter&#x27;</span>, <span class="hljs-string">&#x27;trigger-enter-active&#x27;</span>);<br>    background.classList.remove(<span class="hljs-string">&#x27;open&#x27;</span>);<br>  &#125;<br><br>  triggers.forEach(<span class="hljs-function"><span class="hljs-params">trigger</span> =&gt;</span> trigger.addEventListener(<span class="hljs-string">&#x27;mouseenter&#x27;</span>, handleEnter));<br>  triggers.forEach(<span class="hljs-function"><span class="hljs-params">trigger</span> =&gt;</span> trigger.addEventListener(<span class="hljs-string">&#x27;mouseleave&#x27;</span>, handleLeave));<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>本刊同步於個人網站：<a href="http://chestertang.site/">http://chestertang.site/</a></p><p>本次範例程式碼原作者來源：<a href="https://tinyurl.com/yavm5f5n">https://tinyurl.com/yavm5f5n</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村25 - Event Capture, Propagation, Bubbling and Once</title>
    <link href="/2019/10/10/javascript25/"/>
    <url>/2019/10/10/javascript25/</url>
    
    <content type="html"><![CDATA[<h2 id="25-Event-Capture-Propagation-Bubbling-and-Once"><a href="#25-Event-Capture-Propagation-Bubbling-and-Once" class="headerlink" title="25 - Event Capture, Propagation, Bubbling and Once"></a>25 - Event Capture, Propagation, Bubbling and Once</h2><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h1 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h1><p>Only addEventListener！Only addEventListener！Only addEventListener！</p><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Understanding JavaScript&#x27;s Capture<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bod&quot;</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;one&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;two&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;three&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><span class="css">  <span class="hljs-selector-tag">html</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">box-sizing</span>: border-box;</span><br>  &#125;<br>  <br>  *, *:before, *:after &#123; <br><span class="css">    <span class="hljs-attribute">box-sizing</span>: inherit; </span><br>  &#125;<br><br><span class="css">  <span class="hljs-selector-tag">div</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">    <span class="hljs-attribute">padding</span>: <span class="hljs-number">100px</span>;</span><br>  &#125;<br><br>  .one &#123;<br><span class="css">    <span class="hljs-attribute">background</span>: thistle;</span><br>  &#125;<br><br>  .two &#123;<br><span class="css">    <span class="hljs-attribute">background</span>: mistyrose;</span><br>  &#125;<br><br>  .three &#123;<br><span class="css">    <span class="hljs-attribute">background</span>: coral;</span><br>  &#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><ol><li><p>Bubbling</p><ul><li><p>作業系統 到 瀏覽器 到 html 到 body 到 使用者 按的元素都會被觸發事件</p></li><li><p>事件預設的執行順序是從元素往上到 body</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs javascript">   &lt;script&gt;<br>     <span class="hljs-keyword">const</span> divs = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;div&#x27;</span>);<br>     <span class="hljs-keyword">const</span> button = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;button&#x27;</span>);<br>   <br>     button.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>       <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Click!!!&#x27;</span>);<br>     &#125;<br>   &lt;/script&gt;<br>   <span class="hljs-string">``</span><span class="hljs-string">`  </span><br><span class="hljs-string"></span><br><span class="hljs-string">2. Event Capture</span><br><span class="hljs-string"></span><br><span class="hljs-string">   - 瀏覽器做的事稱為捕捉</span><br><span class="hljs-string">   - 意思是你點擊元素以跟到樹梢的順序捕捉所有的事件（與Bubble相反）</span><br><span class="hljs-string"></span><br><span class="hljs-string">   `</span><span class="hljs-string">``</span>javascript<br>   &lt;script&gt;<br>     <span class="hljs-keyword">const</span> divs = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;div&#x27;</span>);<br>     <span class="hljs-keyword">const</span> button = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;button&#x27;</span>);<br>     <br>   <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">logText</span>(<span class="hljs-params">e</span>) </span>&#123;<br>       <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.classList.value);<br>       <span class="hljs-comment">// e.stopPropagation(); // stop bubbling!</span><br>       <span class="hljs-comment">// console.log(this);</span><br>     &#125;<br>   &lt;/script&gt;<br>   <span class="hljs-string">``</span><span class="hljs-string">`  </span><br><span class="hljs-string"></span><br><span class="hljs-string">3. Propagation</span><br><span class="hljs-string"></span><br><span class="hljs-string">   - `</span>stopPropagation()<span class="hljs-string">` 方法可阻止當前事件繼續進行捕捉及冒泡階段的傳遞</span><br><span class="hljs-string">   - 設定 `</span>capture:<span class="hljs-literal">false</span><span class="hljs-string">` 取消預設行為，變成「點到誰，就是誰」</span><br><span class="hljs-string">   - Event.stopPropagation()：https://tinyurl.com/yy2qfbew</span><br><span class="hljs-string"></span><br><span class="hljs-string">   `</span><span class="hljs-string">``</span>javascript<br>   &lt;script&gt;<br>     <span class="hljs-keyword">const</span> divs = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;div&#x27;</span>);<br>     <span class="hljs-keyword">const</span> button = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;button&#x27;</span>);<br>   <span class="hljs-comment">//略</span><br>   divs.forEach(<span class="hljs-function"><span class="hljs-params">div</span> =&gt;</span> div.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, logText, &#123;<br>       capture: <span class="hljs-literal">false</span>,<br>       once: <span class="hljs-literal">true</span><br>     &#125;));<br>   &lt;/script&gt;<br></code></pre></td></tr></table></figure></li><li><p>Once(new property)</p><ul><li>在 <code>addEventListener </code>的第三個參數加上 <code>once: false</code> 會將行預設行為</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> divs = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;div&#x27;</span>);<br>  <span class="hljs-keyword">const</span> button = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;button&#x27;</span>);<br><span class="hljs-comment">//略</span><br>button.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Click!!!&#x27;</span>);<br>  &#125;, &#123;<br>    once: <span class="hljs-literal">true</span><br>  &#125;);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>就大功告成啦！</p></li></ol><h2 id="JS-final"><a href="#JS-final" class="headerlink" title="JS - final"></a>JS - final</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> divs = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;div&#x27;</span>);<br>  <span class="hljs-keyword">const</span> button = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;button&#x27;</span>);<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">logText</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.classList.value);<br>    <span class="hljs-comment">// e.stopPropagation(); // stop bubbling!</span><br>    <span class="hljs-comment">// console.log(this);</span><br>  &#125;<br><br>  divs.forEach(<span class="hljs-function"><span class="hljs-params">div</span> =&gt;</span> div.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, logText, &#123;<br>    capture: <span class="hljs-literal">false</span>,<br>    once: <span class="hljs-literal">true</span><br>  &#125;));<br><br>  button.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Click!!!&#x27;</span>);<br>  &#125;, &#123;<br>    once: <span class="hljs-literal">true</span><br>  &#125;);<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>本刊同步於個人網站：<a href="http://chestertang.site/">http://chestertang.site/</a></p><p>本次範例程式碼原作者來源：<a href="https://tinyurl.com/yavm5f5n">https://tinyurl.com/yavm5f5n</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村24 - Sticky Nav</title>
    <link href="/2019/10/09/javascript24/"/>
    <url>/2019/10/09/javascript24/</url>
    
    <content type="html"><![CDATA[<h2 id="24-Sticky-Nav"><a href="#24-Sticky-Nav" class="headerlink" title="24 - Sticky Nav"></a>24 - Sticky Nav</h2><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h1 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h1><ul><li>功能<ul><li>Nav 到畫面最上面時要固定</li></ul></li><li>畫面<ul><li>Nav 固定在畫面上面時要露出 Logo</li><li>Nav 不固定時不露出 Logo</li></ul></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Sticky Nav<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;style-START.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>A story about getting lost.<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">nav</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;logo&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>LOST.<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Home<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>About<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Images<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Locations<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Maps<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;site-wrap&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Tempore tempora rerum, est autem cupiditate, corporis a qui libero ipsum delectus quidem dolor at nulla, adipisci veniam in reiciendis aut asperiores omnis blanditiis quod quas laborum nam! Fuga ad tempora in aspernatur pariatur fugit quibusdam dolores sunt esse magni, ut, dignissimos.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Tempore tempora rerum, est autem cupiditate, corporis a qui libero ipsum delectus quidem dolor at nulla, adipisci veniam in reiciendis aut asperiores omnis blanditiis quod quas laborum nam! Fuga ad tempora in aspernatur pariatur fugit quibusdam dolores sunt esse magni, ut, dignissimos.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Tempore tempora rerum, est autem cupiditate, corporis a qui libero ipsum delectus quidem dolor at nulla, adipisci veniam in reiciendis aut asperiores omnis blanditiis quod quas laborum nam! Fuga ad tempora in aspernatur pariatur fugit quibusdam dolores sunt esse magni, ut, dignissimos.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Tempore tempora rerum, est autem cupiditate, corporis a qui libero ipsum delectus quidem dolor at nulla, adipisci veniam in reiciendis aut asperiores omnis blanditiis quod quas laborum nam! Fuga ad tempora in aspernatur pariatur fugit quibusdam dolores sunt esse magni, ut, dignissimos.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Tempore tempora rerum, est autem cupiditate, corporis a qui libero ipsum delectus quidem dolor at nulla, adipisci veniam in reiciendis aut asperiores omnis blanditiis quod quas laborum nam! Fuga ad tempora in aspernatur pariatur fugit quibusdam dolores sunt esse magni, ut, dignissimos.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Tempore tempora rerum, est autem cupiditate, corporis a qui libero ipsum delectus quidem dolor at nulla, adipisci veniam in reiciendis aut asperiores omnis blanditiis quod quas laborum nam! Fuga ad tempora in aspernatur pariatur fugit quibusdam dolores sunt esse magni, ut, dignissimos.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Tempore tempora rerum, est autem cupiditate, corporis a qui libero ipsum delectus quidem dolor at nulla, adipisci veniam in reiciendis aut asperiores omnis blanditiis quod quas laborum nam! Fuga ad tempora in aspernatur pariatur fugit quibusdam dolores sunt esse magni, ut, dignissimos.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Tempore tempora rerum, est autem cupiditate, corporis a qui libero ipsum delectus quidem dolor at nulla, adipisci veniam in reiciendis aut asperiores omnis blanditiis quod quas laborum nam! Fuga ad tempora in aspernatur pariatur fugit quibusdam dolores sunt esse magni, ut, dignissimos.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Tempore tempora rerum, est autem cupiditate, corporis a qui libero ipsum delectus quidem dolor at nulla, adipisci veniam in reiciendis aut asperiores omnis blanditiis quod quas laborum nam! Fuga ad tempora in aspernatur pariatur fugit quibusdam dolores sunt esse magni, ut, dignissimos.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Tempore tempora rerum, est autem cupiditate, corporis a qui libero ipsum delectus quidem dolor at nulla, adipisci veniam in reiciendis aut asperiores omnis blanditiis quod quas laborum nam! Fuga ad tempora in aspernatur pariatur fugit quibusdam dolores sunt esse magni, ut, dignissimos.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://unsplash.it/400/400&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;align-left slide-in&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Voluptates, deserunt facilis et iste corrupti omnis tenetur est. Iste ut est dicta dolor itaque adipisci, dolorum minima, veritatis earum provident error molestias. Ratione magni illo sint vel velit ut excepturi consectetur suscipit, earum modi accusamus voluptatem nostrum, praesentium numquam, reiciendis voluptas sit id quisquam. Consequatur in quis reprehenderit modi perspiciatis necessitatibus saepe, quidem, suscipit iure natus dignissimos ipsam, eligendi deleniti accusantium, rerum quibusdam fugit perferendis et optio recusandae sed ratione. Culpa, dolorum reprehenderit harum ab voluptas fuga, nisi eligendi natus maiores illum quas quos et aperiam aut doloremque optio maxime fugiat doloribus. Eum dolorum expedita quam, nesciunt<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://unsplash.it/400/400&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;align-right slide-in&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span> at provident praesentium atque quas rerum optio dignissimos repudiandae ullam illum quibusdam. Vel ad error quibusdam, illo ex totam placeat. Quos excepturi fuga, molestiae ea quisquam minus, ratione dicta consectetur officia omnis, doloribus voluptatibus? Veniam ipsum veritatis architecto, provident quas consequatur doloremque quam quidem earum expedita, ad delectus voluptatum, omnis praesentium nostrum qui aspernatur ea eaque adipisci et cumque ab? Ea voluptatum dolore itaque odio. Eius minima distinctio harum, officia ab nihil exercitationem. Tempora rem nemo nam temporibus molestias facilis minus ipsam quam doloribus consequatur debitis nesciunt tempore officiis aperiam quisquam, molestiae voluptates cum, fuga culpa. Distinctio accusamus quibusdam, tempore perspiciatis dolorum optio facere consequatur quidem ullam beatae architecto, ipsam sequi officiis dignissimos amet impedit natus necessitatibus tenetur repellendus dolor rem! Dicta dolorem, iure, facilis illo ex nihil ipsa amet officia, optio temporibus eum autem odit repellendus nisi. Possimus modi, corrupti error debitis doloribus dicta libero earum, sequi porro ut excepturi nostrum ea voluptatem nihil culpa? Ullam expedita eligendi obcaecati reiciendis velit provident omnis quas qui in corrupti est dolore facere ad hic, animi soluta assumenda consequuntur reprehenderit! Voluptate dolor nihil veniam laborum voluptas nisi pariatur sed optio accusantium quam consectetur, corrupti, sequi et consequuntur, excepturi doloremque. Tempore quis velit corporis neque fugit non sequi eaque rem hic. Facere, inventore, aspernatur. Accusantium modi atque, asperiores qui nobis soluta cumque suscipit excepturi possimus doloremque odit saepe perferendis temporibus molestiae nostrum voluptatum quis id sint quidem nesciunt culpa. Rerum labore dolor beatae blanditiis praesentium explicabo velit optio esse aperiam similique, voluptatem cum, maiores ipsa tempore. Reiciendis sed culpa atque inventore, nam ullam enim expedita consectetur id velit iusto alias vitae explicabo nemo neque odio reprehenderit soluta sint eaque. Aperiam, qui ut tenetur, voluptate doloremque officiis dicta quaerat voluptatem rerum natus magni. Eum amet autem dolor ullam.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Distinctio maiores adipisci quibusdam repudiandae dolor vero placeat esse sit! Quibusdam saepe aperiam explicabo placeat optio, consequuntur nihil voluptatibus expedita quia vero perferendis, deserunt et incidunt eveniet temporibus doloremque possimus facilis. Possimus labore, officia dolore! Eaque ratione saepe, alias harum laboriosam deserunt laudantium blanditiis eum explicabo placeat reiciendis labore iste sint. Consectetur expedita dignissimos, non quos distinctio, eos rerum facilis eligendi. Asperiores laudantium, rerum ratione consequatur, culpa consectetur possimus atque ab tempore illum non dolor nesciunt. Neque, rerum. A vel non incidunt, quod doloremque dignissimos necessitatibus aliquid laboriosam architecto at cupiditate commodi expedita in, quae blanditiis. Deserunt labore sequi, repellat laboriosam est, doloremque culpa reiciendis tempore excepturi. Enim nostrum fugit itaque vel corporis ullam sed tenetur ipsa qui rem quam error sint, libero. Laboriosam rem, ratione. Autem blanditiis laborum neque repudiandae quam, cumque, voluptate veritatis itaque, placeat veniam ad nisi. Expedita, laborum reprehenderit ratione soluta velit natus, odit mollitia. Corporis rerum minima fugiat in nostrum. Assumenda natus cupiditate hic quidem ex, quas, amet ipsum esse dolore facilis beatae maxime qui inventore, iste? Maiores dignissimos dolore culpa debitis voluptatem harum, excepturi enim reiciendis, tempora ab ipsam illum aspernatur quasi qui porro saepe iure sunt eligendi tenetur quaerat ducimus quas sequi omnis aperiam suscipit! Molestiae obcaecati officiis quo, ratione eveniet, provident pariatur. Veniam quasi expedita distinctio, itaque molestiae sequi, dolorum nisi repellendus quia facilis iusto dignissimos nam? Tenetur fugit quos autem nihil, perspiciatis expedita enim tempore, alias ab maiores quis necessitatibus distinctio molestias eum, quidem. Delectus impedit quidem laborum, fugit vel neque quo, ipsam, quasi aspernatur quas odio nihil? Veniam amet reiciendis blanditiis quis reprehenderit repudiandae neque, ab ducimus, odit excepturi voluptate saepe ipsam. Voluptatem eum error voluptas porro officiis, amet! Molestias, fugit, ut! Tempore non magnam, amet, facere ducimus accusantium eos veritatis neque.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://unsplash.it/400/400&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;align-right slide-in&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Distinctio maiores adipisci quibusdam repudiandae dolor vero placeat esse sit! Quibusdam saepe aperiam explicabo placeat optio, consequuntur nihil voluptatibus expedita quia vero perferendis, deserunt et incidunt eveniet temporibus doloremque possimus facilis. Possimus labore, officia dolore! Eaque ratione saepe, alias harum laboriosam deserunt laudantium blanditiis eum explicabo placeat reiciendis labore iste sint. Consectetur expedita dignissimos, non quos distinctio, eos rerum facilis eligendi. Asperiores laudantium, rerum ratione consequatur, culpa consectetur possimus atque ab tempore illum non dolor nesciunt. Neque, rerum. A vel non incidunt, quod doloremque dignissimos necessitatibus aliquid laboriosam architecto at cupiditate commodi expedita in, quae blanditiis. Deserunt labore sequi, repellat laboriosam est, doloremque culpa reiciendis tempore excepturi. Enim nostrum fugit itaque vel corporis ullam sed tenetur ipsa qui rem quam error sint, libero. Laboriosam rem, ratione. Autem blanditiis laborum neque repudiandae quam, cumque, voluptate veritatis itaque, placeat veniam ad nisi. Expedita, laborum reprehenderit ratione soluta velit natus, odit mollitia. Corporis rerum minima fugiat in nostrum. Assumenda natus cupiditate hic quidem ex, quas, amet ipsum esse dolore facilis beatae maxime qui inventore, iste? Maiores dignissimos dolore culpa debitis voluptatem harum, excepturi enim reiciendis, tempora ab ipsam illum aspernatur quasi qui porro saepe iure sunt eligendi tenetur quaerat ducimus quas sequi omnis aperiam suscipit! Molestiae obcaecati officiis quo, ratione eveniet, provident pariatur. Veniam quasi expedita distinctio, itaque molestiae sequi, dolorum nisi repellendus quia facilis iusto dignissimos nam? Tenetur fugit quos autem nihil, perspiciatis expedita enim tempore, alias ab maiores quis necessitatibus distinctio molestias eum, quidem. Delectus impedit quidem laborum, fugit vel neque quo, ipsam, quasi aspernatur quas odio nihil? Veniam amet reiciendis blanditiis quis reprehenderit repudiandae neque, ab ducimus, odit excepturi voluptate saepe ipsam. Voluptatem eum error voluptas porro officiis, amet! Molestias, fugit, ut! Tempore non magnam, amet, facere ducimus accusantium eos veritatis neque.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Distinctio maiores adipisci quibusdam repudiandae dolor vero placeat esse sit! Quibusdam saepe aperiam explicabo placeat optio, consequuntur nihil voluptatibus expedita quia vero perferendis, deserunt et incidunt eveniet temporibus doloremque possimus facilis. Possimus labore, officia dolore! Eaque ratione saepe, alias harum laboriosam deserunt laudantium blanditiis eum explicabo placeat reiciendis labore iste sint. Consectetur expedita dignissimos, non quos distinctio, eos rerum facilis eligendi. Asperiores laudantium, rerum ratione consequatur, culpa consectetur possimus atque ab tempore illum non dolor nesciunt. Neque, rerum. A vel non incidunt, quod doloremque dignissimos necessitatibus aliquid laboriosam architecto at cupiditate commodi expedita in, quae blanditiis. Deserunt labore sequi, repellat laboriosam est, doloremque culpa reiciendis tempore excepturi. Enim nostrum fugit itaque vel corporis ullam sed tenetur ipsa qui rem quam error sint, libero. Laboriosam rem, ratione. Autem blanditiis laborum neque repudiandae quam, cumque, voluptate veritatis itaque, placeat veniam ad nisi. Expedita, laborum reprehenderit ratione soluta velit natus, odit mollitia. Corporis rerum minima fugiat in nostrum. Assumenda natus cupiditate hic quidem ex, quas, amet ipsum esse dolore facilis beatae maxime qui inventore, iste? Maiores dignissimos dolore culpa debitis voluptatem harum, excepturi enim reiciendis, tempora ab ipsam illum aspernatur quasi qui porro saepe iure sunt eligendi tenetur quaerat ducimus quas sequi omnis aperiam suscipit! Molestiae obcaecati officiis quo, ratione eveniet, provident pariatur. Veniam quasi expedita distinctio, itaque molestiae sequi, dolorum nisi repellendus quia facilis iusto dignissimos nam? Tenetur fugit quos autem nihil, perspiciatis expedita enim tempore, alias ab maiores quis necessitatibus distinctio molestias eum, quidem. Delectus impedit quidem laborum, fugit vel neque quo, ipsam, quasi aspernatur quas odio nihil? Veniam amet reiciendis blanditiis quis reprehenderit repudiandae neque, ab ducimus, odit excepturi voluptate saepe ipsam. Voluptatem eum error voluptas porro officiis, amet! Molestias, fugit, ut! Tempore non magnam, amet, facere ducimus accusantium eos veritatis neque.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="style-START-css"><a href="#style-START-css" class="headerlink" title="style_START.css"></a>style_START.css</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">html</span> &#123;<br>  <span class="hljs-attribute">box-sizing</span>: border-box;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#eeeeee</span>;<br>  <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;helvetica neue&#x27;</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;<br>  <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">200</span>;<br>&#125;<br><br><span class="hljs-selector-tag">body</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>&#125;<br><br>*, *:before, *:after &#123;<br>  box-sizing: inherit;<br>&#125;<br><br><span class="hljs-selector-class">.site-wrap</span> &#123;<br>  <span class="hljs-attribute">max-width</span>: <span class="hljs-number">700px</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">70px</span> auto;<br>  <span class="hljs-attribute">background</span>: white;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">40px</span>;<br>  <span class="hljs-attribute">text-align</span>: justify;<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">10px</span> <span class="hljs-number">5px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.05</span>);<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scale</span>(<span class="hljs-number">0.98</span>);<br>  <span class="hljs-attribute">transition</span>: transform <span class="hljs-number">0.5s</span>;<br>&#125;<br><br><span class="hljs-selector-tag">header</span> &#123;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">50vh</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">http://wes.io/iEgP/wow-so-deep.jpg</span>) bottom center no-repeat;<br>  <span class="hljs-attribute">background-size</span>: cover;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">align-items</span>: center;<br>  <span class="hljs-attribute">justify-content</span>: center;<br>&#125;<br><br><span class="hljs-selector-tag">h1</span> &#123;<br>  <span class="hljs-attribute">color</span>: white;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">7vw</span>;<br>  <span class="hljs-attribute">text-shadow</span>: <span class="hljs-number">3px</span> <span class="hljs-number">4px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.2</span>);<br>&#125;<br><br><span class="hljs-selector-tag">nav</span> &#123;<br>  <span class="hljs-attribute">background</span>: black;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">transition</span>: all <span class="hljs-number">0.5s</span>;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">z-index</span>: <span class="hljs-number">1</span>;<br>&#125;<br><br><span class="hljs-selector-tag">nav</span> <span class="hljs-selector-tag">ul</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">padding</span>:<span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">list-style</span>: none;<br>  <span class="hljs-attribute">display</span>: flex;<br>&#125;<br><br><span class="hljs-selector-tag">nav</span> <span class="hljs-selector-tag">li</span> &#123;<br>  <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">justify-content</span>: center;<br>  <span class="hljs-attribute">align-items</span>: center;<br>&#125;<br><br><span class="hljs-selector-tag">li</span><span class="hljs-selector-class">.logo</span> &#123;<br>  <span class="hljs-attribute">max-width</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">overflow</span>: hidden;<br>  <span class="hljs-attribute">background</span>: white;<br>  <span class="hljs-attribute">transition</span>: all .<span class="hljs-number">5s</span>;<br>  <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">600</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">30px</span>;<br>&#125;<br><br><span class="hljs-selector-tag">li</span><span class="hljs-selector-class">.logo</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">color</span>: black;<br>&#125;<br><br><span class="hljs-selector-tag">nav</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">text-decoration</span>: none;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">color</span>: white;<br>  <span class="hljs-attribute">transition</span>: all <span class="hljs-number">0.2s</span>;<br>  <span class="hljs-attribute">text-transform</span>: uppercase;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="CSS-step-by-step"><a href="#CSS-step-by-step" class="headerlink" title="CSS - step by step"></a>CSS - step by step</h2><p>首先，要先準備好會更動的 CSS，其中我們知道當畫面往下滑的時候，Nav 會定在視窗的上方並且有陰影及限制寬度，因此可以先將 Class 補上，方便稍後 JS觸發時更動這個 Class</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">body</span><span class="hljs-selector-class">.fixed-nav</span> <span class="hljs-selector-tag">nav</span> &#123;<br>  <span class="hljs-attribute">position</span>: fixed;<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.1</span>);<br>&#125; <br><br><span class="hljs-selector-class">.fixed-nav</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-class">.logo</span> &#123;<br>  <span class="hljs-attribute">max-width</span>: <span class="hljs-number">500px</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，先抓到整個 Nav 的 ID <code>#main</code> ，並且設定變數 <code>topOfNav</code> 為 Nav 的 <code>offsetTop</code></p><p>HTMLElement.offsetTop：<a href="https://tinyurl.com/yymxkgxa">https://tinyurl.com/yymxkgxa</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><span class="hljs-keyword">const</span> nav = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#main&#x27;</span>);<br>  <span class="hljs-keyword">let</span> topOfNav = nav.offsetTop;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>透過 <code>addEventListener</code> 監聽當視窗移動滑動時，會觸發方法 <code>fixNav</code></p><p>Document: scroll event：<a href="https://tinyurl.com/y3tq6mfw">https://tinyurl.com/y3tq6mfw</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><span class="hljs-keyword">const</span> nav = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#main&#x27;</span>);<br>  <span class="hljs-keyword">let</span> topOfNav = nav.offsetTop;<br>  <br>  <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&#x27;scroll&#x27;</span>, fixNav);<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fixNav</span>(<span class="hljs-params">e</span>)</span>&#123;<br>    <span class="hljs-built_in">console</span>.log(e);<br>  &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>最後再來判斷什麼時候要將之前設定的 Class 加上去 Nav 上寫入判斷是吧！</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><span class="hljs-keyword">const</span> nav = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#main&#x27;</span>);<br>  <span class="hljs-keyword">let</span> topOfNav = nav.offsetTop;<br>  <br>  <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&#x27;scroll&#x27;</span>, fixNav);<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fixNav</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">window</span>.scrollY &gt;= topOfNav) &#123;<br>      <span class="hljs-built_in">document</span>.body.classList.add(<span class="hljs-string">&#x27;fixed-nav&#x27;</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-built_in">document</span>.body.classList.remove(<span class="hljs-string">&#x27;fixed-nav&#x27;</span>);<br>    &#125;<br>  &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>就大功告成啦！</p><h2 id="JS-final"><a href="#JS-final" class="headerlink" title="JS - final"></a>JS - final</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><span class="hljs-keyword">const</span> nav = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#main&#x27;</span>);<br>  <span class="hljs-keyword">let</span> topOfNav = nav.offsetTop;<br>  <br>  <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&#x27;scroll&#x27;</span>, fixNav);<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fixNav</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">window</span>.scrollY &gt;= topOfNav) &#123;<br>      <span class="hljs-built_in">document</span>.body.classList.add(<span class="hljs-string">&#x27;fixed-nav&#x27;</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-built_in">document</span>.body.classList.remove(<span class="hljs-string">&#x27;fixed-nav&#x27;</span>);<br>    &#125;<br>  &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>本刊同步於個人網站：<a href="http://chestertang.site/">http://chestertang.site/</a></p><p>本次範例程式碼原作者來源：<a href="https://tinyurl.com/yavm5f5n">https://tinyurl.com/yavm5f5n</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村23 - Speech Synthesis</title>
    <link href="/2019/10/08/javascript23/"/>
    <url>/2019/10/08/javascript23/</url>
    
    <content type="html"><![CDATA[<h2 id="23-Speech-Synthesis"><a href="#23-Speech-Synthesis" class="headerlink" title="23 - Speech Synthesis"></a>23 - Speech Synthesis</h2><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h1 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h1><p>語音輸出（speech synthesis）</p><ul><li>功能<ul><li>切換不同的聲音（語系）</li><li>調整說話速度（聲調改變）</li><li>調整咬字速度</li><li>要能輸入要唸的內容</li><li>可以觸發開始講、暫停</li><li>切換聲音時，會先暫停再開始講</li></ul></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Speech Synthesis<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&#x27;https://fonts.googleapis.com/css?family=Pacifico&#x27;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&#x27;stylesheet&#x27;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&#x27;text/css&#x27;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;style.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;voiceinator&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>The Voiceinator 5000<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;voice&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;voices&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>Select A Voice<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;rate&quot;</span>&gt;</span>Rate:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;rate&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">step</span>=<span class="hljs-string">&quot;0.1&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;pitch&quot;</span>&gt;</span>Pitch:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;pitch&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">step</span>=<span class="hljs-string">&quot;0.1&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span>Hello! I love JavaScript 👍<span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;stop&quot;</span>&gt;</span>Stop!<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;speak&quot;</span>&gt;</span>Speak<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，我們先將變數中的 msg 設定 text 值，也就是聲音要講的文字內容，在抓到值之前我們可以先看一下 <code>SpeechSynthesisUtterance</code> 裡面存放著什麼</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//SpeechSynthesisUtterance &#123;text: &quot;&quot;, lang: &quot;&quot;, voice: null, volume: -1, rate: -1, …&#125;</span><br></code></pre></td></tr></table></figure><p>透過 <code>querySelector</code> 抓取文字方塊內的 <code>value</code> ，並存進到上方的 text 之中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">msg.text = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;[name=&quot;text&quot;]&#x27;</span>).value;<br></code></pre></td></tr></table></figure><p>這時候就可以看到原本的 <code>SpeechSynthesisUtterance</code> 中的 <code>text</code> 值已經被更新了！</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> msg = <span class="hljs-keyword">new</span> SpeechSynthesisUtterance();<br>  <span class="hljs-keyword">let</span> voices = [];<br>  <span class="hljs-keyword">const</span> voicesDropdown = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;[name=&quot;voice&quot;]&#x27;</span>);<br>  <span class="hljs-keyword">const</span> options = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;[type=&quot;range&quot;], [name=&quot;text&quot;]&#x27;</span>);<br>  <span class="hljs-keyword">const</span> speakButton = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#speak&#x27;</span>);<br>  <span class="hljs-keyword">const</span> stopButton = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#stop&#x27;</span>);<br>  msg.text = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;[name=&quot;text&quot;]&#x27;</span>).value;<br><br><span class="hljs-comment">//SpeechSynthesisUtterance &#123;text: &quot;Hello! I love JavaScript 👍&quot;, lang: &quot;&quot;, voice: null, volume: -1, rate: -1, …&#125;</span><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>再來我們來將 <code>speechSynthesis</code> 加上監聽事件 <code>onvoiceschanged</code> 並觸發<code>populateVoices</code> 方法，透過 <code>SpeechSynthesis.getVoices()</code> 取得包含所有物件的陣列，並將資料加入下拉式選單 <code>Dropdown</code></p><p>SpeechSynthesis: voiceschanged event：<a href="https://tinyurl.com/y24evh2v">https://tinyurl.com/y24evh2v</a></p><p>SpeechSynthesis.getVoices()：<a href="https://tinyurl.com/ybxxro7q">https://tinyurl.com/ybxxro7q</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;  <br>  <span class="hljs-comment">// 上略</span><br>  speechSynthesis.addEventListener(<span class="hljs-string">&#x27;voiceschanged&#x27;</span>, populateVoices);<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">populateVoices</span>(<span class="hljs-params"></span>) </span>&#123;<br>    voices = <span class="hljs-built_in">this</span>.getVoices();<br>    voicesDropdown.innerHTML = voices<br>      .filter(<span class="hljs-function"><span class="hljs-params">voice</span> =&gt;</span> voice.lang.includes(<span class="hljs-string">&#x27;en&#x27;</span>))<br>      .map(<span class="hljs-function"><span class="hljs-params">voice</span> =&gt;</span> <span class="hljs-string">`&lt;option value=&quot;<span class="hljs-subst">$&#123;voice.name&#125;</span>&quot;&gt;<span class="hljs-subst">$&#123;voice.name&#125;</span> (<span class="hljs-subst">$&#123;voice.lang&#125;</span>)&lt;/option&gt;`</span>)<br>      .join(<span class="hljs-string">&#x27;&#x27;</span>);<br>  &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>接下來來將剛剛加入的下拉式選單與聲音連動起來吧！透過陣列尋找如果現在我們選擇的聲音資料與API那端的相符，就會以那個聲音觸發 <code>toggle</code> 方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;  <br>  <span class="hljs-comment">// 上略</span><br>voicesDropdown.addEventListener(<span class="hljs-string">&#x27;change&#x27;</span>, setVoice);<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setVoice</span>(<span class="hljs-params"></span>) </span>&#123;<br>    msg.voice = voices.find(<span class="hljs-function"><span class="hljs-params">voice</span> =&gt;</span> voice.name === <span class="hljs-built_in">this</span>.value);<br>    toggle();<br>  &#125;<br>&lt;/script&gt; <br></code></pre></td></tr></table></figure><p><code>toogle</code> 方法就單純許多，只是控制先執行取消發生、再執行說話</p><p>SpeechSynthesis.cancel()：<a href="https://tinyurl.com/yysl5zxs">https://tinyurl.com/yysl5zxs</a></p><p>SpeechSynthesis.speak()：<a href="https://tinyurl.com/yykz4obn">https://tinyurl.com/yykz4obn</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt; <br><span class="hljs-comment">// 上略</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">toggle</span>(<span class="hljs-params">startOver = <span class="hljs-literal">true</span></span>) </span>&#123;<br>    speechSynthesis.cancel();<br>    <span class="hljs-keyword">if</span> (startOver) &#123;<br>      speechSynthesis.speak(msg);<br>    &#125;<br>  &#125;<br>&lt;/script&gt; <br></code></pre></td></tr></table></figure><p>再來調整發音速度與音調的部分</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt; <br><span class="hljs-comment">// 上略</span><br>options.forEach(<span class="hljs-function"><span class="hljs-params">option</span> =&gt;</span> option.addEventListener(<span class="hljs-string">&#x27;change&#x27;</span>, setOption));<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setOption</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-comment">//console.log(this.name, this.value);</span><br>    msg[<span class="hljs-built_in">this</span>.name] = <span class="hljs-built_in">this</span>.value;<br>    toggle();<br>  &#125;<br>&lt;/script&gt; <br></code></pre></td></tr></table></figure><p>最後就將按鈕觸發 <code>click</code> 來播放、停止說話，來控制 <code>toggle</code> 就可以控制說話惹w</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> msg = <span class="hljs-keyword">new</span> SpeechSynthesisUtterance();<br>  <span class="hljs-keyword">let</span> voices = [];<br>  <span class="hljs-keyword">const</span> voicesDropdown = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;[name=&quot;voice&quot;]&#x27;</span>);<br>  <span class="hljs-keyword">const</span> options = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;[type=&quot;range&quot;], [name=&quot;text&quot;]&#x27;</span>);<br>  <span class="hljs-keyword">const</span> speakButton = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#speak&#x27;</span>);<br>  <span class="hljs-keyword">const</span> stopButton = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#stop&#x27;</span>);<br>  msg.text = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;[name=&quot;text&quot;]&#x27;</span>).value;<br>  <br>  speechSynthesis.addEventListener(<span class="hljs-string">&#x27;voiceschanged&#x27;</span>, populateVoices);<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">populateVoices</span>(<span class="hljs-params"></span>) </span>&#123;<br>    voices = <span class="hljs-built_in">this</span>.getVoices();<br>    voicesDropdown.innerHTML = voices<br>      .filter(<span class="hljs-function"><span class="hljs-params">voice</span> =&gt;</span> voice.lang.includes(<span class="hljs-string">&#x27;en&#x27;</span>))<br>      .map(<span class="hljs-function"><span class="hljs-params">voice</span> =&gt;</span> <span class="hljs-string">`&lt;option value=&quot;<span class="hljs-subst">$&#123;voice.name&#125;</span>&quot;&gt;<span class="hljs-subst">$&#123;voice.name&#125;</span> (<span class="hljs-subst">$&#123;voice.lang&#125;</span>)&lt;/option&gt;`</span>)<br>      .join(<span class="hljs-string">&#x27;&#x27;</span>);<br>  &#125;<br><br>  voicesDropdown.addEventListener(<span class="hljs-string">&#x27;change&#x27;</span>, setVoice);<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setVoice</span>(<span class="hljs-params"></span>) </span>&#123;<br>    msg.voice = voices.find(<span class="hljs-function"><span class="hljs-params">voice</span> =&gt;</span> voice.name === <span class="hljs-built_in">this</span>.value);<br>    toggle();<br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">toggle</span>(<span class="hljs-params">startOver = <span class="hljs-literal">true</span></span>) </span>&#123;<br>    speechSynthesis.cancel();<br>    <span class="hljs-keyword">if</span> (startOver) &#123;<br>      speechSynthesis.speak(msg);<br>    &#125;<br>  &#125;<br><br>  options.forEach(<span class="hljs-function"><span class="hljs-params">option</span> =&gt;</span> option.addEventListener(<span class="hljs-string">&#x27;change&#x27;</span>, setOption));<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setOption</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.name, <span class="hljs-built_in">this</span>.value);<br>    msg[<span class="hljs-built_in">this</span>.name] = <span class="hljs-built_in">this</span>.value;<br>    toggle();<br>  &#125;<br><br>  speakButton.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, toggle);<br>  stopButton.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-function">() =&gt;</span> toggle(<span class="hljs-literal">false</span>));<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>就大功告成啦！</p><h2 id="JS-final"><a href="#JS-final" class="headerlink" title="JS - final"></a>JS - final</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> msg = <span class="hljs-keyword">new</span> SpeechSynthesisUtterance();<br>  <span class="hljs-keyword">let</span> voices = [];<br>  <span class="hljs-keyword">const</span> voicesDropdown = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;[name=&quot;voice&quot;]&#x27;</span>);<br>  <span class="hljs-keyword">const</span> options = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;[type=&quot;range&quot;], [name=&quot;text&quot;]&#x27;</span>);<br>  <span class="hljs-keyword">const</span> speakButton = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#speak&#x27;</span>);<br>  <span class="hljs-keyword">const</span> stopButton = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;#stop&#x27;</span>);<br>  msg.text = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;[name=&quot;text&quot;]&#x27;</span>).value;<br>  <br>  speechSynthesis.addEventListener(<span class="hljs-string">&#x27;voiceschanged&#x27;</span>, populateVoices);<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">populateVoices</span>(<span class="hljs-params"></span>) </span>&#123;<br>    voices = <span class="hljs-built_in">this</span>.getVoices();<br>    voicesDropdown.innerHTML = voices<br>      .filter(<span class="hljs-function"><span class="hljs-params">voice</span> =&gt;</span> voice.lang.includes(<span class="hljs-string">&#x27;en&#x27;</span>))<br>      .map(<span class="hljs-function"><span class="hljs-params">voice</span> =&gt;</span> <span class="hljs-string">`&lt;option value=&quot;<span class="hljs-subst">$&#123;voice.name&#125;</span>&quot;&gt;<span class="hljs-subst">$&#123;voice.name&#125;</span> (<span class="hljs-subst">$&#123;voice.lang&#125;</span>)&lt;/option&gt;`</span>)<br>      .join(<span class="hljs-string">&#x27;&#x27;</span>);<br>  &#125;<br><br>  voicesDropdown.addEventListener(<span class="hljs-string">&#x27;change&#x27;</span>, setVoice);<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setVoice</span>(<span class="hljs-params"></span>) </span>&#123;<br>    msg.voice = voices.find(<span class="hljs-function"><span class="hljs-params">voice</span> =&gt;</span> voice.name === <span class="hljs-built_in">this</span>.value);<br>    toggle();<br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">toggle</span>(<span class="hljs-params">startOver = <span class="hljs-literal">true</span></span>) </span>&#123;<br>    speechSynthesis.cancel();<br>    <span class="hljs-keyword">if</span> (startOver) &#123;<br>      speechSynthesis.speak(msg);<br>    &#125;<br>  &#125;<br><br>  options.forEach(<span class="hljs-function"><span class="hljs-params">option</span> =&gt;</span> option.addEventListener(<span class="hljs-string">&#x27;change&#x27;</span>, setOption));<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setOption</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.name, <span class="hljs-built_in">this</span>.value);<br>    msg[<span class="hljs-built_in">this</span>.name] = <span class="hljs-built_in">this</span>.value;<br>    toggle();<br>  &#125;<br><br>  speakButton.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, toggle);<br>  stopButton.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-function">() =&gt;</span> toggle(<span class="hljs-literal">false</span>));<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>本刊同步於個人網站：<a href="http://chestertang.site/">http://chestertang.site/</a></p><p>本次範例程式碼原作者來源：<a href="https://tinyurl.com/yavm5f5n">https://tinyurl.com/yavm5f5n</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村22 - Follow Along Link Highlighter</title>
    <link href="/2019/10/07/javascript22/"/>
    <url>/2019/10/07/javascript22/</url>
    
    <content type="html"><![CDATA[<h2 id="22-Follow-Along-Link-Highlighter"><a href="#22-Follow-Along-Link-Highlighter" class="headerlink" title="22 - Follow Along Link Highlighter"></a>22 - Follow Along Link Highlighter</h2><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h1 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h1><ul><li>功能<ul><li>超連結Hover時，白色區塊要出現在該超連結區塊上</li></ul></li><li>畫面<ul><li>白色區塊的寬高要符合該超連結區塊</li><li>滑鼠進入另一個超連結區塊時，白色的區塊不會消失</li></ul></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>👀👀👀Follow Along Nav<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;style.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">nav</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;menu&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>Home<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>Order Status<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>Tweets<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>Read Our History<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>Contact Us<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;wrapper&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet, <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>consectetur<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> adipisicing elit. Est <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>explicabo<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> unde natus necessitatibus esse obcaecati distinctio, aut itaque, qui vitae!<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Aspernatur sapiente quae sint <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>soluta<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> modi, atque praesentium laborum pariatur earum <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>quaerat<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> cupiditate consequuntur facilis ullam dignissimos, aperiam quam veniam.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Cum ipsam quod, incidunt sit ex <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>tempore<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> placeat maxime <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>corrupti<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> possimus <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>veritatis<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> ipsum fugit recusandae est doloremque? Hic, <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>quibusdam<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>, nulla.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Esse quibusdam, ad, ducimus cupiditate <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>nulla<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>, quae magni odit <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>totam<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> ut consequatur eveniet sunt quam provident sapiente dicta neque quod.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Aliquam <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>dicta<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> sequi culpa fugiat <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>consequuntur<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> pariatur optio ad minima, maxime <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>odio<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>, distinctio magni impedit tempore enim repellendus <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>repudiandae<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> quas!<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">    <span class="hljs-comment">// 👀👀👀👀👀👀👀👀👀👀👀👀👀👀👀</span></span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，透過 <code>querySelectorAll</code> 將所有的 a 連結都找出來吧（這步驟應該很熟練了而且會是一個 NodeList(19) ），並且將帶有 Class <code>highlight</code> 的 <code>span</code> 附加在 <code>body</code> 上，這邊作者想表達的意思應該是可以透過 JS 來建立元素、新增Class 及寫進 HTML 之中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-comment">// 👀👀👀👀👀👀👀👀👀👀👀👀👀👀👀</span><br>    <span class="hljs-keyword">const</span> triggers = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;a&#x27;</span>);<br>    <span class="hljs-built_in">console</span>.log(triggers);<br>    <span class="hljs-keyword">const</span> highlight = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&#x27;span&#x27;</span>);<br>    <span class="hljs-built_in">console</span>.log(highlight);<br>    highlight.classList.add(<span class="hljs-string">&#x27;highlight&#x27;</span>);<br>    <span class="hljs-built_in">document</span>.body.appendChild(highlight);  <br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>接下來，每當使用者滑鼠移動到連結上就會觸發 <code>mouseenter</code> 事件，概念與  <code>mouseover</code> 大致相同，唯一的差別在於並不會冒泡</p><p>mouseenter：<a href="https://tinyurl.com/y6g3x4cs">https://tinyurl.com/y6g3x4cs</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-comment">// 👀👀👀👀👀👀👀👀👀👀👀👀👀👀👀</span><br>    <span class="hljs-keyword">const</span> triggers = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;a&#x27;</span>);<br>    <span class="hljs-built_in">console</span>.log(triggers);<br>    <span class="hljs-keyword">const</span> highlight = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&#x27;span&#x27;</span>);<br>    <span class="hljs-built_in">console</span>.log(highlight);<br>    highlight.classList.add(<span class="hljs-string">&#x27;highlight&#x27;</span>);<br>    <span class="hljs-built_in">document</span>.body.appendChild(highlight); <br>    <br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">highlightLink</span>(<span class="hljs-params"></span>) </span>&#123;<br><br>    &#125;<br><br>    triggers.forEach(<span class="hljs-function"><span class="hljs-params">a</span> =&gt;</span> a.addEventListener(<span class="hljs-string">&#x27;mouseenter&#x27;</span>, highlightLink));<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>當使用者觸發事件後，會呼叫 <code>highlightLink</code> 方法，其中會回傳 <code>Element.getBoundingClientRect()</code> 的 DOMRect 返回值對象，一組矩形的集合</p><p>Element.getBoundingClientRect()：<a href="https://tinyurl.com/yyxcclg7">https://tinyurl.com/yyxcclg7</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-comment">// 👀👀👀👀👀👀👀👀👀👀👀👀👀👀👀</span><br>    <span class="hljs-keyword">const</span> triggers = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;a&#x27;</span>);<br>    <span class="hljs-built_in">console</span>.log(triggers);<br>    <span class="hljs-keyword">const</span> highlight = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&#x27;span&#x27;</span>);<br>    <span class="hljs-built_in">console</span>.log(highlight);<br>    highlight.classList.add(<span class="hljs-string">&#x27;highlight&#x27;</span>);<br>    <span class="hljs-built_in">document</span>.body.appendChild(highlight); <br>    <br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">highlightLink</span>(<span class="hljs-params"></span>) </span>&#123;<br>      <span class="hljs-keyword">const</span> linkCoords = <span class="hljs-built_in">this</span>.getBoundingClientRect();<br>      <span class="hljs-built_in">console</span>.log(linkCoords);<br>    &#125;<br><br>    triggers.forEach(<span class="hljs-function"><span class="hljs-params">a</span> =&gt;</span> a.addEventListener(<span class="hljs-string">&#x27;mouseenter&#x27;</span>, highlightLink));<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>將回傳的長、寬、Ｘ軸、Ｙ軸設為變數 <code>coords</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-comment">// 👀👀👀👀👀👀👀👀👀👀👀👀👀👀👀</span><br>    <span class="hljs-keyword">const</span> triggers = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;a&#x27;</span>);<br>    <span class="hljs-built_in">console</span>.log(triggers);<br>    <span class="hljs-keyword">const</span> highlight = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&#x27;span&#x27;</span>);<br>    <span class="hljs-built_in">console</span>.log(highlight);<br>    highlight.classList.add(<span class="hljs-string">&#x27;highlight&#x27;</span>);<br>    <span class="hljs-built_in">document</span>.body.appendChild(highlight); <br>    <br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">highlightLink</span>(<span class="hljs-params"></span>) </span>&#123;<br>      <span class="hljs-keyword">const</span> linkCoords = <span class="hljs-built_in">this</span>.getBoundingClientRect();<br>      <span class="hljs-built_in">console</span>.log(linkCoords);<br>      <span class="hljs-keyword">const</span> coords = &#123;<br>      width: linkCoords.width,<br>      height: linkCoords.height,<br>      top: linkCoords.top + <span class="hljs-built_in">window</span>.scrollY,<br>      left: linkCoords.left + <span class="hljs-built_in">window</span>.scrollX<br>    &#125;;<br>    &#125;<br><br>    triggers.forEach(<span class="hljs-function"><span class="hljs-params">a</span> =&gt;</span> a.addEventListener(<span class="hljs-string">&#x27;mouseenter&#x27;</span>, highlightLink));<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>再當滑鼠滑到連結上時附加CSS</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-comment">// 👀👀👀👀👀👀👀👀👀👀👀👀👀👀👀</span><br>    <span class="hljs-keyword">const</span> triggers = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;a&#x27;</span>);<br>    <span class="hljs-built_in">console</span>.log(triggers);<br>    <span class="hljs-keyword">const</span> highlight = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&#x27;span&#x27;</span>);<br>    <span class="hljs-built_in">console</span>.log(highlight);<br>    highlight.classList.add(<span class="hljs-string">&#x27;highlight&#x27;</span>);<br>    <span class="hljs-built_in">document</span>.body.appendChild(highlight); <br>    <br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">highlightLink</span>(<span class="hljs-params"></span>) </span>&#123;<br>      <span class="hljs-keyword">const</span> linkCoords = <span class="hljs-built_in">this</span>.getBoundingClientRect();<br>      <span class="hljs-built_in">console</span>.log(linkCoords);<br>      <span class="hljs-keyword">const</span> coords = &#123;<br>      width: linkCoords.width,<br>      height: linkCoords.height,<br>      top: linkCoords.top + <span class="hljs-built_in">window</span>.scrollY,<br>      left: linkCoords.left + <span class="hljs-built_in">window</span>.scrollX<br>    &#125;;<br>    <br>    highlight.style.width = <span class="hljs-string">`<span class="hljs-subst">$&#123;coords.width&#125;</span>px`</span>;<br>    highlight.style.height = <span class="hljs-string">`<span class="hljs-subst">$&#123;coords.height&#125;</span>px`</span>;<br>    highlight.style.transform = <span class="hljs-string">`translate(<span class="hljs-subst">$&#123;coords.left&#125;</span>px, <span class="hljs-subst">$&#123;coords.top&#125;</span>px)`</span>;<br>    <span class="hljs-comment">//DOMRect &#123;x: 666.93359375, y: 100, width: 93.8671875, height: 32.5, top: 100, …&#125;</span><br>    &#125;<br><br>    triggers.forEach(<span class="hljs-function"><span class="hljs-params">a</span> =&gt;</span> a.addEventListener(<span class="hljs-string">&#x27;mouseenter&#x27;</span>, highlightLink));<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>就大功告成啦！</p><h2 id="JS-final"><a href="#JS-final" class="headerlink" title="JS - final"></a>JS - final</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-comment">// 👀👀👀👀👀👀👀👀👀👀👀👀👀👀👀</span><br>    <span class="hljs-keyword">const</span> triggers = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;a&#x27;</span>);<br>    <span class="hljs-built_in">console</span>.log(triggers);<br>    <span class="hljs-keyword">const</span> highlight = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&#x27;span&#x27;</span>);<br>    <span class="hljs-built_in">console</span>.log(highlight);<br>    highlight.classList.add(<span class="hljs-string">&#x27;highlight&#x27;</span>);<br>    <span class="hljs-built_in">document</span>.body.appendChild(highlight); <br>    <br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">highlightLink</span>(<span class="hljs-params"></span>) </span>&#123;<br>      <span class="hljs-keyword">const</span> linkCoords = <span class="hljs-built_in">this</span>.getBoundingClientRect();<br>      <span class="hljs-built_in">console</span>.log(linkCoords);<br>      <span class="hljs-keyword">const</span> coords = &#123;<br>      width: linkCoords.width,<br>      height: linkCoords.height,<br>      top: linkCoords.top + <span class="hljs-built_in">window</span>.scrollY,<br>      left: linkCoords.left + <span class="hljs-built_in">window</span>.scrollX<br>    &#125;;<br>    <br>    highlight.style.width = <span class="hljs-string">`<span class="hljs-subst">$&#123;coords.width&#125;</span>px`</span>;<br>    highlight.style.height = <span class="hljs-string">`<span class="hljs-subst">$&#123;coords.height&#125;</span>px`</span>;<br>    highlight.style.transform = <span class="hljs-string">`translate(<span class="hljs-subst">$&#123;coords.left&#125;</span>px, <span class="hljs-subst">$&#123;coords.top&#125;</span>px)`</span>;<br>    &#125;<br><br>    triggers.forEach(<span class="hljs-function"><span class="hljs-params">a</span> =&gt;</span> a.addEventListener(<span class="hljs-string">&#x27;mouseenter&#x27;</span>, highlightLink));<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>本刊同步於個人網站：<a href="http://chestertang.site/">http://chestertang.site/</a></p><p>本次範例程式碼原作者來源：<a href="https://tinyurl.com/yavm5f5n">https://tinyurl.com/yavm5f5n</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村21 - Speech Detection</title>
    <link href="/2019/10/06/javascript21/"/>
    <url>/2019/10/06/javascript21/</url>
    
    <content type="html"><![CDATA[<h2 id="21-Geolocation"><a href="#21-Geolocation" class="headerlink" title="21 - Geolocation"></a>21 - Geolocation</h2><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h1 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h1><p>地理資訊的功能</p><ul><li>功能<ul><li>抓到指北角度要改畫面</li><li>抓到移動速度要更新畫面</li></ul></li><li>畫面<ul><li>指北轉要旋轉</li><li>顯示移動速度</li></ul></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;arrow&quot;</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="hljs-attr">xmlns:xlink</span>=<span class="hljs-string">&quot;http://www.w3.org/1999/xlink&quot;</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;1.1&quot;</span> <span class="hljs-attr">x</span>=<span class="hljs-string">&quot;0px&quot;</span> <span class="hljs-attr">y</span>=<span class="hljs-string">&quot;0px&quot;</span> <span class="hljs-attr">viewBox</span>=<span class="hljs-string">&quot;0 0 64 64&quot;</span> <span class="hljs-attr">enable-background</span>=<span class="hljs-string">&quot;new 0 0 64 64&quot;</span> <span class="hljs-attr">xml:space</span>=<span class="hljs-string">&quot;preserve&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">g</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">fill</span>=<span class="hljs-string">&quot;#ffffff&quot;</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M32,1.824C15.361,1.824,1.825,15.361,1.825,32c0,16.639,13.537,30.176,30.175,30.176   S62.175,48.639,62.175,32C62.175,15.361,48.639,1.824,32,1.824z M29.715,3.988h1.12l2.333,3.807V3.988h1.069v5.701h-1.155   l-2.298-3.718v3.718h-1.069V3.988z M9.323,33.917H8.102l-1.136-4.262l-1.132,4.262H4.587l-1.361-5.701h1.178l0.859,3.916   l1.042-3.916h1.369l0.999,3.982l0.875-3.982h1.159L9.323,33.917z M33.995,59.828c-0.181,0.285-0.438,0.497-0.77,0.636   c-0.332,0.139-0.745,0.208-1.241,0.208c-0.721,0-1.274-0.167-1.661-0.5c-0.386-0.333-0.617-0.819-0.692-1.456l1.12-0.109   c0.067,0.376,0.204,0.652,0.41,0.828c0.206,0.176,0.484,0.264,0.834,0.264c0.371,0,0.65-0.078,0.838-0.235   c0.188-0.157,0.282-0.34,0.282-0.55c0-0.135-0.04-0.25-0.119-0.344c-0.079-0.095-0.217-0.177-0.414-0.247   c-0.135-0.047-0.442-0.13-0.922-0.249c-0.617-0.153-1.05-0.341-1.299-0.564c-0.35-0.314-0.525-0.696-0.525-1.147   c0-0.29,0.082-0.562,0.247-0.815c0.165-0.253,0.402-0.445,0.712-0.577c0.31-0.132,0.684-0.198,1.122-0.198   c0.716,0,1.254,0.157,1.616,0.471c0.362,0.314,0.552,0.733,0.57,1.256l-1.151,0.051c-0.049-0.293-0.155-0.504-0.317-0.632   c-0.162-0.128-0.405-0.193-0.729-0.193c-0.334,0-0.596,0.069-0.786,0.206c-0.122,0.088-0.183,0.206-0.183,0.354   c0,0.135,0.057,0.25,0.171,0.346c0.145,0.122,0.498,0.249,1.058,0.381c0.56,0.132,0.974,0.269,1.243,0.41   c0.268,0.141,0.478,0.334,0.63,0.58c0.152,0.245,0.227,0.548,0.227,0.908C34.267,59.237,34.176,59.543,33.995,59.828z M32,52.795   c-11.466,0-20.795-9.329-20.795-20.795c0-11.466,9.329-20.795,20.795-20.795S52.795,20.534,52.795,32   C52.795,43.466,43.466,52.795,32,52.795z M55.014,33.917v-5.701h4.227v0.965h-3.076v1.264h2.862v0.96h-2.862v1.552h3.185v0.961   H55.014z&quot;</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">g</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">fill</span>=<span class="hljs-string">&quot;#000000&quot;</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M48.904,31.863c-4.074-1.358-8.148-2.717-12.226-4.066c-0.265-0.087-0.399-0.223-0.486-0.486    c-1.349-4.077-2.708-8.151-4.066-12.226c-0.029-0.087-0.074-0.169-0.132-0.3c-0.054,0.152-0.09,0.245-0.122,0.34    c-1.352,4.053-2.707,8.104-4.048,12.161c-0.096,0.292-0.246,0.428-0.532,0.522c-4.056,1.342-8.108,2.696-12.16,4.049    c-0.097,0.032-0.189,0.074-0.344,0.137c0.172,0.06,0.267,0.093,0.362,0.125c4.074,1.358,8.148,2.717,12.224,4.072    c0.204,0.068,0.337,0.158,0.412,0.386c1.243,3.757,2.498,7.511,3.75,11.265c0.144,0.432,0.291,0.862,0.463,1.373    c0.068-0.185,0.108-0.285,0.142-0.386c1.349-4.042,2.701-8.083,4.04-12.128c0.094-0.284,0.231-0.438,0.523-0.534    c4.056-1.341,8.108-2.696,12.161-4.048c0.099-0.033,0.195-0.076,0.347-0.137C49.067,31.925,48.987,31.891,48.904,31.863z     M37.475,32.038c-1.316,0.439-2.631,0.879-3.947,1.314c-0.095,0.031-0.139,0.081-0.17,0.173c-0.434,1.313-0.873,2.625-1.311,3.937    c-0.012,0.033-0.024,0.066-0.046,0.126c-0.056-0.166-0.104-0.306-0.15-0.446c-0.407-1.219-0.814-2.437-1.218-3.657    c-0.025-0.074-0.068-0.104-0.134-0.125c-1.323-0.44-2.646-0.881-3.968-1.322c-0.031-0.01-0.062-0.022-0.118-0.041    c0.05-0.02,0.081-0.034,0.112-0.045c1.315-0.439,2.631-0.879,3.947-1.314c0.093-0.03,0.142-0.075,0.173-0.17    c0.435-1.316,0.875-2.632,1.314-3.947c0.01-0.031,0.022-0.062,0.039-0.11c0.019,0.042,0.033,0.069,0.043,0.097    c0.441,1.323,0.882,2.645,1.321,3.969c0.028,0.085,0.072,0.129,0.158,0.158c1.324,0.438,2.646,0.879,3.969,1.32    c0.027,0.009,0.053,0.02,0.1,0.038C37.538,32.013,37.507,32.027,37.475,32.038z&quot;</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">fill</span>=<span class="hljs-string">&quot;#000000&quot;</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M24.436,27.633c-1.069-2.137-2.119-4.237-3.216-6.43c2.189,1.094,4.292,2.145,6.433,3.216    c-0.359,0.713-0.706,1.404-1.057,2.091c-0.023,0.045-0.078,0.082-0.127,0.106C25.807,26.949,25.143,27.28,24.436,27.633z&quot;</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">fill</span>=<span class="hljs-string">&quot;#000000&quot;</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M39.573,27.632c-0.696-0.348-1.351-0.673-2.002-1.005c-0.076-0.038-0.155-0.104-0.193-0.177    c-0.338-0.661-0.666-1.326-1.019-2.033c2.121-1.061,4.228-2.115,6.43-3.217C41.69,23.399,40.635,25.509,39.573,27.632z&quot;</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">fill</span>=<span class="hljs-string">&quot;#000000&quot;</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M24.436,36.339c0.712,0.357,1.394,0.698,2.074,1.043c0.046,0.024,0.088,0.073,0.113,0.121    c0.339,0.671,0.674,1.345,1.028,2.051c-2.126,1.063-4.232,2.117-6.43,3.216C22.317,40.577,23.37,38.472,24.436,36.339z&quot;</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">fill</span>=<span class="hljs-string">&quot;#000000&quot;</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M36.358,39.555c0.354-0.707,0.688-1.38,1.028-2.05c0.028-0.056,0.084-0.111,0.14-0.139    c0.67-0.339,1.343-0.674,2.047-1.026c1.066,2.131,2.118,4.235,3.215,6.43C40.601,41.676,38.503,40.628,36.358,39.555z&quot;</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">g</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">g</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;speed&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;speed-value&quot;</span>&gt;</span>0<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;units&quot;</span>&gt;</span>KM/H<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><span class="css">    <span class="hljs-selector-tag">html</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">100px</span>;</span><br>    &#125;<br>    <br><span class="css">    <span class="hljs-selector-tag">body</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="css">      <span class="hljs-attribute">font-family</span>: sans-serif;</span><br><span class="css">      <span class="hljs-attribute">min-height</span>: <span class="hljs-number">100vh</span>;</span><br><span class="css">      <span class="hljs-attribute">display</span>: flex;</span><br><span class="css">      <span class="hljs-attribute">justify-content</span>: center;</span><br><span class="css">      <span class="hljs-attribute">align-items</span>: center;</span><br><span class="css">      <span class="hljs-attribute">flex-direction</span>: column;</span><br><span class="css">      <span class="hljs-attribute">background</span>:</span><br>        radial-gradient(black 15%, transparent 16%) 0 0,<br>        radial-gradient(black 15%, transparent 16%) 8px 8px,<br>        radial-gradient(rgba(255,255,255,.1) 15%, transparent 20%) 0 1px,<br>        radial-gradient(rgba(255,255,255,.1) 15%, transparent 20%) 8px 9px;<br><span class="css">      <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#282828</span>;</span><br><span class="css">      <span class="hljs-attribute">background-size</span>: <span class="hljs-number">16px</span> <span class="hljs-number">16px</span>;</span><br><span class="css">      <span class="hljs-attribute">background-attachment</span>: fixed;</span><br>    &#125;<br><br>    .arrow &#123;<br><span class="css">      <span class="hljs-attribute">width</span>: <span class="hljs-number">250px</span>;</span><br><span class="css">      <span class="hljs-attribute">overflow</span>: hidden;</span><br><span class="css">      <span class="hljs-attribute">transition</span>: all <span class="hljs-number">0.2s</span>;</span><br><span class="css">      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">0deg</span>);</span><br><span class="css">      <span class="hljs-attribute">display</span>: inline-block;</span><br>    &#125;<br><br><span class="css">    <span class="hljs-selector-tag">h1</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">color</span>: white;</span><br><span class="css">      <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">100</span>;</span><br><span class="css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">60px</span>;</span><br><span class="css">      <span class="hljs-attribute">display</span>: flex;</span><br><span class="css">      <span class="hljs-attribute">align-items</span>: center;</span><br>    &#125;<br><br>    .units &#123;<br><span class="css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">15px</span>;</span><br>    &#125;<br><span class="css">    <span class="hljs-comment">/*Compass: https://thenounproject.com/search/?q=compass&amp;i=592352*/</span></span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，先將 Class <code>arrow</code> 、<code>speed</code> 透過 <code>querySelector</code> 抓出來命名為變數 arrow、speed 方便我們之後使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-keyword">const</span> arrow = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.arrow&#x27;</span>);<br>    <span class="hljs-keyword">const</span> speed = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.speed-value&#x27;</span>);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>透過  <code>Geolocation.watchPosition()</code>  來註冊一個處理的函式，當使用者的裝置位置更新時，這個函式所傳入的回呼函式(callback function) 就會自動被呼叫，也可以選擇性的定義錯誤時哪些錯誤回呼函式需要被呼叫</p><p>Geolocation.watchPosition()：<a href="https://tinyurl.com/y5b9m2kw">https://tinyurl.com/y5b9m2kw</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-keyword">const</span> arrow = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.arrow&#x27;</span>);<br>    <span class="hljs-keyword">const</span> speed = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.speed-value&#x27;</span>);<br><br>    navigator.geolocation.watchPosition(<span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>      <span class="hljs-built_in">console</span>.log(data);<br>    &#125;);<br><span class="hljs-comment">// Position &#123;coords: Coordinates, timestamp: 1570368253203&#125;</span><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>在這段內容中應該如何取得速度及方位呢？ 可以透過 <code>coords.speed</code> 這個方法來取得速度，並用 <code>coords.heading</code> 取得方位，再透過 CSS 將 Class <code>arrow</code> 旋轉角度即可表示現在的方位。此外，如果回傳錯誤的話就在 console 中顯示 err 的內容！</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-keyword">const</span> arrow = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.arrow&#x27;</span>);<br>    <span class="hljs-keyword">const</span> speed = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.speed-value&#x27;</span>);<br><br>    navigator.geolocation.watchPosition(<span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>      <span class="hljs-built_in">console</span>.log(data);<br>      speed.textContent = data.coords.speed;<br>      arrow.style.transform = <span class="hljs-string">`rotate(<span class="hljs-subst">$&#123;data.coords.heading&#125;</span>deg)`</span>;<br>    &#125;), <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>      <span class="hljs-built_in">console</span>.error(err);<br>    &#125;);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>就大功告成啦！（覺得這個經緯度真的準的有點誇張w</p><h2 id="JS-final"><a href="#JS-final" class="headerlink" title="JS - final"></a>JS - final</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-keyword">const</span> arrow = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.arrow&#x27;</span>);<br>    <span class="hljs-keyword">const</span> speed = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.speed-value&#x27;</span>);<br><br>    navigator.geolocation.watchPosition(<span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>      <span class="hljs-built_in">console</span>.log(data);<br>      speed.textContent = data.coords.speed;<br>      arrow.style.transform = <span class="hljs-string">`rotate(<span class="hljs-subst">$&#123;data.coords.heading&#125;</span>deg)`</span>;<br>    &#125;, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>      <span class="hljs-built_in">console</span>.error(err);<br>    &#125;);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>本刊同步於個人網站：<a href="http://chestertang.site/">http://chestertang.site/</a></p><p>本次範例程式碼原作者來源：<a href="https://tinyurl.com/yavm5f5n">https://tinyurl.com/yavm5f5n</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村20 - Speech Detection</title>
    <link href="/2019/10/05/javascript20/"/>
    <url>/2019/10/05/javascript20/</url>
    
    <content type="html"><![CDATA[<h2 id="20-Speech-Detection"><a href="#20-Speech-Detection" class="headerlink" title="20 - Speech Detection"></a>20 - Speech Detection</h2><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h1 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h1><p>語音輸入的功能：</p><ul><li>功能、畫面<ul><li>講話要變文字在畫面上</li><li>停頓太久要分段</li></ul></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Speech Detection<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;words&quot;</span> <span class="hljs-attr">contenteditable</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">    <span class="hljs-built_in">window</span>.SpeechRecognition = <span class="hljs-built_in">window</span>.SpeechRecognition || <span class="hljs-built_in">window</span>.webkitSpeechRecognition;</span><br><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><span class="css">    <span class="hljs-selector-tag">html</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">10px</span>;</span><br>    &#125;<br><br><span class="css">    <span class="hljs-selector-tag">body</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">background</span>: <span class="hljs-number">#ffc600</span>;</span><br><span class="css">      <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;helvetica neue&#x27;</span>;</span><br><span class="css">      <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">200</span>;</span><br><span class="css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;</span><br>    &#125;<br><br>    .words &#123;<br><span class="css">      <span class="hljs-attribute">max-width</span>: <span class="hljs-number">500px</span>;</span><br><span class="css">      <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto;</span><br><span class="css">      <span class="hljs-attribute">background</span>: white;</span><br><span class="css">      <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">5px</span>;</span><br><span class="css">      <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">10px</span> <span class="hljs-number">10px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.1</span>);</span><br><span class="css">      <span class="hljs-attribute">padding</span>: <span class="hljs-number">1rem</span> <span class="hljs-number">2rem</span> <span class="hljs-number">1rem</span> <span class="hljs-number">5rem</span>;</span><br><span class="css">      <span class="hljs-attribute">background</span>: <span class="hljs-built_in">-webkit-gradient</span>(linear, <span class="hljs-number">0</span> <span class="hljs-number">0</span>, <span class="hljs-number">0</span> <span class="hljs-number">100%</span>, <span class="hljs-built_in">from</span>(<span class="hljs-number">#d9eaf3</span>), <span class="hljs-built_in">color-stop</span>(<span class="hljs-number">4%</span>, <span class="hljs-number">#fff</span>)) <span class="hljs-number">0</span> <span class="hljs-number">4px</span>;</span><br><span class="css">      <span class="hljs-attribute">background-size</span>: <span class="hljs-number">100%</span> <span class="hljs-number">3rem</span>;</span><br><span class="css">      <span class="hljs-attribute">position</span>: relative;</span><br><span class="css">      <span class="hljs-attribute">line-height</span>: <span class="hljs-number">3rem</span>;</span><br>    &#125;<br>    <br><span class="css">    <span class="hljs-selector-tag">p</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">3rem</span>;</span><br>    &#125;<br><br>    .words:before &#123;<br><span class="css">      <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;&#x27;</span>;</span><br><span class="css">      <span class="hljs-attribute">position</span>: absolute;</span><br><span class="css">      <span class="hljs-attribute">width</span>: <span class="hljs-number">4px</span>;</span><br><span class="css">      <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;</span><br><span class="css">      <span class="hljs-attribute">left</span>: <span class="hljs-number">30px</span>;</span><br><span class="css">      <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;</span><br><span class="css">      <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid;</span><br><span class="css">      <span class="hljs-attribute">border-color</span>: transparent <span class="hljs-number">#efe4e4</span>;</span><br>    &#125;<br>  <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，這個範例中所使用的技術只限於在Chrome瀏覽器中使用，因此不支援其他任何裝置，詳情可以參考這個API 的 MDN，此外，這個 API 是由 Google 所釋出的服務，其中有一些功能好像無法使用，有待研究…</p><p>判斷使用者的瀏覽器有沒有存在 <code>SpeechRecognition</code>、<code>webkitSpeechRecognition</code></p><p>SpeechRecognition：<a href="https://tinyurl.com/y54hcmtc">https://tinyurl.com/y54hcmtc</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><span class="hljs-built_in">window</span>.SpeechRecognition = <span class="hljs-built_in">window</span>.SpeechRecognition || <span class="hljs-built_in">window</span>.webkitSpeechRecognition;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>接下來透過 <code>interimResults </code>這個方法，來判斷使用者在講話的當下，如果設定為 <code>True</code> 就會即時辨識，不然設定為 <code>False</code> 就會在一段話結束之後，才會開始辨識。</p><p>SpeechRecognition.interimResults：<a href="https://tinyurl.com/y6rwfoq3">https://tinyurl.com/y6rwfoq3</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><span class="hljs-built_in">window</span>.SpeechRecognition = <span class="hljs-built_in">window</span>.SpeechRecognition || <span class="hljs-built_in">window</span>.webkitSpeechRecognition;<br>recognition.interimResults = <span class="hljs-literal">true</span>;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>當然地，要選擇辨識的語音為何？就要設定辨認的語系為何，以最長使用的英文就必須為 <code>en-US</code> ，如果是中文就要是 <code>zh-TW</code>！</p><p>SpeechRecognition.lang：<a href="https://tinyurl.com/y4e5ycna">https://tinyurl.com/y4e5ycna</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><span class="hljs-built_in">window</span>.SpeechRecognition = <span class="hljs-built_in">window</span>.SpeechRecognition || <span class="hljs-built_in">window</span>.webkitSpeechRecognition;<br>recognition.interimResults = <span class="hljs-literal">true</span>;<br>recognition.lang = <span class="hljs-string">&#x27;zh-TW&#x27;</span>;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>接下來就是將語音辨識的字加在段落上</p><p>Node.appendChild()：<a href="https://tinyurl.com/poy5p24">https://tinyurl.com/poy5p24</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><span class="hljs-built_in">window</span>.SpeechRecognition = <span class="hljs-built_in">window</span>.SpeechRecognition || <span class="hljs-built_in">window</span>.webkitSpeechRecognition;<br>recognition.interimResults = <span class="hljs-literal">true</span>;<br>recognition.lang = <span class="hljs-string">&#x27;zh-TW&#x27;</span>;<br><br><span class="hljs-keyword">let</span> p = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&#x27;p&#x27;</span>);<br>  <span class="hljs-keyword">const</span> words = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.words&#x27;</span>);<br>  words.appendChild(p);<br><br>recognition.start();<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>印出 <code>result</code> 看看監聽的 <code>SpeechRecognitionEvent </code> 是什麼吧！</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><span class="hljs-comment">// 上略</span><br>  recognition.addEventListener(<span class="hljs-string">&#x27;result&#x27;</span>, <span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> &#123;<br>      <span class="hljs-built_in">console</span>.log(e);<br>  &#125;);<br><span class="hljs-comment">// SpeechRecognitionEvent &#123;isTrusted: true, resultIndex: 0, results: SpeechRecognitionResultList, interpretation: null, emma: null, …&#125;</span><br>&lt;/script&gt;<br><br></code></pre></td></tr></table></figure><p>再判斷一下每個單詞、還有設定某一些字會跑出大便的符號XDDD</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>recognition.addEventListener(<span class="hljs-string">&#x27;result&#x27;</span>, <span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> &#123;<br><span class="hljs-comment">// 上略</span><br>  <span class="hljs-built_in">console</span>.log(e);<br>  <span class="hljs-keyword">const</span> transcript = <span class="hljs-built_in">Array</span>.from(e.results)<br>    .map(<span class="hljs-function"><span class="hljs-params">result</span> =&gt;</span> result[<span class="hljs-number">0</span>])<br>    .map(<span class="hljs-function"><span class="hljs-params">result</span> =&gt;</span> result.transcript)<br>    .join(<span class="hljs-string">&#x27;&#x27;</span>);<br><br>    <span class="hljs-keyword">const</span> poopScript = transcript.replace(<span class="hljs-regexp">/poop|poo|shit|dump/gi</span>, <span class="hljs-string">&#x27;💩&#x27;</span>);<br>    p.textContent = poopScript;<br><br>    <span class="hljs-keyword">if</span> (e.results[<span class="hljs-number">0</span>].isFinal) &#123;<br>      p = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&#x27;p&#x27;</span>);<br>      words.appendChild(p);<br>    &#125;<br>  &#125;);<br><br>  recognition.addEventListener(<span class="hljs-string">&#x27;end&#x27;</span>, recognition.start);<br>  recognition.start();<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>就大功告成啦！</p><h2 id="JS-final"><a href="#JS-final" class="headerlink" title="JS - final"></a>JS - final</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-built_in">window</span>.SpeechRecognition = <span class="hljs-built_in">window</span>.SpeechRecognition || <span class="hljs-built_in">window</span>.webkitSpeechRecognition;<br><br>  <span class="hljs-keyword">const</span> recognition = <span class="hljs-keyword">new</span> SpeechRecognition();<br>  recognition.interimResults = <span class="hljs-literal">true</span>;<br>  recognition.lang = <span class="hljs-string">&#x27;en-US&#x27;</span>;<br>  <br>  <span class="hljs-keyword">let</span> p = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&#x27;p&#x27;</span>);<br>  <span class="hljs-keyword">const</span> words = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.words&#x27;</span>);<br>  words.appendChild(p);<br><br>  recognition.addEventListener(<span class="hljs-string">&#x27;result&#x27;</span>, <span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(e);<br>    <span class="hljs-keyword">const</span> transcript = <span class="hljs-built_in">Array</span>.from(e.results)<br>      .map(<span class="hljs-function"><span class="hljs-params">result</span> =&gt;</span> result[<span class="hljs-number">0</span>])<br>      .map(<span class="hljs-function"><span class="hljs-params">result</span> =&gt;</span> result.transcript)<br>      .join(<span class="hljs-string">&#x27;&#x27;</span>);<br><br>      <span class="hljs-keyword">const</span> poopScript = transcript.replace(<span class="hljs-regexp">/poop|poo|shit|dump/gi</span>, <span class="hljs-string">&#x27;💩&#x27;</span>);<br>      p.textContent = poopScript;<br><br>      <span class="hljs-keyword">if</span> (e.results[<span class="hljs-number">0</span>].isFinal) &#123;<br>        p = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&#x27;p&#x27;</span>);<br>        words.appendChild(p);<br>      &#125;<br>  &#125;);<br><br>  recognition.addEventListener(<span class="hljs-string">&#x27;end&#x27;</span>, recognition.start);<br>  recognition.start();<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>本刊同步於個人網站：<a href="http://chestertang.site/">http://chestertang.site/</a></p><p>本次範例程式碼原作者來源：<a href="https://tinyurl.com/yavm5f5n">https://tinyurl.com/yavm5f5n</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村19 - Webcam Fun</title>
    <link href="/2019/10/04/javascript19/"/>
    <url>/2019/10/04/javascript19/</url>
    
    <content type="html"><![CDATA[<h2 id="19-Webcam-Fun"><a href="#19-Webcam-Fun" class="headerlink" title="19 - Webcam Fun"></a>19 - Webcam Fun</h2><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h1 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h1><ul><li><p>使用Webcam進行以下動作</p><ul><li><p>功能</p><ul><li>拍照功能</li><li>拍照檔案儲存.png檔</li><li>拉動上面的range會改變濾鏡參數</li></ul></li><li><p>畫面</p><ul><li><p>右上角出現webcam的畫面</p></li><li><p>中間的大圖是<code>canvas</code>輸出結果</p></li><li><p>出現照片縮圖列表</p></li><li><p>加上濾鏡(redEffect、rgbSplit、globalAlpha、Green screen)</p></li></ul></li></ul></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Get User Media Code Along!<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;style.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;photobooth&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;controls&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&quot;takePhoto()&quot;</span>&gt;</span>Take Photo<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-comment">&lt;!--       &lt;div class=&quot;rgb&quot;&gt;</span><br><span class="hljs-comment">        &lt;label for=&quot;rmin&quot;&gt;Red Min:&lt;/label&gt;</span><br><span class="hljs-comment">        &lt;input type=&quot;range&quot; min=0 max=255 name=&quot;rmin&quot;&gt;</span><br><span class="hljs-comment">        &lt;label for=&quot;rmax&quot;&gt;Red Max:&lt;/label&gt;</span><br><span class="hljs-comment">        &lt;input type=&quot;range&quot; min=0 max=255 name=&quot;rmax&quot;&gt;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">        &lt;br&gt;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">        &lt;label for=&quot;gmin&quot;&gt;Green Min:&lt;/label&gt;</span><br><span class="hljs-comment">        &lt;input type=&quot;range&quot; min=0 max=255 name=&quot;gmin&quot;&gt;</span><br><span class="hljs-comment">        &lt;label for=&quot;gmax&quot;&gt;Green Max:&lt;/label&gt;</span><br><span class="hljs-comment">        &lt;input type=&quot;range&quot; min=0 max=255 name=&quot;gmax&quot;&gt;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">        &lt;br&gt;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">        &lt;label for=&quot;bmin&quot;&gt;Blue Min:&lt;/label&gt;</span><br><span class="hljs-comment">        &lt;input type=&quot;range&quot; min=0 max=255 name=&quot;bmin&quot;&gt;</span><br><span class="hljs-comment">        &lt;label for=&quot;bmax&quot;&gt;Blue Max:&lt;/label&gt;</span><br><span class="hljs-comment">        &lt;input type=&quot;range&quot; min=0 max=255 name=&quot;bmax&quot;&gt;</span><br><span class="hljs-comment">      &lt;/div&gt; --&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;photo&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;strip&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;snap&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://wesbos.com/demos/photobooth/snap.mp3&quot;</span> <span class="hljs-attr">hidden</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">audio</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;scripts.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Script-js"><a href="#Script-js" class="headerlink" title="Script.js"></a>Script.js</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> video = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.player&#x27;</span>);<br><span class="hljs-keyword">const</span> canvas = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.photo&#x27;</span>);<br><span class="hljs-keyword">const</span> ctx = canvas.getContext(<span class="hljs-string">&#x27;2d&#x27;</span>);<br><span class="hljs-keyword">const</span> strip = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.strip&#x27;</span>);<br><span class="hljs-keyword">const</span> snap = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.snap&#x27;</span>);<br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，我們需要使用者先允許瀏覽器可以使用現在裝置的相機，否則這個範例就在此結束，我們就跟大家下一篇見面了…允許之後，使用者能在瀏覽器上看見自己的螢幕呈現於畫面上，至於應該怎麼抓呢？可以在後面設定要開啟的只有影片還是聲音，以及影片的大小寬高等等。此外，如果沒有開啟攝像頭成功應該在 console 中告訴使用者這件事情，詳細的範例連結可以直接在這個地方了解：<a href="https://tinyurl.com/y22tls2h">https://tinyurl.com/y22tls2h</a></p><p>Navigator：<a href="https://tinyurl.com/y2s2bozg">https://tinyurl.com/y2s2bozg</a><br>MediaDevices.getUserMedia()：<a href="https://tinyurl.com/ojzyz72">https://tinyurl.com/ojzyz72</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// script.js</span><br><span class="hljs-keyword">const</span> video = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.player&#x27;</span>);<br><span class="hljs-keyword">const</span> canvas = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.photo&#x27;</span>);<br><span class="hljs-keyword">const</span> ctx = canvas.getContext(<span class="hljs-string">&#x27;2d&#x27;</span>);<br><span class="hljs-keyword">const</span> strip = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.strip&#x27;</span>);<br><span class="hljs-keyword">const</span> snap = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.snap&#x27;</span>);<br><br><span class="hljs-comment">// 舊語法 navigator.getUserMedia();</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getVideo</span>(<span class="hljs-params"></span>) </span>&#123;<br>  navigator.mediaDevices.getUserMedia(&#123; <span class="hljs-attr">video</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">audio</span>: <span class="hljs-literal">false</span> &#125;)<br>    .then(<span class="hljs-function"><span class="hljs-params">localMediaStream</span> =&gt;</span> &#123;<br>      <span class="hljs-built_in">console</span>.log(localMediaStream);<br>      <br>      video.srcObject = localMediaStream;<br>      video.play();<br>    &#125;)<br>    .catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>      <span class="hljs-built_in">console</span>.error(<span class="hljs-string">`OH NO!!!`</span>, err);<br>    &#125;);<br>&#125;<br><br>getVideo();<br></code></pre></td></tr></table></figure><p>能開啟攝像頭之後，我們來將攝像頭的螢幕透過 Canvas 繪圖畫在螢幕上</p><p>window.setInterval：<a href="https://tinyurl.com/y6ae337q">https://tinyurl.com/y6ae337q</a></p><p>CanvasRenderingContext2D.drawImage()：<a href="https://tinyurl.com/y4wzme56">https://tinyurl.com/y4wzme56</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">paintToCanvas</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">const</span> width = video.videoWidth;<br>  <span class="hljs-keyword">const</span> height = video.videoHeight;<br>  canvas.width = width;<br>  canvas.height = height;<br><br>  <span class="hljs-keyword">return</span> <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    ctx.drawImage(video, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, width, height);<br>    <span class="hljs-keyword">let</span> pixels = ctx.getImageData(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, width, height);<br>    ctx.putImageData(pixels, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>  &#125;, <span class="hljs-number">16</span>);<br>&#125;<br><br>video.addEventListener(<span class="hljs-string">&#x27;canplay&#x27;</span>, paintToCanvas);<br></code></pre></td></tr></table></figure><p>接下來，我們要來處理在RGBA情況下，我們要的顏色是什麼，其中這邊會跑一個FOR迴圈。而為什麼會是 +=4 就很明顯了，我們抓到的 <code>pixels.data</code> 會有四個值，如果你在前段有把螢幕轉換成 Canvas 的點的時候，有把點印出來就會發現，轉出來的點會是原來的值的四倍，也就是這邊的RGBA四個點。因此，如果是第一個也就是紅色、第二個是綠色…</p><p>迴圈內的數字也就是分別調整紅、綠、藍要加上多少的顏色了！並透過三個色版分開並做位移</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">redEffect</span>(<span class="hljs-params">pixels</span>) </span>&#123;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; pixels.data.length; i+=<span class="hljs-number">4</span>) &#123;<br>    pixels.data[i + <span class="hljs-number">0</span>] = pixels.data[i + <span class="hljs-number">0</span>] + <span class="hljs-number">200</span>; <span class="hljs-comment">// RED</span><br>    pixels.data[i + <span class="hljs-number">1</span>] = pixels.data[i + <span class="hljs-number">1</span>] - <span class="hljs-number">50</span>; <span class="hljs-comment">// GREEN</span><br>    pixels.data[i + <span class="hljs-number">2</span>] = pixels.data[i + <span class="hljs-number">2</span>] * <span class="hljs-number">0.5</span>; <span class="hljs-comment">// Blue</span><br>  &#125;<br>  <span class="hljs-keyword">return</span> pixels;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">rgbSplit</span>(<span class="hljs-params">pixels</span>) </span>&#123;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; pixels.data.length; i+=<span class="hljs-number">4</span>) &#123;<br>    pixels.data[i - <span class="hljs-number">150</span>] = pixels.data[i + <span class="hljs-number">0</span>]; <span class="hljs-comment">// RED</span><br>    pixels.data[i + <span class="hljs-number">500</span>] = pixels.data[i + <span class="hljs-number">1</span>]; <span class="hljs-comment">// GREEN</span><br>    pixels.data[i - <span class="hljs-number">550</span>] = pixels.data[i + <span class="hljs-number">2</span>]; <span class="hljs-comment">// Blue</span><br>  &#125;<br>  <span class="hljs-keyword">return</span> pixels;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">greenScreen</span>(<span class="hljs-params">pixels</span>) </span>&#123;<br>  <span class="hljs-keyword">const</span> levels = &#123;&#125;;<br><br>  <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;.rgb input&#x27;</span>).forEach(<span class="hljs-function">(<span class="hljs-params">input</span>) =&gt;</span> &#123;<br>    levels[input.name] = input.value;<br>  &#125;);<br><br>  <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; pixels.data.length; i = i + <span class="hljs-number">4</span>) &#123;<br>    red = pixels.data[i + <span class="hljs-number">0</span>];<br>    green = pixels.data[i + <span class="hljs-number">1</span>];<br>    blue = pixels.data[i + <span class="hljs-number">2</span>];<br>    alpha = pixels.data[i + <span class="hljs-number">3</span>];<br><br>    <span class="hljs-keyword">if</span> (red &gt;= levels.rmin<br>      &amp;&amp; green &gt;= levels.gmin<br>      &amp;&amp; blue &gt;= levels.bmin<br>      &amp;&amp; red &lt;= levels.rmax<br>      &amp;&amp; green &lt;= levels.gmax<br>      &amp;&amp; blue &lt;= levels.bmax) &#123;<br>      <span class="hljs-comment">// take it out!</span><br>      pixels.data[i + <span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;<br>    &#125;<br>  &#125;<br><br>  <span class="hljs-keyword">return</span> pixels;<br>&#125;<br></code></pre></td></tr></table></figure><p>最後，再來拍張照片吧！如果 canvas 的高度或是寬度為 0,，將會回傳字串 “data:,”，如果要求的圖像類型並非 image/png，但是回傳的類型卻是 data:image/png，表示要求的圖像類型並不支援！</p><p>HTMLCanvasElement.toDataURL()：<a href="https://tinyurl.com/y2swfgtb">https://tinyurl.com/y2swfgtb</a></p><p>人臉辨識opencv.js：<a href="https://tinyurl.com/yyg498jc">https://tinyurl.com/yyg498jc</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">takePhoto</span>(<span class="hljs-params"></span>) </span>&#123;<br>  snap.currentTime = <span class="hljs-number">0</span>;<br>  snap.play();<br><br>  <span class="hljs-keyword">const</span> data = canvas.toDataURL(<span class="hljs-string">&#x27;image/jpeg&#x27;</span>);<br>  <span class="hljs-keyword">const</span> link = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&#x27;a&#x27;</span>);<br>  link.href = data;<br>  link.setAttribute(<span class="hljs-string">&#x27;download&#x27;</span>, <span class="hljs-string">&#x27;handsome&#x27;</span>);<br>  link.innerHTML = <span class="hljs-string">`&lt;img src=&quot;<span class="hljs-subst">$&#123;data&#125;</span>&quot; alt=&quot;Handsome Man&quot; /&gt;`</span>;<br>  strip.insertBefore(link, strip.firstChild);<br>&#125;<br></code></pre></td></tr></table></figure><p>就大功告成啦！</p><h2 id="JS-final"><a href="#JS-final" class="headerlink" title="JS - final"></a>JS - final</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> video = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.player&#x27;</span>);<br><span class="hljs-keyword">const</span> canvas = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.photo&#x27;</span>);<br><span class="hljs-keyword">const</span> ctx = canvas.getContext(<span class="hljs-string">&#x27;2d&#x27;</span>);<br><span class="hljs-keyword">const</span> strip = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.strip&#x27;</span>);<br><span class="hljs-keyword">const</span> snap = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.snap&#x27;</span>);<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getVideo</span>(<span class="hljs-params"></span>) </span>&#123;<br>  navigator.mediaDevices.getUserMedia(&#123; <span class="hljs-attr">video</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">audio</span>: <span class="hljs-literal">false</span> &#125;)<br>    .then(<span class="hljs-function"><span class="hljs-params">localMediaStream</span> =&gt;</span> &#123;<br>      <span class="hljs-built_in">console</span>.log(localMediaStream);<br>      <br>      video.srcObject = localMediaStream;<br>      video.play();<br>    &#125;)<br>    .catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>      <span class="hljs-built_in">console</span>.error(<span class="hljs-string">`OH NO!!!`</span>, err);<br>    &#125;);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">paintToCanvas</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">const</span> width = video.videoWidth;<br>  <span class="hljs-keyword">const</span> height = video.videoHeight;<br>  canvas.width = width;<br>  canvas.height = height;<br><br>  <span class="hljs-keyword">return</span> <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    ctx.drawImage(video, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, width, height);<br>    <span class="hljs-keyword">let</span> pixels = ctx.getImageData(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, width, height);<br>    pixels = rgbSplit(pixels);<br>    ctx.putImageData(pixels, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>  &#125;, <span class="hljs-number">16</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">redEffect</span>(<span class="hljs-params">pixels</span>) </span>&#123;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; pixels.data.length; i+=<span class="hljs-number">4</span>) &#123;<br>    pixels.data[i + <span class="hljs-number">0</span>] = pixels.data[i + <span class="hljs-number">0</span>] + <span class="hljs-number">200</span>; <br>    pixels.data[i + <span class="hljs-number">1</span>] = pixels.data[i + <span class="hljs-number">1</span>] - <span class="hljs-number">50</span>;<br>    pixels.data[i + <span class="hljs-number">2</span>] = pixels.data[i + <span class="hljs-number">2</span>] * <span class="hljs-number">0.5</span>;<br>  &#125;<br>  <span class="hljs-keyword">return</span> pixels;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">rgbSplit</span>(<span class="hljs-params">pixels</span>) </span>&#123;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; pixels.data.length; i+=<span class="hljs-number">4</span>) &#123;<br>    pixels.data[i - <span class="hljs-number">150</span>] = pixels.data[i + <span class="hljs-number">0</span>]; <br>    pixels.data[i + <span class="hljs-number">500</span>] = pixels.data[i + <span class="hljs-number">1</span>]; <br>    pixels.data[i - <span class="hljs-number">550</span>] = pixels.data[i + <span class="hljs-number">2</span>]; <br>  &#125;<br>  <span class="hljs-keyword">return</span> pixels;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">greenScreen</span>(<span class="hljs-params">pixels</span>) </span>&#123;<br>  <span class="hljs-keyword">const</span> levels = &#123;&#125;;<br><br>  <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;.rgb input&#x27;</span>).forEach(<span class="hljs-function">(<span class="hljs-params">input</span>) =&gt;</span> &#123;<br>    levels[input.name] = input.value;<br>  &#125;);<br><br>  <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; pixels.data.length; i = i + <span class="hljs-number">4</span>) &#123;<br>    red = pixels.data[i + <span class="hljs-number">0</span>];<br>    green = pixels.data[i + <span class="hljs-number">1</span>];<br>    blue = pixels.data[i + <span class="hljs-number">2</span>];<br>    alpha = pixels.data[i + <span class="hljs-number">3</span>];<br><br>    <span class="hljs-keyword">if</span> (red &gt;= levels.rmin<br>      &amp;&amp; green &gt;= levels.gmin<br>      &amp;&amp; blue &gt;= levels.bmin<br>      &amp;&amp; red &lt;= levels.rmax<br>      &amp;&amp; green &lt;= levels.gmax<br>      &amp;&amp; blue &lt;= levels.bmax) &#123;<br>      <span class="hljs-comment">// take it out!</span><br>      pixels.data[i + <span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;<br>    &#125;<br>  &#125;<br><br>  <span class="hljs-keyword">return</span> pixels;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">takePhoto</span>(<span class="hljs-params"></span>) </span>&#123;<br>  snap.currentTime = <span class="hljs-number">0</span>;<br>  snap.play();<br>  <span class="hljs-keyword">const</span> data = canvas.toDataURL(<span class="hljs-string">&#x27;image/jpeg&#x27;</span>);<br>  <span class="hljs-keyword">const</span> link = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&#x27;a&#x27;</span>);<br>  link.href = data;<br>  link.setAttribute(<span class="hljs-string">&#x27;download&#x27;</span>, <span class="hljs-string">&#x27;handsome&#x27;</span>);<br>  link.innerHTML = <span class="hljs-string">`&lt;img src=&quot;<span class="hljs-subst">$&#123;data&#125;</span>&quot; alt=&quot;Handsome Man&quot; /&gt;`</span>;<br>  strip.insertBefore(link, strip.firstChild);<br>&#125;<br><br>getVideo();<br>video.addEventListener(<span class="hljs-string">&#x27;canplay&#x27;</span>, paintToCanvas);<br></code></pre></td></tr></table></figure><p>本刊同步於個人網站：<a href="http://chestertang.site/">http://chestertang.site/</a></p><p>本次範例程式碼原作者來源：<a href="https://tinyurl.com/yavm5f5n">https://tinyurl.com/yavm5f5n</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村18 - Adding Up Times with Reduce</title>
    <link href="/2019/10/03/javascript18/"/>
    <url>/2019/10/03/javascript18/</url>
    
    <content type="html"><![CDATA[<h2 id="18-Adding-Up-Times-with-Reduce"><a href="#18-Adding-Up-Times-with-Reduce" class="headerlink" title="18 - Adding Up Times with Reduce"></a>18 - Adding Up Times with Reduce</h2><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h1 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h1><p>透過 <code>Reduce</code> 把播放清單中的時間加起來。</p><ul><li><p>功能</p><p>加總時間</p></li><li><p>畫面</p><p>依時間格式顯示小時、分鐘、秒數</p></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Videos<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;videos&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;5:43&quot;</span>&gt;</span><br>        Video 1<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;2:33&quot;</span>&gt;</span><br>        Video 2<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;3:45&quot;</span>&gt;</span><br>        Video 3<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;0:47&quot;</span>&gt;</span><br>        Video 4<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;5:21&quot;</span>&gt;</span><br>        Video 5<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;6:56&quot;</span>&gt;</span><br>        Video 6<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;3:46&quot;</span>&gt;</span><br>        Video 7<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;5:25&quot;</span>&gt;</span><br>        Video 8<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;3:14&quot;</span>&gt;</span><br>        Video 9<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;3:31&quot;</span>&gt;</span><br>        Video 10<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;5:59&quot;</span>&gt;</span><br>        Video 11<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;3:07&quot;</span>&gt;</span><br>        Video 12<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;11:29&quot;</span>&gt;</span><br>        Video 13<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;8:57&quot;</span>&gt;</span><br>        Video 14<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;5:49&quot;</span>&gt;</span><br>        Video 15<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;5:52&quot;</span>&gt;</span><br>        Video 16<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;5:50&quot;</span>&gt;</span><br>        Video 17<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;9:13&quot;</span>&gt;</span><br>        Video 18<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;11:51&quot;</span>&gt;</span><br>        Video 19<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;7:58&quot;</span>&gt;</span><br>        Video 20<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;4:40&quot;</span>&gt;</span><br>        Video 21<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;4:45&quot;</span>&gt;</span><br>        Video 22<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;6:46&quot;</span>&gt;</span><br>        Video 23<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;7:24&quot;</span>&gt;</span><br>        Video 24<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;7:12&quot;</span>&gt;</span><br>        Video 25<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;5:23&quot;</span>&gt;</span><br>        Video 26<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;3:34&quot;</span>&gt;</span><br>        Video 27<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;8:22&quot;</span>&gt;</span><br>        Video 28<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;5:17&quot;</span>&gt;</span><br>        Video 29<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;3:10&quot;</span>&gt;</span><br>        Video 30<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;4:43&quot;</span>&gt;</span><br>        Video 31<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;19:43&quot;</span>&gt;</span><br>        Video 32<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;0:47&quot;</span>&gt;</span><br>        Video 33<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;0:47&quot;</span>&gt;</span><br>        Video 34<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;3:14&quot;</span>&gt;</span><br>        Video 35<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;3:59&quot;</span>&gt;</span><br>        Video 36<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;2:43&quot;</span>&gt;</span><br>        Video 37<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;4:17&quot;</span>&gt;</span><br>        Video 38<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;6:56&quot;</span>&gt;</span><br>        Video 39<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;3:05&quot;</span>&gt;</span><br>        Video 40<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;2:06&quot;</span>&gt;</span><br>        Video 41<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;1:59&quot;</span>&gt;</span><br>        Video 42<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;1:49&quot;</span>&gt;</span><br>        Video 43<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;3:36&quot;</span>&gt;</span><br>        Video 44<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;7:10&quot;</span>&gt;</span><br>        Video 45<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;3:44&quot;</span>&gt;</span><br>        Video 46<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;3:44&quot;</span>&gt;</span><br>        Video 47<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;4:36&quot;</span>&gt;</span><br>        Video 48<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;3:16&quot;</span>&gt;</span><br>        Video 49<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;1:10&quot;</span>&gt;</span><br>        Video 50<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;6:10&quot;</span>&gt;</span><br>        Video 51<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;2:14&quot;</span>&gt;</span><br>        Video 52<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;3:44&quot;</span>&gt;</span><br>        Video 53<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;5:05&quot;</span>&gt;</span><br>        Video 54<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;6:03&quot;</span>&gt;</span><br>        Video 55<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;12:39&quot;</span>&gt;</span><br>        Video 56<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;1:56&quot;</span>&gt;</span><br>        Video 57<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">data-time</span>=<span class="hljs-string">&quot;4:04&quot;</span>&gt;</span><br>        Video 58<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，先透過 <code>querySelectorAll</code> 抓出所有的 <code>li</code>，方便我們之後透過 <code>reduce</code> 方法來計算裡面的時間，還記得前面幾張所說，透過這個方法抓出的數值會是一個 Nodelist，因此如果要轉成陣列的話有以下四種方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">let</span> li = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&quot;li&quot;</span>);<br>  <span class="hljs-keyword">let</span> a = <span class="hljs-built_in">Array</span>.from(li).map( <span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item);<br>  <span class="hljs-keyword">let</span> b = [].map.call(li, <span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item);<br>  <span class="hljs-keyword">let</span> c = [].map.apply(li, [<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item]);<br>  <span class="hljs-keyword">let</span> d = [...li].map( <span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item);<br><br><span class="hljs-comment">//(58) [li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li, li]</span><br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>接下來，必須透過 <code>dataset.time</code> 來抓出 <code>li</code> 中 <code>data-time</code> 的值</p><p>HTMLElement.dataset：<a href="https://tinyurl.com/yywtglmc">https://tinyurl.com/yywtglmc</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">let</span> li = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&quot;li&quot;</span>);<br>  <span class="hljs-comment">// let a = Array.from(li).map( item =&gt; item);</span><br>  <span class="hljs-comment">// let b = [].map.call(li, item =&gt; item);</span><br>  <span class="hljs-comment">// let c = [].map.apply(li, [item =&gt; item]);</span><br>  <span class="hljs-keyword">let</span> d = [...li].map( <span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.dataset.time);<br>  <span class="hljs-built_in">console</span>.log(d);<br><br><span class="hljs-comment">//(58) [&quot;5:43&quot;, &quot;2:33&quot;, &quot;3:45&quot;, &quot;0:47&quot;, &quot;5:21&quot;, &quot;6:56&quot;, &quot;3:46&quot;, &quot;5:25&quot;, &quot;3:14&quot;, &quot;3:31&quot;, &quot;5:59&quot;, &quot;3:07&quot;, &quot;11:29&quot;, &quot;8:57&quot;, &quot;5:49&quot;, &quot;5:52&quot;, &quot;5:50&quot;, &quot;9:13&quot;, &quot;11:51&quot;, &quot;7:58&quot;, &quot;4:40&quot;, &quot;4:45&quot;, &quot;6:46&quot;, &quot;7:24&quot;, &quot;7:12&quot;, &quot;5:23&quot;, &quot;3:34&quot;, &quot;8:22&quot;, &quot;5:17&quot;, &quot;3:10&quot;, &quot;4:43&quot;, &quot;19:43&quot;, &quot;0:47&quot;, &quot;0:47&quot;, &quot;3:14&quot;, &quot;3:59&quot;, &quot;2:43&quot;, &quot;4:17&quot;, &quot;6:56&quot;, &quot;3:05&quot;, &quot;2:06&quot;, &quot;1:59&quot;, &quot;1:49&quot;, &quot;3:36&quot;, &quot;7:10&quot;, &quot;3:44&quot;, &quot;3:44&quot;, &quot;4:36&quot;, &quot;3:16&quot;, &quot;1:10&quot;, &quot;6:10&quot;, &quot;2:14&quot;, &quot;3:44&quot;, &quot;5:05&quot;, &quot;6:03&quot;, &quot;12:39&quot;, &quot;1:56&quot;, &quot;4:04&quot;]</span><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>印出時間後，我們必須抓出分鐘、秒數，並命名為 [min,sec]，記得考慮到字串、數字的問題，不管是分鐘或者是秒數都必須乘上數字！</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">let</span> li = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&quot;li&quot;</span>);<br>  <span class="hljs-comment">// let a = Array.from(li).map( item =&gt; item);</span><br>  <span class="hljs-comment">// let b = [].map.call(li, item =&gt; item);</span><br>  <span class="hljs-comment">// let c = [].map.apply(li, [item =&gt; item]);</span><br>  <span class="hljs-keyword">let</span> d = [...li].map( <span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.dataset.time)<br>                 .map( <span class="hljs-function"><span class="hljs-params">time</span> =&gt;</span> &#123;<br>               <span class="hljs-keyword">let</span> [min,sec] = time.split(<span class="hljs-string">&quot;:&quot;</span>);<br>              <span class="hljs-keyword">return</span> min * <span class="hljs-number">60</span> + sec * <span class="hljs-number">1</span> ;<br>               &#125;);<br>  <span class="hljs-built_in">console</span>.log(d);<br><span class="hljs-comment">//(58) [343, 153, 225, 47, 321, 416, 226, 325, 194, 211, 359, 187, 689, 537, 349, 352, 350, 553, 711, 478, 280, 285, 406, 444, 432, 323, 214, 502, 317, 190, 283, 1183, 47, 47, 194, 239, 163, 257, 416, 185, 126, 119, 109, 216, 430, 224, 224, 276, 196, 70, 370, 134, 224, 305, 363, 759, 116, 244]</span><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>這時候就要用上 <code>reduce</code> 將剛剛所有的時間加總起來，</p><p>Array.prototype.reduce()：<a href="https://tinyurl.com/yye5lgcw">https://tinyurl.com/yye5lgcw</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">let</span> li = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&quot;li&quot;</span>);<br>  <span class="hljs-comment">// let a = Array.from(li).map( item =&gt; item);</span><br>  <span class="hljs-comment">// let b = [].map.call(li, item =&gt; item);</span><br>  <span class="hljs-comment">// let c = [].map.apply(li, [item =&gt; item]);</span><br>  <span class="hljs-keyword">let</span> d = [...li].map( <span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.dataset.time)<br>                 .map( <span class="hljs-function"><span class="hljs-params">time</span> =&gt;</span> &#123;<br>                 <span class="hljs-keyword">let</span> [min,sec] = time.split(<span class="hljs-string">&quot;:&quot;</span>);<br>                  <span class="hljs-keyword">return</span> min * <span class="hljs-number">60</span> + sec * <span class="hljs-number">1</span> ;<br>                 &#125;).reduce( <span class="hljs-function">(<span class="hljs-params">first,next</span>) =&gt;</span> first + next , <span class="hljs-number">0</span>);<br><span class="hljs-built_in">console</span>.log(d);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>最後再將所有的時間算數算出小時、分鐘、秒鐘～</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>      <span class="hljs-keyword">let</span> li = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&quot;li&quot;</span>);<br>      <span class="hljs-comment">// let a = Array.from(li).map( item =&gt; item);</span><br>      <span class="hljs-comment">// let b = [].map.call(li, item =&gt; item);</span><br>      <span class="hljs-comment">// let c = [].map.apply(li, [item =&gt; item]);</span><br>      <span class="hljs-keyword">let</span> d = [...li].map( <span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.dataset.time)<br>                     .map( <span class="hljs-function"><span class="hljs-params">time</span> =&gt;</span> &#123;<br>                        <span class="hljs-keyword">let</span> [min,sec] = time.split(<span class="hljs-string">&quot;:&quot;</span>);<br>                        <span class="hljs-keyword">return</span> min * <span class="hljs-number">60</span> + sec * <span class="hljs-number">1</span> ;<br>                     &#125;).reduce( <span class="hljs-function">(<span class="hljs-params">first,next</span>) =&gt;</span> first + next , <span class="hljs-number">0</span>);<br>      <span class="hljs-built_in">console</span>.log(d);<br><br>      <span class="hljs-keyword">let</span> sec = d % <span class="hljs-number">60</span>;<br>      <span class="hljs-keyword">let</span> min = (d - sec) / <span class="hljs-number">60</span>;<br>      <span class="hljs-keyword">let</span> hour = <span class="hljs-built_in">Math</span>.floor(min / <span class="hljs-number">60</span>);<br><br>      min %= <span class="hljs-number">60</span>;<br>      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`<span class="hljs-subst">$&#123;hour&#125;</span>:<span class="hljs-subst">$&#123;min&#125;</span>:<span class="hljs-subst">$&#123;sec&#125;</span>`</span>);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>就大功告成啦！</p><h2 id="JS-final"><a href="#JS-final" class="headerlink" title="JS - final"></a>JS - final</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><br>  <span class="hljs-keyword">const</span> timeNodes = <span class="hljs-built_in">Array</span>.from(<span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;[data-time]&#x27;</span>));<br><br>  <span class="hljs-keyword">const</span> seconds = timeNodes<br>    .map(<span class="hljs-function"><span class="hljs-params">node</span> =&gt;</span> node.dataset.time)<br>    .map(<span class="hljs-function"><span class="hljs-params">timeCode</span> =&gt;</span> &#123;<br>      <span class="hljs-keyword">const</span> [mins, secs] = timeCode.split(<span class="hljs-string">&#x27;:&#x27;</span>).map(<span class="hljs-built_in">parseFloat</span>);<br>      <span class="hljs-keyword">return</span> (mins * <span class="hljs-number">60</span>) + secs;<br>    &#125;)<br>    .reduce(<span class="hljs-function">(<span class="hljs-params">total, vidSeconds</span>) =&gt;</span> total + vidSeconds);<br><br>    <span class="hljs-keyword">let</span> secondsLeft = seconds;<br>    <span class="hljs-keyword">const</span> hours = <span class="hljs-built_in">Math</span>.floor(secondsLeft / <span class="hljs-number">3600</span>);<br>    secondsLeft = secondsLeft % <span class="hljs-number">3600</span>;<br><br>    <span class="hljs-keyword">const</span> mins = <span class="hljs-built_in">Math</span>.floor(secondsLeft / <span class="hljs-number">60</span>);<br>    secondsLeft = secondsLeft % <span class="hljs-number">60</span>;<br><br>    <span class="hljs-built_in">console</span>.log(hours, mins, secondsLeft);<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>本刊同步於個人網站：<a href="http://chestertang.site/">http://chestertang.site/</a></p><p>本次範例程式碼原作者來源：<a href="https://tinyurl.com/yavm5f5n">https://tinyurl.com/yavm5f5n</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村17 - Sort Without Articles</title>
    <link href="/2019/10/02/javascript17/"/>
    <url>/2019/10/02/javascript17/</url>
    
    <content type="html"><![CDATA[<h2 id="17-Sort-Without-Articles"><a href="#17-Sort-Without-Articles" class="headerlink" title="17 - Sort Without Articles"></a>17 - Sort Without Articles</h2><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h1 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h1><p>透過 <code>Array.sort()</code> 排序一個Array，但是排序不考慮 “The”、”An”、”A” 這些字眼</p><ul><li>功能<ul><li>排序不考慮 “The”、”An”、”A” 這些字眼</li></ul></li><li>畫面<ul><li>顯示排序結果</li></ul></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Sort Without Articles<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><span class="css">      <span class="hljs-selector-tag">body</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="css">        <span class="hljs-attribute">font-family</span>: sans-serif;</span><br><span class="css">        <span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&quot;https://source.unsplash.com/nDqA4d5NL0k/2000x2000&quot;</span>);</span><br><span class="css">        <span class="hljs-attribute">background-size</span>: cover;</span><br><span class="css">        <span class="hljs-attribute">display</span>: flex;</span><br><span class="css">        <span class="hljs-attribute">align-items</span>: center;</span><br><span class="css">        <span class="hljs-attribute">min-height</span>: <span class="hljs-number">100vh</span>;</span><br>      &#125;<br><br>      #bands &#123;<br><span class="css">        <span class="hljs-attribute">list-style</span>: inside square;</span><br><span class="css">        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;</span><br><span class="css">        <span class="hljs-attribute">background</span>: white;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;</span><br><span class="css">        <span class="hljs-attribute">margin</span>: auto;</span><br><span class="css">        <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</span><br><span class="css">        <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">20px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.05</span>);</span><br>      &#125;<br><br><span class="css">      <span class="hljs-selector-id">#bands</span> <span class="hljs-selector-tag">li</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#efefef</span>;</span><br><span class="css">        <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;</span><br>      &#125;<br><br><span class="css">      <span class="hljs-selector-id">#bands</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:last-child</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">0</span>;</span><br>      &#125;<br><br><span class="css">      <span class="hljs-selector-tag">a</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">color</span>: <span class="hljs-number">#ffc600</span>;</span><br><span class="css">        <span class="hljs-attribute">text-decoration</span>: none;</span><br>      &#125;<br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;bands&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">        <span class="hljs-keyword">const</span> bands = [<span class="hljs-string">&#x27;The Plot in You&#x27;</span>, </span><br><span class="javascript">                       <span class="hljs-string">&#x27;The Devil Wears Prada&#x27;</span>, </span><br><span class="javascript">                       <span class="hljs-string">&#x27;Pierce the Veil&#x27;</span>, </span><br><span class="javascript">                       <span class="hljs-string">&#x27;Norma Jean&#x27;</span>, <span class="hljs-string">&#x27;The Bled&#x27;</span>, </span><br><span class="javascript">                       <span class="hljs-string">&#x27;Say Anything&#x27;</span>, </span><br><span class="javascript">                       <span class="hljs-string">&#x27;The Midway State&#x27;</span>, </span><br><span class="javascript">                       <span class="hljs-string">&#x27;We Came as Romans&#x27;</span>, </span><br><span class="javascript">                       <span class="hljs-string">&#x27;Counterparts&#x27;</span>, </span><br><span class="javascript">                       <span class="hljs-string">&#x27;Oh, Sleeper&#x27;</span>, </span><br><span class="javascript">                       <span class="hljs-string">&#x27;A Skylit Drive&#x27;</span>, </span><br><span class="javascript">                       <span class="hljs-string">&#x27;Anywhere But Here&#x27;</span>, </span><br><span class="javascript">                       <span class="hljs-string">&#x27;An Old Dog&#x27;</span></span><br>                      ];<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，先來測試一下陣列的排序吧！其實原本的排序中有分穩定排序與不穩定排序，不過目前 Chrome 瀏覽器的支援度已經達到穩定狀態，因此不管是怎樣的重整都還是會是排序一樣的結果！</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-keyword">const</span> bands = [<span class="hljs-string">&#x27;The Plot in You&#x27;</span>, <br>                   <span class="hljs-string">&#x27;The Devil Wears Prada&#x27;</span>, <br>                   <span class="hljs-string">&#x27;Pierce the Veil&#x27;</span>, <br>                   <span class="hljs-string">&#x27;Norma Jean&#x27;</span>, <span class="hljs-string">&#x27;The Bled&#x27;</span>, <br>                   <span class="hljs-string">&#x27;Say Anything&#x27;</span>, <br>                   <span class="hljs-string">&#x27;The Midway State&#x27;</span>, <br>                   <span class="hljs-string">&#x27;We Came as Romans&#x27;</span>, <br>                   <span class="hljs-string">&#x27;Counterparts&#x27;</span>, <br>                   <span class="hljs-string">&#x27;Oh, Sleeper&#x27;</span>, <br>                   <span class="hljs-string">&#x27;A Skylit Drive&#x27;</span>, <br>                   <span class="hljs-string">&#x27;Anywhere But Here&#x27;</span>, <br>                   <span class="hljs-string">&#x27;An Old Dog&#x27;</span>]<br>                  ;<br>                  <br>    <span class="hljs-keyword">let</span> sortband = bands.sort();<br>    <span class="hljs-built_in">console</span>.log(sortband);<br><br><span class="hljs-comment">//[&quot;A Skylit Drive&quot;, &quot;An Old Dog&quot;, &quot;Anywhere But Here&quot;, &quot;Counterparts&quot;, &quot;Norma Jean&quot;, &quot;Oh, Sleeper&quot;, &quot;Pierce the Veil&quot;, &quot;Say Anything&quot;, &quot;The Bled&quot;, &quot;The Devil Wears Prada&quot;, &quot;The Midway State&quot;, &quot;The Plot in You&quot;, &quot;We Came as Romans&quot;]</span><br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>透過 <code>getElementById</code> 將排序的陣列透過 li 的方式加入 ID <code>bands</code> 之中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-keyword">const</span> bands = [<span class="hljs-string">&#x27;The Plot in You&#x27;</span>, <br>                   <span class="hljs-string">&#x27;The Devil Wears Prada&#x27;</span>, <br>                   <span class="hljs-string">&#x27;Pierce the Veil&#x27;</span>, <br>                   <span class="hljs-string">&#x27;Norma Jean&#x27;</span>, <span class="hljs-string">&#x27;The Bled&#x27;</span>, <br>                   <span class="hljs-string">&#x27;Say Anything&#x27;</span>, <br>                   <span class="hljs-string">&#x27;The Midway State&#x27;</span>, <br>                   <span class="hljs-string">&#x27;We Came as Romans&#x27;</span>, <br>                   <span class="hljs-string">&#x27;Counterparts&#x27;</span>, <br>                   <span class="hljs-string">&#x27;Oh, Sleeper&#x27;</span>, <br>                   <span class="hljs-string">&#x27;A Skylit Drive&#x27;</span>, <br>                   <span class="hljs-string">&#x27;Anywhere But Here&#x27;</span>, <br>                   <span class="hljs-string">&#x27;An Old Dog&#x27;</span>]<br>                  ;<br>                  <br>    <span class="hljs-keyword">let</span> sortband = bands.sort();<br>    <span class="hljs-built_in">console</span>.log(sortband);<br><br>    <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;bands&quot;</span>).innerHTML = sortband<br>      .map(<span class="hljs-function"><span class="hljs-params">band</span> =&gt;</span> <span class="hljs-string">`&lt;li&gt;<span class="hljs-subst">$&#123;band&#125;</span>&lt;/li&gt;`</span>)<br>      .join(<span class="hljs-string">&quot;&quot;</span>);<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>然而，在這次的範例中，原作者的用意不是單純的排序而已，作者希望撇除掉 <code>a</code>、<code>the</code>、<code>an</code> 的排序，因此就會使用到正則運算式來撇除後，再做排序的動作</p><p>String.prototype.trim()：<a href="https://tinyurl.com/y3cpe564">https://tinyurl.com/y3cpe564</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-keyword">const</span> bands = [<span class="hljs-string">&#x27;The Plot in You&#x27;</span>, <br>                   <span class="hljs-string">&#x27;The Devil Wears Prada&#x27;</span>, <br>                   <span class="hljs-string">&#x27;Pierce the Veil&#x27;</span>, <br>                   <span class="hljs-string">&#x27;Norma Jean&#x27;</span>, <span class="hljs-string">&#x27;The Bled&#x27;</span>, <br>                   <span class="hljs-string">&#x27;Say Anything&#x27;</span>, <br>                   <span class="hljs-string">&#x27;The Midway State&#x27;</span>, <br>                   <span class="hljs-string">&#x27;We Came as Romans&#x27;</span>, <br>                   <span class="hljs-string">&#x27;Counterparts&#x27;</span>, <br>                   <span class="hljs-string">&#x27;Oh, Sleeper&#x27;</span>, <br>                   <span class="hljs-string">&#x27;A Skylit Drive&#x27;</span>, <br>                   <span class="hljs-string">&#x27;Anywhere But Here&#x27;</span>, <br>                   <span class="hljs-string">&#x27;An Old Dog&#x27;</span>]<br>                  ;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">strip</span>(<span class="hljs-params">bandName</span>) </span>&#123;<br>      <span class="hljs-keyword">return</span> bandName.replace(<span class="hljs-regexp">/^(a |the |an )/i</span>, <span class="hljs-string">&#x27;&#x27;</span>).trim();<br>    &#125;<br>    <br>    <span class="hljs-keyword">let</span> sortband = bands.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>) =&gt;</span> (strip(a) &gt; strip(b) ? <span class="hljs-number">1</span> : -<span class="hljs-number">1</span>));<br><br>    <span class="hljs-comment">// console.log(sortband);</span><br><br>    <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;bands&quot;</span>).innerHTML = sortband<br>      .map(<span class="hljs-function"><span class="hljs-params">band</span> =&gt;</span> <span class="hljs-string">`&lt;li&gt;<span class="hljs-subst">$&#123;band&#125;</span>&lt;/li&gt;`</span>)<br>      .join(<span class="hljs-string">&quot;&quot;</span>);<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>就大功告成啦！</p><h2 id="JS-final"><a href="#JS-final" class="headerlink" title="JS - final"></a>JS - final</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-keyword">const</span> bands = [<span class="hljs-string">&#x27;The Plot in You&#x27;</span>, <br>                   <span class="hljs-string">&#x27;The Devil Wears Prada&#x27;</span>, <br>                   <span class="hljs-string">&#x27;Pierce the Veil&#x27;</span>, <br>                   <span class="hljs-string">&#x27;Norma Jean&#x27;</span>, <span class="hljs-string">&#x27;The Bled&#x27;</span>, <br>                   <span class="hljs-string">&#x27;Say Anything&#x27;</span>, <br>                   <span class="hljs-string">&#x27;The Midway State&#x27;</span>, <br>                   <span class="hljs-string">&#x27;We Came as Romans&#x27;</span>, <br>                   <span class="hljs-string">&#x27;Counterparts&#x27;</span>, <br>                   <span class="hljs-string">&#x27;Oh, Sleeper&#x27;</span>, <br>                   <span class="hljs-string">&#x27;A Skylit Drive&#x27;</span>, <br>                   <span class="hljs-string">&#x27;Anywhere But Here&#x27;</span>, <br>                   <span class="hljs-string">&#x27;An Old Dog&#x27;</span>]<br>                  ;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">strip</span>(<span class="hljs-params">bandName</span>) </span>&#123;<br>      <span class="hljs-keyword">return</span> bandName.replace(<span class="hljs-regexp">/^(a |the |an )/i</span>, <span class="hljs-string">&#x27;&#x27;</span>).trim();<br>    &#125;<br>    <br>    <span class="hljs-keyword">let</span> sortband = bands.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>) =&gt;</span> (strip(a) &gt; strip(b) ? <span class="hljs-number">1</span> : -<span class="hljs-number">1</span>));<br><br>    <span class="hljs-comment">// console.log(sortband);</span><br><br>    <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;bands&quot;</span>).innerHTML = sortband<br>      .map(<span class="hljs-function"><span class="hljs-params">band</span> =&gt;</span> <span class="hljs-string">`&lt;li&gt;<span class="hljs-subst">$&#123;band&#125;</span>&lt;/li&gt;`</span>)<br>      .join(<span class="hljs-string">&quot;&quot;</span>);<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>本刊同步於個人網站：<a href="http://chestertang.site/">http://chestertang.site/</a></p><p>本次範例程式碼原作者來源：<a href="https://tinyurl.com/yavm5f5n">https://tinyurl.com/yavm5f5n</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村16 - Mouse Move Shadow</title>
    <link href="/2019/10/01/javascript16/"/>
    <url>/2019/10/01/javascript16/</url>
    
    <content type="html"><![CDATA[<h2 id="16-Mouse-Move-Shadow"><a href="#16-Mouse-Move-Shadow" class="headerlink" title="16 - Mouse Move Shadow"></a>16 - Mouse Move Shadow</h2><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h1 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h1><ul><li>功能<ul><li>移動滑鼠文字陰影要能移動</li></ul></li><li>畫面<ul><li>陰影要隨著滑鼠相對的位子來修改距離</li></ul></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Mouse Shadow<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hero&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">contenteditable</span>&gt;</span>🔥WOAH!<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><span class="css">  <span class="hljs-selector-tag">html</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">color</span>: black;</span><br><span class="css">    <span class="hljs-attribute">font-family</span>: sans-serif;</span><br>  &#125;<br><br><span class="css">  <span class="hljs-selector-tag">body</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br>  &#125;<br><br>  .hero &#123;<br><span class="css">    <span class="hljs-attribute">min-height</span>: <span class="hljs-number">100vh</span>;</span><br><span class="css">    <span class="hljs-attribute">display</span>: flex;</span><br><span class="css">    <span class="hljs-attribute">justify-content</span>: center;</span><br><span class="css">    <span class="hljs-attribute">align-items</span>: center;</span><br><span class="css">    <span class="hljs-attribute">color</span>: black;</span><br>  &#125;<br><br><span class="css">  <span class="hljs-selector-tag">h1</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">text-shadow</span>: <span class="hljs-number">10px</span> <span class="hljs-number">10px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>);</span><br><span class="css">    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">100px</span>;</span><br>  &#125;<br>  <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，在這個範例中，我們要針對 <code>hero</code> 這個 Class 來製作文字陰影效果，當我們滑鼠移動時可以觸發效果，因此，第一步就先來看看滑鼠移動的觸發事件吧！</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><br>  <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.hero&#x27;</span>).addEventListener(<span class="hljs-string">&quot;mousemove&quot;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;<br>    <span class="hljs-built_in">console</span>.log(e);<br>  &#125;);<br>  <span class="hljs-comment">// offsetX , offsetY</span><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>如果將座標做成百分比的形式呈現於畫面上</p><p>HTMLElement.offsetWidth：<a href="https://tinyurl.com/yxqsypky">https://tinyurl.com/yxqsypky</a><br>HTMLElement.offsetHeight：<a href="https://tinyurl.com/y2j7nxg2">https://tinyurl.com/y2j7nxg2</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><br>  <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.hero&#x27;</span>).addEventListener(<span class="hljs-string">&quot;mousemove&quot;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;<br>    <span class="hljs-comment">// console.log(e);</span><br>    <span class="hljs-keyword">let</span> &#123; offsetX, offsetY &#125; = e;<br>  <br>    <span class="hljs-built_in">console</span>.log(<br>      <span class="hljs-built_in">Math</span>.floor((offsetX / <span class="hljs-built_in">this</span>.offsetWidth)*<span class="hljs-number">100</span>), <br>      <span class="hljs-built_in">Math</span>.floor((offsetY / <span class="hljs-built_in">this</span>.offsetHeight)*<span class="hljs-number">100</span>)<br>    );<br>  &#125;);  <br>  <br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>這時候會出現一個問題，從console可以看到我們接近螢幕左上角的時候數值會趨近於零、右下角的時候會趨近於一百，然而唯獨在中間我們不是在Class <code>hero</code> 的時候（也就是文字的區塊時），數字會被打亂，這也跟 offsetX、offsetY 的特性有所關聯，我們算到的是中間物件的 Offset</p><p>HTMLElement.offsetLeft：<a href="https://tinyurl.com/yxv8sthk">https://tinyurl.com/yxv8sthk</a><br>HTMLElement.offsetTop：<a href="https://tinyurl.com/yymxkgxa">https://tinyurl.com/yymxkgxa</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><br>  <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.hero&#x27;</span>).addEventListener(<span class="hljs-string">&quot;mousemove&quot;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;<br>    <span class="hljs-comment">// console.log(e);</span><br>    <span class="hljs-keyword">let</span> &#123; offsetX, offsetY &#125; = e;<br><br>    <span class="hljs-keyword">if</span> (e.target !== <span class="hljs-built_in">this</span>.target) &#123;<br>      offsetX += e.target.offsetLeft;<br>      offsetY += e.target.offsetTop;<br>    &#125;<br><br>    <span class="hljs-built_in">console</span>.log(<br>      <span class="hljs-built_in">Math</span>.floor((offsetX / <span class="hljs-built_in">this</span>.offsetWidth)*<span class="hljs-number">100</span>), <br>      <span class="hljs-built_in">Math</span>.floor((offsetY / <span class="hljs-built_in">this</span>.offsetHeight)*<span class="hljs-number">100</span>)<br>    );<br>  &#125;);  <br>  <br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>接下來就來增加文字陰影吧！</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><br>  <span class="hljs-keyword">let</span> text = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;h1&#x27;</span>);<br>  <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.hero&#x27;</span>).addEventListener(<span class="hljs-string">&quot;mousemove&quot;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;<br>    <span class="hljs-comment">// console.log(e);</span><br>    <span class="hljs-keyword">let</span> &#123; offsetX, offsetY &#125; = e;<br><br>    <span class="hljs-keyword">if</span> (e.target !== <span class="hljs-built_in">this</span>) &#123;<br>      offsetX += e.target.offsetLeft;<br>      offsetY += e.target.offsetTop;<br>    &#125;<br><br>    <span class="hljs-keyword">let</span> textoffsetX = <span class="hljs-built_in">Math</span>.floor((offsetX / <span class="hljs-built_in">this</span>.offsetWidth)*<span class="hljs-number">100</span>) * <span class="hljs-number">2</span> - <span class="hljs-number">100</span>;<br>    <span class="hljs-keyword">let</span> textoffsetY = <span class="hljs-built_in">Math</span>.floor((offsetY / <span class="hljs-built_in">this</span>.offsetHeight)*<span class="hljs-number">100</span>)* <span class="hljs-number">2</span> - <span class="hljs-number">100</span>;<br><br>    text.style.textShadow = <span class="hljs-string">`</span><br><span class="hljs-string">      <span class="hljs-subst">$&#123;textoffsetX&#125;</span>px <span class="hljs-subst">$&#123;textoffsetY&#125;</span>px 10px rgba(10,10,10,10) </span><br><span class="hljs-string">    `</span><br>  &#125;);  <br>  <br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>就大功告成啦！</p><h2 id="JS-final"><a href="#JS-final" class="headerlink" title="JS - final"></a>JS - final</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">let</span> text = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;h1&#x27;</span>);<br>  <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.hero&#x27;</span>).addEventListener(<span class="hljs-string">&quot;mousemove&quot;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;<br>    <span class="hljs-comment">// console.log(e);</span><br>    <span class="hljs-keyword">let</span> &#123; offsetX, offsetY &#125; = e;<br><br>    <span class="hljs-keyword">if</span> (e.target !== <span class="hljs-built_in">this</span>) &#123;<br>      offsetX += e.target.offsetLeft;<br>      offsetY += e.target.offsetTop;<br>    &#125;<br><br>    <span class="hljs-keyword">let</span> textoffsetX = <span class="hljs-built_in">Math</span>.floor((offsetX / <span class="hljs-built_in">this</span>.offsetWidth)*<span class="hljs-number">100</span>) * <span class="hljs-number">2</span> - <span class="hljs-number">100</span>;<br>    <span class="hljs-keyword">let</span> textoffsetY = <span class="hljs-built_in">Math</span>.floor((offsetY / <span class="hljs-built_in">this</span>.offsetHeight)*<span class="hljs-number">100</span>)* <span class="hljs-number">2</span> - <span class="hljs-number">100</span>;<br><br>    text.style.textShadow = <span class="hljs-string">`</span><br><span class="hljs-string">      <span class="hljs-subst">$&#123;textoffsetX&#125;</span>px <span class="hljs-subst">$&#123;textoffsetY&#125;</span>px 10px rgba(10,10,10,10) </span><br><span class="hljs-string">    `</span><br>  &#125;);  <br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>本刊同步於個人網站：<a href="http://chestertang.site/">http://chestertang.site/</a></p><p>本次範例程式碼原作者來源：<a href="https://tinyurl.com/yavm5f5n">https://tinyurl.com/yavm5f5n</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村15 - LocalStorage</title>
    <link href="/2019/09/30/javascript15/"/>
    <url>/2019/09/30/javascript15/</url>
    
    <content type="html"><![CDATA[<h2 id="15-LocalStorage"><a href="#15-LocalStorage" class="headerlink" title="15 - LocalStorage"></a>15 - LocalStorage</h2><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h1 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h1><ol><li><p>localStorage</p></li><li><p>event delegation</p></li></ol><ul><li>功能<ul><li>做一個可以輸入文字的框，送出之後新增一個 Checkbox</li><li>重新整理時，選單不會清空會存進 localStorage</li></ul></li><li>畫面<ul><li>選單的選項前面，要有打勾的功能，並且自訂圖示</li></ul></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>LocalStorage<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;style.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>   <span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">      Fish SVG Cred:</span><br><span class="hljs-comment">      https://thenounproject.com/search/?q=fish&amp;i=589236</span><br><span class="hljs-comment">   --&gt;</span><br><br>   <span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="hljs-attr">xmlns:xlink</span>=<span class="hljs-string">&quot;http://www.w3.org/1999/xlink&quot;</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;1.1&quot;</span> <span class="hljs-attr">x</span>=<span class="hljs-string">&quot;0px&quot;</span> <span class="hljs-attr">y</span>=<span class="hljs-string">&quot;0px&quot;</span> <span class="hljs-attr">viewBox</span>=<span class="hljs-string">&quot;0 0 512 512&quot;</span> <span class="hljs-attr">enable-background</span>=<span class="hljs-string">&quot;new 0 0 512 512&quot;</span> <span class="hljs-attr">xml:space</span>=<span class="hljs-string">&quot;preserve&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">g</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M495.9,425.3H16.1c-5.2,0-10.1,2.9-12.5,7.6c-2.4,4.7-2.1,10.3,0.9,14.6l39,56.4c2.6,3.8,7,6.1,11.6,6.1h401.7   c4.6,0,9-2.3,11.6-6.1l39-56.4c3-4.3,3.3-9.9,0.9-14.6C506,428.2,501.1,425.3,495.9,425.3z M449.4,481.8H62.6L43,453.6H469   L449.4,481.8z&quot;</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M158.3,122c7.8,0,14.1-6.3,14.1-14.1V43.4c0-7.8-6.3-14.1-14.1-14.1c-7.8,0-14.1,6.3-14.1,14.1v64.5   C144.2,115.7,150.5,122,158.3,122z&quot;</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M245.1,94.7c7.8,0,14.1-6.3,14.1-14.1V16.1c0-7.8-6.3-14.1-14.1-14.1C237.3,2,231,8.3,231,16.1v64.5   C231,88.4,237.3,94.7,245.1,94.7z&quot;</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M331.9,122c7.8,0,14.1-6.3,14.1-14.1V43.4c0-7.8-6.3-14.1-14.1-14.1s-14.1,6.3-14.1,14.1v64.5   C317.8,115.7,324.1,122,331.9,122z&quot;</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M9.6,385.2c5.3,2.8,11.8,1.9,16.2-2.2l50.6-47.7c56.7,46.5,126.6,71.9,198.3,71.9c0,0,0,0,0,0   c87.5,0,169.7-36.6,231.4-103.2c5-5.4,5-13.8,0-19.2c-61.8-66.5-144-103.2-231.4-103.2c-72,0-142.2,25.6-199,72.5l-50-47.1   c-4.4-4.1-10.9-5-16.2-2.2c-5.3,2.8-8.3,8.7-7.4,14.6l11.6,75L2.2,370.6C1.3,376.5,4.2,382.4,9.6,385.2z M380.9,230.8   c34.9,14.3,67.2,35.7,95.3,63.6c-10.1,10-20.8,19.2-31.9,27.5c-22.4-3.3-29.6-8.8-30.7-9.7c-4-5.7-11.8-7.7-18.1-4.4   c-6.9,3.6-9.5,12.2-5.9,19.1c1.9,3.5,7.3,10.3,22.4,16c-10.1,5.7-20.5,10.7-31.1,15.1C352.4,320.2,352.4,268.6,380.9,230.8z    M36.3,255.6l29.4,27.7c5.3,5,13.6,5.1,19.1,0.3c53.2-47.6,120.7-73.7,190-73.7c26.9,0,53.2,3.9,78.5,11.3   c-29.3,44.6-29.3,102,0,146.6c-25.3,7.4-51.6,11.3-78.5,11.3c-69,0-136.3-26-189.4-73.2c-2.7-2.4-13.4-6.3-19.1,0.3l-30.1,28.3   l5.7-40C42.2,293,36.3,255.6,36.3,255.6z&quot;</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">circle</span> <span class="hljs-attr">cx</span>=<span class="hljs-string">&quot;398.8&quot;</span> <span class="hljs-attr">cy</span>=<span class="hljs-string">&quot;273.8&quot;</span> <span class="hljs-attr">r</span>=<span class="hljs-string">&quot;14.1&quot;</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">g</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;wrapper&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>LOCAL TAPAS<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;plates&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>Loading Tapas...<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;add-items&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;item&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Item Name&quot;</span> <span class="hljs-attr">required</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;+ Add Item&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">  <span class="hljs-keyword">const</span> addItems = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.add-items&#x27;</span>);</span><br><span class="javascript">  <span class="hljs-keyword">const</span> itemsList = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.plates&#x27;</span>);</span><br><span class="javascript">  <span class="hljs-keyword">const</span> items = [];</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">html</span> &#123;<br>  <span class="hljs-attribute">box-sizing</span>: border-box;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;http://wes.io/hx9M/oh-la-la.jpg&#x27;</span>) center no-repeat;<br>  <span class="hljs-attribute">background-size</span>: cover;<br>  <span class="hljs-attribute">min-height</span>: <span class="hljs-number">100vh</span>;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">justify-content</span>: center;<br>  <span class="hljs-attribute">align-items</span>: center;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">font-family</span>: Futura,<span class="hljs-string">&quot;Trebuchet MS&quot;</span>,Arial,sans-serif;<br>&#125;<br><br>*, *:before, *:after &#123;<br>  box-sizing: inherit; <br>&#125;<br><br>svg &#123;<br>  fill:white;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.1</span>);<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">50px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.wrapper</span> &#123;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;<br>  <span class="hljs-attribute">max-width</span>: <span class="hljs-number">350px</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">0.95</span>);<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">10px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.1</span>);<br>&#125;<br><br><span class="hljs-selector-tag">h2</span> &#123;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">200</span>;<br>&#125;<br><br><span class="hljs-selector-class">.plates</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">text-align</span>: left;<br>  <span class="hljs-attribute">list-style</span>: none;<br>&#125;<br><br><span class="hljs-selector-class">.plates</span> <span class="hljs-selector-tag">li</span> &#123;<br>  <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.2</span>);<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">100</span>;<br>  <span class="hljs-attribute">display</span>: flex;<br>&#125;<br><br><span class="hljs-selector-class">.plates</span> <span class="hljs-selector-tag">label</span> &#123;<br>  <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">cursor</span>: pointer;<br>&#125;<br><br><span class="hljs-selector-class">.plates</span> <span class="hljs-selector-tag">input</span> &#123;<br>  <span class="hljs-attribute">display</span>: none;<br>&#125;<br><br><span class="hljs-selector-class">.plates</span> <span class="hljs-selector-tag">input</span> + <span class="hljs-selector-tag">label</span>:before &#123;<br>  content: <span class="hljs-string">&#x27;⬜️&#x27;</span>;<br>  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">10px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.plates</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">:checked</span> + <span class="hljs-selector-tag">label</span>:before &#123;<br>  content: <span class="hljs-string">&#x27;🌮&#x27;</span>;<br>&#125;<br><br><span class="hljs-selector-class">.add-items</span> &#123;<br>  <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">20px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.add-items</span> <span class="hljs-selector-tag">input</span> &#123;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;<br>  <span class="hljs-attribute">outline</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.1</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先開始前先將最後完成檔copy一份先把資料add到本地端的<code>localStorage</code>，方便等等開始寫來 <code>console</code> 。在這個範例檔當中，我們將從 <code>localStorage</code> 抓到的資料設為變數 <code>items</code> 後，產生出 HTML 塞進Class <code>plates</code> 之中，值得一提的是，我們該如何抓到資料、資料不會是空的造成 <code>undefined </code>呢？</p><p>在 <code>localStorage</code> 中，需要了解抓資料跟存資料的兩種方法： <code>getItem</code>、<code>setItem</code> ，並因為抓出來的一個字串，因此透過之前所提過的 <code>JSON.parse()</code> 轉換為物件，為了確保 <code>undefined</code> 的問題，如果抓不到的資料的話預設為空陣列</p><p>Storage.getItem()：<a href="https://tinyurl.com/mfx39k9">https://tinyurl.com/mfx39k9</a></p><p>JSON.parse()：<a href="https://tinyurl.com/y48zz9vd">https://tinyurl.com/y48zz9vd</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> addItems = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.add-items&#x27;</span>);<br>  <span class="hljs-keyword">const</span> itemsList = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.plates&#x27;</span>);<br>  <span class="hljs-keyword">const</span> items = <span class="hljs-built_in">JSON</span>.parse(<span class="hljs-built_in">localStorage</span>.getItem(<span class="hljs-string">&#x27;items&#x27;</span>)) || [];<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">populateList</span>(<span class="hljs-params">plates = [], platesList</span>) </span>&#123;<br>    platesList.innerHTML = plates.map(<span class="hljs-function">(<span class="hljs-params">plate, i</span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-string">`</span><br><span class="hljs-string">        &lt;li&gt;</span><br><span class="hljs-string">          &lt;input type=&quot;checkbox&quot; data-index=&quot;<span class="hljs-subst">$&#123;i&#125;</span>&quot; id=&quot;item<span class="hljs-subst">$&#123;i&#125;</span>&quot; </span><br><span class="hljs-string"> <span class="hljs-subst">$&#123;plate.done ? <span class="hljs-string">&#x27;checked&#x27;</span> : <span class="hljs-string">&#x27;&#x27;</span>&#125;</span> /&gt;</span><br><span class="hljs-string">          &lt;label for=&quot;item<span class="hljs-subst">$&#123;i&#125;</span>&quot;&gt;<span class="hljs-subst">$&#123;plate.text&#125;</span>&lt;/label&gt;</span><br><span class="hljs-string">        &lt;/li&gt;</span><br><span class="hljs-string">      `</span>;<br>    &#125;).join(<span class="hljs-string">&#x27;&#x27;</span>);<br>  &#125;<br><br>  populateList(items, itemsList);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>接下來，我們來寫 <code>addItem</code> 的function，首先我們應該將輸入的資料抓到後 <code>push</code> 進去變數中 <code>items.push(item)</code> ，並且再次更新畫面 <code>populateList(items, itemsList)</code> 、更新資料 <code>localStorage.setItem(&#39;items&#39;, JSON.stringify(items))</code> ，將輸入的數值重整不要停留在畫面上<code>this.reset();</code></p><p>Event.preventDefault()：<a href="https://tinyurl.com/kkh9hmd">https://tinyurl.com/kkh9hmd</a></p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-comment">// 上略</span><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addItem</span>(<span class="hljs-params">e</span>) </span>&#123;<br>      e.preventDefault();<br>      <span class="hljs-keyword">const</span> text = (<span class="hljs-built_in">this</span>.querySelector(<span class="hljs-string">&#x27;[name=item]&#x27;</span>)).value;<br>      <span class="hljs-keyword">const</span> item = &#123;<br>        text,<br>        done: <span class="hljs-literal">false</span><br>      &#125;;<br><br>      items.push(item);<br>      populateList(items, itemsList);<br>      <span class="hljs-built_in">localStorage</span>.setItem(<span class="hljs-string">&#x27;items&#x27;</span>, <span class="hljs-built_in">JSON</span>.stringify(items));<br>      <span class="hljs-built_in">this</span>.reset();<br>    &#125;<br><br>    addItems.addEventListener(<span class="hljs-string">&#x27;submit&#x27;</span>, addItem);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>與上方的概念相同，我們有個 <code>toggleDone</code> 的function</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><span class="hljs-comment">// 上略</span><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">toggleDone</span>(<span class="hljs-params">e</span>) </span>&#123;<br>      <span class="hljs-keyword">if</span> (!e.target.matches(<span class="hljs-string">&#x27;input&#x27;</span>)) <span class="hljs-keyword">return</span>; <span class="hljs-comment">// skip this unless it&#x27;s an input</span><br>      <span class="hljs-keyword">const</span> el = e.target;<br>      <span class="hljs-keyword">const</span> index = el.dataset.index;<br>      items[index].done = !items[index].done;<br>      <span class="hljs-built_in">localStorage</span>.setItem(<span class="hljs-string">&#x27;items&#x27;</span>, <span class="hljs-built_in">JSON</span>.stringify(items));<br>      populateList(items, itemsList);<br>    &#125;<br><br>  itemsList.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, toggleDone);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>就大功告成啦！</p><h2 id="JS-final"><a href="#JS-final" class="headerlink" title="JS - final"></a>JS - final</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> addItems = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.add-items&#x27;</span>);<br>  <span class="hljs-keyword">const</span> itemsList = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.plates&#x27;</span>);<br>  <span class="hljs-keyword">const</span> items = <span class="hljs-built_in">JSON</span>.parse(<span class="hljs-built_in">localStorage</span>.getItem(<span class="hljs-string">&#x27;items&#x27;</span>)) || [];<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addItem</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    e.preventDefault();<br>    <span class="hljs-keyword">const</span> text = (<span class="hljs-built_in">this</span>.querySelector(<span class="hljs-string">&#x27;[name=item]&#x27;</span>)).value;<br>    <span class="hljs-keyword">const</span> item = &#123;<br>      text,<br>      done: <span class="hljs-literal">false</span><br>    &#125;;<br><br>    items.push(item);<br>    populateList(items, itemsList);<br>    <span class="hljs-built_in">localStorage</span>.setItem(<span class="hljs-string">&#x27;items&#x27;</span>, <span class="hljs-built_in">JSON</span>.stringify(items));<br>    <span class="hljs-built_in">this</span>.reset();<br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">populateList</span>(<span class="hljs-params">plates = [], platesList</span>) </span>&#123;<br>    platesList.innerHTML = plates.map(<span class="hljs-function">(<span class="hljs-params">plate, i</span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-string">`</span><br><span class="hljs-string">        &lt;li&gt;</span><br><span class="hljs-string">          &lt;input type=&quot;checkbox&quot; data-index=<span class="hljs-subst">$&#123;i&#125;</span> id=&quot;item<span class="hljs-subst">$&#123;i&#125;</span>&quot; <span class="hljs-subst">$&#123;plate.done ? <span class="hljs-string">&#x27;checked&#x27;</span> : <span class="hljs-string">&#x27;&#x27;</span>&#125;</span> /&gt;</span><br><span class="hljs-string">          &lt;label for=&quot;item<span class="hljs-subst">$&#123;i&#125;</span>&quot;&gt;<span class="hljs-subst">$&#123;plate.text&#125;</span>&lt;/label&gt;</span><br><span class="hljs-string">        &lt;/li&gt;</span><br><span class="hljs-string">      `</span>;<br>    &#125;).join(<span class="hljs-string">&#x27;&#x27;</span>);<br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">toggleDone</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (!e.target.matches(<span class="hljs-string">&#x27;input&#x27;</span>)) <span class="hljs-keyword">return</span>; <span class="hljs-comment">// skip this unless it&#x27;s an input</span><br>    <span class="hljs-keyword">const</span> el = e.target;<br>    <span class="hljs-keyword">const</span> index = el.dataset.index;<br>    items[index].done = !items[index].done;<br>    <span class="hljs-built_in">localStorage</span>.setItem(<span class="hljs-string">&#x27;items&#x27;</span>, <span class="hljs-built_in">JSON</span>.stringify(items));<br>    populateList(items, itemsList);<br>  &#125;<br><br>  addItems.addEventListener(<span class="hljs-string">&#x27;submit&#x27;</span>, addItem);<br>  itemsList.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, toggleDone);<br><br>  populateList(items, itemsList);<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>本刊同步於個人網站：<a href="http://chestertang.site/">http://chestertang.site/</a></p><p>本次範例程式碼原作者來源：<a href="https://tinyurl.com/yavm5f5n">https://tinyurl.com/yavm5f5n</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村14 - JS Reference VS Copy</title>
    <link href="/2019/09/29/javascript14/"/>
    <url>/2019/09/29/javascript14/</url>
    
    <content type="html"><![CDATA[<h2 id="14-JS-Reference-VS-Copy"><a href="#14-JS-Reference-VS-Copy" class="headerlink" title="14 - JS Reference VS Copy"></a>14 - JS Reference VS Copy</h2><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h1 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h1><p>今天來做 JavaScript reference 與 copy 了解 JavaScript 是怎麼運作的</p><p>就依下面的題目一題一題做吧！(我也看不懂如何分題目…</p><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>JS Reference VS Copy<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">    <span class="hljs-comment">// start with strings, numbers and booleans</span></span><br><br><span class="javascript">    <span class="hljs-comment">// Let&#x27;s say we have an array</span></span><br><span class="javascript">    <span class="hljs-keyword">const</span> players = [<span class="hljs-string">&#x27;Wes&#x27;</span>, <span class="hljs-string">&#x27;Sarah&#x27;</span>, <span class="hljs-string">&#x27;Ryan&#x27;</span>, <span class="hljs-string">&#x27;Poppy&#x27;</span>];</span><br><br><span class="javascript">    <span class="hljs-comment">// and we want to make a copy of it.</span></span><br><br><span class="javascript">    <span class="hljs-comment">// You might think we can just do something like this:</span></span><br><br><span class="javascript">    <span class="hljs-comment">// however what happens when we update that array?</span></span><br><br><span class="javascript">    <span class="hljs-comment">// now here is the problem!</span></span><br><br><span class="javascript">    <span class="hljs-comment">// oh no - we have edited the original array too!</span></span><br><br><span class="javascript">    <span class="hljs-comment">// Why? It&#x27;s because that is an array reference, not an array copy. They both point to the same array!</span></span><br><br><span class="javascript">    <span class="hljs-comment">// So, how do we fix this? We take a copy instead!</span></span><br><br><span class="javascript">    <span class="hljs-comment">// one way</span></span><br><br><span class="javascript">    <span class="hljs-comment">// or create a new array and concat the old one in</span></span><br><br><span class="javascript">    <span class="hljs-comment">// or use the new ES6 Spread</span></span><br><br><span class="javascript">    <span class="hljs-comment">// now when we update it, the original one isn&#x27;t changed</span></span><br><br><span class="javascript">    <span class="hljs-comment">// The same thing goes for objects, let&#x27;s say we have a person object</span></span><br><br><span class="javascript">    <span class="hljs-comment">// with Objects</span></span><br><span class="javascript">    <span class="hljs-keyword">const</span> person = &#123;</span><br><span class="javascript">      name: <span class="hljs-string">&#x27;Wes Bos&#x27;</span>,</span><br>      age: 80<br>    &#125;;<br><br><span class="javascript">    <span class="hljs-comment">// and think we make a copy:</span></span><br><br><span class="javascript">    <span class="hljs-comment">// how do we take a copy instead?</span></span><br><br><span class="javascript">    <span class="hljs-comment">// We will hopefully soon see the object ...spread</span></span><br><br><span class="javascript">    <span class="hljs-comment">// Things to note - this is only 1 level deep - both for Arrays and Objects. lodash has a cloneDeep method, but you should think twice before using it.</span></span><br><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，首先，從字串、數字、布林開始：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><span class="hljs-comment">// start with strings, numbers and booleans</span><br><br>    <span class="hljs-keyword">let</span> age = <span class="hljs-number">100</span>;<br>    <span class="hljs-keyword">let</span> age2 = age;<br>    <span class="hljs-built_in">console</span>.log(age, age2);<br>    <span class="hljs-comment">// 100 100</span><br><br>    age = <span class="hljs-number">200</span>;<br>    <span class="hljs-built_in">console</span>.log(age, age2);<br>    <span class="hljs-comment">// 200 100</span><br><br>    <span class="hljs-keyword">let</span> name = <span class="hljs-string">&#x27;Wes&#x27;</span>;<br>    <span class="hljs-keyword">let</span> name2 = name;<br>    <span class="hljs-built_in">console</span>.log(name, name2);<br>    <span class="hljs-comment">// Wes Wes</span><br><br>    name = <span class="hljs-string">&#x27;wesley&#x27;</span>;<br>    <span class="hljs-built_in">console</span>.log(name, name2);<br>    <span class="hljs-comment">//wesley Wes</span><br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>複製陣列的三種方式</p><ol><li>Array.prototype.slice()：<a href="https://tinyurl.com/y386jf7b">https://tinyurl.com/y386jf7b</a></li><li>Array.prototype.concat()：<a href="https://tinyurl.com/y4zx2jz8">https://tinyurl.com/y4zx2jz8</a></li><li>ES6：[…]</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-comment">// 陣列</span><br>    <span class="hljs-keyword">const</span> players = [<span class="hljs-string">&#x27;Wes&#x27;</span>, <span class="hljs-string">&#x27;Sarah&#x27;</span>, <span class="hljs-string">&#x27;Ryan&#x27;</span>, <span class="hljs-string">&#x27;Poppy&#x27;</span>];<br><br>    <span class="hljs-comment">// 我們希望複製這個陣列</span><br>    <span class="hljs-keyword">const</span> team = players;<br><br>    <span class="hljs-built_in">console</span>.log(players, team);<br>    <span class="hljs-comment">// 也許你應該覺得就長這樣吧:</span><br>    <span class="hljs-comment">// team[3] = &#x27;Lux&#x27;;</span><br><br>    <span class="hljs-comment">// 但是當我們更新陣列的時候呢？</span><br><br>    <span class="hljs-comment">// 問題就...</span><br><br>    <span class="hljs-comment">// 我們原本的陣列也被更改到了～</span><br><br>    <span class="hljs-comment">// 因為這不是複製、都在記憶體中對應到同一個陣列</span><br><br>    <span class="hljs-comment">// one way</span><br>    <span class="hljs-keyword">const</span> team2 = players.slice();<br><br>    <span class="hljs-comment">// second </span><br>    <span class="hljs-keyword">const</span> team3 = [].concat(players);<br><br>    <span class="hljs-comment">// or use the new ES6 Spread</span><br>    <span class="hljs-keyword">const</span> team4 = [...players];<br>    team4[<span class="hljs-number">3</span>] = <span class="hljs-string">&#x27;heeee hawww&#x27;</span>;<br>    <span class="hljs-built_in">console</span>.log(team4);<br>    <span class="hljs-comment">//[&quot;Wes&quot;, &quot;Sarah&quot;, &quot;Ryan&quot;, &quot;heeee hawww&quot;]</span><br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>物件的複製</p><ol><li>Object.assign()：<a href="https://tinyurl.com/j74djep">https://tinyurl.com/j74djep</a></li><li>JSON.parse(JSON.stringify())：<a href="https://tinyurl.com/yyzultt5">https://tinyurl.com/yyzultt5</a><ul><li>注意這種字串化的寫法，如果原本被複製的物件有 function，那新的複製物件呼叫 function 會失效，反之 <code>Object.assign()</code> 則不會</li></ul></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><span class="hljs-comment">// with Objects</span><br>    <span class="hljs-keyword">const</span> person = &#123;<br>      name: <span class="hljs-string">&#x27;Wes Bos&#x27;</span>,<br>      age: <span class="hljs-number">80</span><br>    &#125;;<br><br>    <span class="hljs-comment">// and think we make a copy:</span><br>    <span class="hljs-comment">// const captain = person;</span><br>    <span class="hljs-comment">// captain.number = 99;</span><br><br>    <span class="hljs-comment">// how do we take a copy instead?</span><br>    <span class="hljs-keyword">const</span> cap2 = <span class="hljs-built_in">Object</span>.assign(&#123;&#125;, person, &#123; <span class="hljs-attr">number</span>: <span class="hljs-number">99</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">12</span> &#125;);<br>    <span class="hljs-built_in">console</span>.log(cap2);<br><br>    <span class="hljs-comment">// We will hopefully soon see the object ...spread</span><br>    <span class="hljs-comment">// const cap3 = &#123;...person&#125;;</span><br><br>    <span class="hljs-comment">// Things to note - this is only 1 level deep - both for Arrays and Objects. lodash has a cloneDeep method, but you should think twice before using it.</span><br><br>    <span class="hljs-keyword">const</span> wes = &#123;<br>      name: <span class="hljs-string">&#x27;Wes&#x27;</span>,<br>      age: <span class="hljs-number">100</span>,<br>      social: &#123;<br>        twitter: <span class="hljs-string">&#x27;@wesbos&#x27;</span>,<br>        facebook: <span class="hljs-string">&#x27;wesbos.developer&#x27;</span><br>      &#125;<br>    &#125;;<br><br>    <span class="hljs-built_in">console</span>.clear();<br>    <span class="hljs-built_in">console</span>.log(wes);<br><br>    <span class="hljs-keyword">const</span> dev = <span class="hljs-built_in">Object</span>.assign(&#123;&#125;, wes);<br>    <span class="hljs-keyword">const</span> dev2 = <span class="hljs-built_in">JSON</span>.parse(<span class="hljs-built_in">JSON</span>.stringify(wes));<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><h2 id="JS-Final"><a href="#JS-Final" class="headerlink" title="JS - Final"></a>JS - Final</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-comment">// start with strings, numbers and booleans</span><br>    <span class="hljs-comment">// let age = 100;</span><br>    <span class="hljs-comment">// let age2 = age;</span><br>    <span class="hljs-comment">// console.log(age, age2);</span><br>    <span class="hljs-comment">// age = 200;</span><br>    <span class="hljs-comment">// console.log(age, age2);</span><br><br>    <span class="hljs-comment">// let name = &#x27;Wes&#x27;;</span><br>    <span class="hljs-comment">// let name2 = name;</span><br>    <span class="hljs-comment">// console.log(name, name2);</span><br>    <span class="hljs-comment">// name = &#x27;wesley&#x27;;</span><br>    <span class="hljs-comment">// console.log(name, name2);</span><br><br>    <span class="hljs-comment">// Let&#x27;s say we have an array</span><br>    <span class="hljs-keyword">const</span> players = [<span class="hljs-string">&#x27;Wes&#x27;</span>, <span class="hljs-string">&#x27;Sarah&#x27;</span>, <span class="hljs-string">&#x27;Ryan&#x27;</span>, <span class="hljs-string">&#x27;Poppy&#x27;</span>];<br><br>    <span class="hljs-comment">// and we want to make a copy of it.</span><br>    <span class="hljs-keyword">const</span> team = players;<br><br>    <span class="hljs-built_in">console</span>.log(players, team);<br>    <span class="hljs-comment">// You might think we can just do something like this:</span><br>    <span class="hljs-comment">// team[3] = &#x27;Lux&#x27;;</span><br><br>    <span class="hljs-comment">// however what happens when we update that array?</span><br><br>    <span class="hljs-comment">// now here is the problem!</span><br><br>    <span class="hljs-comment">// oh no - we have edited the original array too!</span><br><br>    <span class="hljs-comment">// Why? It&#x27;s because that is an array reference, not an array copy. They both point to the same array!</span><br><br>    <span class="hljs-comment">// So, how do we fix this? We take a copy instead!</span><br>    <span class="hljs-keyword">const</span> team2 = players.slice();<br><br>    <span class="hljs-comment">// one way</span><br><br>    <span class="hljs-comment">// or create a new array and concat the old one in</span><br>    <span class="hljs-keyword">const</span> team3 = [].concat(players);<br><br>    <span class="hljs-comment">// or use the new ES6 Spread</span><br>    <span class="hljs-keyword">const</span> team4 = [...players];<br>    team4[<span class="hljs-number">3</span>] = <span class="hljs-string">&#x27;heeee hawww&#x27;</span>;<br>    <span class="hljs-built_in">console</span>.log(team4);<br><br>    <span class="hljs-keyword">const</span> team5 = <span class="hljs-built_in">Array</span>.from(players);<br><br>    <span class="hljs-comment">// now when we update it, the original one isn&#x27;t changed</span><br><br>    <span class="hljs-comment">// The same thing goes for objects, let&#x27;s say we have a person object</span><br><br>    <span class="hljs-comment">// with Objects</span><br>    <span class="hljs-keyword">const</span> person = &#123;<br>      name: <span class="hljs-string">&#x27;Wes Bos&#x27;</span>,<br>      age: <span class="hljs-number">80</span><br>    &#125;;<br><br>    <span class="hljs-comment">// and think we make a copy:</span><br>    <span class="hljs-comment">// const captain = person;</span><br>    <span class="hljs-comment">// captain.number = 99;</span><br><br>    <span class="hljs-comment">// how do we take a copy instead?</span><br>    <span class="hljs-keyword">const</span> cap2 = <span class="hljs-built_in">Object</span>.assign(&#123;&#125;, person, &#123; <span class="hljs-attr">number</span>: <span class="hljs-number">99</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">12</span> &#125;);<br>    <span class="hljs-built_in">console</span>.log(cap2);<br><br>    <span class="hljs-comment">// We will hopefully soon see the object ...spread</span><br>    <span class="hljs-comment">// const cap3 = &#123;...person&#125;;</span><br><br>    <span class="hljs-comment">// Things to note - this is only 1 level deep - both for Arrays and Objects. lodash has a cloneDeep method, but you should think twice before using it.</span><br><br>    <span class="hljs-keyword">const</span> wes = &#123;<br>      name: <span class="hljs-string">&#x27;Wes&#x27;</span>,<br>      age: <span class="hljs-number">100</span>,<br>      social: &#123;<br>        twitter: <span class="hljs-string">&#x27;@wesbos&#x27;</span>,<br>        facebook: <span class="hljs-string">&#x27;wesbos.developer&#x27;</span><br>      &#125;<br>    &#125;;<br><br>    <span class="hljs-built_in">console</span>.clear();<br>    <span class="hljs-built_in">console</span>.log(wes);<br><br>    <span class="hljs-keyword">const</span> dev = <span class="hljs-built_in">Object</span>.assign(&#123;&#125;, wes);<br>    <span class="hljs-keyword">const</span> dev2 = <span class="hljs-built_in">JSON</span>.parse(<span class="hljs-built_in">JSON</span>.stringify(wes));<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>本刊同步於個人網站：<a href="http://chestertang.site/">http://chestertang.site/</a></p><p>本次範例程式碼原作者來源：<a href="https://tinyurl.com/yavm5f5n">https://tinyurl.com/yavm5f5n</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村13 - Slide in on Scroll</title>
    <link href="/2019/09/28/javascript13/"/>
    <url>/2019/09/28/javascript13/</url>
    
    <content type="html"><![CDATA[<h2 id="13-Slide-in-on-Scroll"><a href="#13-Slide-in-on-Scroll" class="headerlink" title="13 - Slide in on Scroll"></a>13 - Slide in on Scroll</h2><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h1 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h1><ul><li>功能<ul><li>捲到特定位置會載入特定圖片</li></ul></li><li>畫面<ul><li>進入畫面時，左邊的圖從左邊滑入，右邊的圖從右邊滑入</li><li>離開畫面時，左邊的圖從左邊滑出，右邊的圖從右邊滑出</li><li>滑入同時，要從透明漸漸出現</li><li>滑出同時，要從漸漸消失至透明</li></ul></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;site-wrap&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Slide in on Scroll<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Consectetur adipisicing elit. Tempore tempora rerum, est autem cupiditate, corporis a qui libero ipsum delectus quidem dolor at nulla, adipisci veniam in reiciendis aut asperiores omnis blanditiis quod quas laborum nam! Fuga ad tempora in aspernatur pariaturlores sunt esse magni, ut, dignissimos.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum cupiditate, corporis a qui libero ipsum delectus quidem dolor at nulla, adipisci veniam in reiciendis aut asperiores omnis blanditiis quod quas laborum nam! Fuga ad tempora in aspernatur pariatur fugit quibusdam dolores sunt esse magni, ut, dignissimos.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Adipisicing elit. Tempore tempora rerum..<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Tempore tempora rerum, est autem cupiditate, corporis a qui libero ipsum delectus quidem dolor at nulla, adipisci veniam in reiciendis aut asperiores omnis blanditiis quod quas laborum nam! Fuga ad tempora in aspernatur pariatur fugit quibusdam dolores sunt esse magni, ut, dignissimos.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Tempore tempora rerum, est autem cupiditate, corporis a qui libero ipsum delectus quidem dolor at nulla, adipisci veniam in reiciendis aut asperiores omnis blanditiis quod quas laborum nam! Fuga ad tempora in aspernatur pariatur fugit quibusdam dolores sunt esse magni, ut, dignissimos.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Tempore tempora rerum, est autem cupiditate, corporis a qui libero ipsum delectus quidem dolor at nulla, adipisci veniam in reiciendis aut asperiores omnis blanditiis quod quas laborum nam! Fuga ad tempora in aspernatur pariatur fugit quibusdam dolores sunt esse magni, ut, dignissimos.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://unsplash.it/400/400&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;align-left slide-in&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Voluptates, deserunt facilis et iste corrupti omnis tenetur est. Iste ut est dicta dolor itaque adipisci, dolorum minima, veritatis earum provident error molestias. Ratione magni illo sint vel velit ut excepturi consectetur suscipit, earum modi accusamus voluptatem nostrum, praesentium numquam, reiciendis voluptas sit id quisquam. Consequatur in quis reprehenderit modi perspiciatis necessitatibus saepe, quidem, suscipit iure natus dignissimos ipsam, eligendi deleniti accusantium, rerum quibusdam fugit perferendis et optio recusandae sed ratione. Culpa, dolorum reprehenderit harum ab voluptas fuga, nisi eligendi natus maiores illum quas quos et aperiam aut doloremque optio maxime fugiat doloribus. Eum dolorum expedita quam, nesciunt<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://unsplash.it/400/401&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;align-right slide-in&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span> at provident praesentium atque quas rerum optio dignissimos repudiandae ullam illum quibusdam. Vel ad error quibusdam, illo ex totam placeat. Quos excepturi fuga, molestiae ea quisquam minus, ratione dicta consectetur officia omnis, doloribus voluptatibus? Veniam ipsum veritatis architecto, provident quas consequatur doloremque quam quidem earum expedita, ad delectus voluptatum, omnis praesentium nostrum qui aspernatur ea eaque adipisci et cumque ab? Ea voluptatum dolore itaque odio. Eius minima distinctio harum, officia ab nihil exercitationem. Tempora rem nemo nam temporibus molestias facilis minus ipsam quam doloribus consequatur debitis nesciunt tempore officiis aperiam quisquam, molestiae voluptates cum, fuga culpa. Distinctio accusamus quibusdam, tempore perspiciatis dolorum optio facere consequatur quidem ullam beatae architecto, ipsam sequi officiis dignissimos amet impedit natus necessitatibus tenetur repellendus dolor rem! Dicta dolorem, iure, facilis illo ex nihil ipsa amet officia, optio temporibus eum autem odit repellendus nisi. Possimus modi, corrupti error debitis doloribus dicta libero earum, sequi porro ut excepturi nostrum ea voluptatem nihil culpa? Ullam expedita eligendi obcaecati reiciendis velit provident omnis quas qui in corrupti est dolore facere ad hic, animi soluta assumenda consequuntur reprehenderit! Voluptate dolor nihil veniam laborum voluptas nisi pariatur sed optio accusantium quam consectetur, corrupti, sequi et consequuntur, excepturi doloremque. Tempore quis velit corporis neque fugit non sequi eaque rem hic. Facere, inventore, aspernatur. Accusantium modi atque, asperiores qui nobis soluta cumque suscipit excepturi possimus doloremque odit saepe perferendis temporibus molestiae nostrum voluptatum quis id sint quidem nesciunt culpa. Rerum labore dolor beatae blanditiis praesentium explicabo velit optio esse aperiam similique, voluptatem cum, maiores ipsa tempore. Reiciendis sed culpa atque inventore, nam ullam enim expedita consectetur id velit iusto alias vitae explicabo nemo neque odio reprehenderit soluta sint eaque. Aperiam, qui ut tenetur, voluptate doloremque officiis dicta quaerat voluptatem rerum natus magni. Eum amet autem dolor ullam.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://unsplash.it/200/500&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;align-left slide-in&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Distinctio maiores adipisci quibusdam repudiandae dolor vero placeat esse sit! Quibusdam saepe aperiam explicabo placeat optio, consequuntur nihil voluptatibus expedita quia vero perferendis, deserunt et incidunt eveniet <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://unsplash.it/200/200&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;align-right slide-in&quot;</span>&gt;</span> temporibus doloremque possimus facilis. Possimus labore, officia dolore! Eaque ratione saepe, alias harum laboriosam deserunt laudantium blanditiis eum explicabo placeat reiciendis labore iste sint. Consectetur expedita dignissimos, non quos distinctio, eos rerum facilis eligendi. Asperiores laudantium, rerum ratione consequatur, culpa consectetur possimus atque ab tempore illum non dolor nesciunt. Neque, rerum. A vel non incidunt, quod doloremque dignissimos necessitatibus aliquid laboriosam architecto at cupiditate commodi expedita in, quae blanditiis. Deserunt labore sequi, repellat laboriosam est, doloremque culpa reiciendis tempore excepturi. Enim nostrum fugit itaque vel corporis ullam sed tenetur ipsa qui rem quam error sint, libero. Laboriosam rem, ratione. Autem blanditiis<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>laborum neque repudiandae quam, cumque, voluptate veritatis itaque, placeat veniam ad nisi. Expedita, laborum reprehenderit ratione soluta velit natus, odit mollitia. Corporis rerum minima fugiat in nostrum. Assumenda natus cupiditate hic quidem ex, quas, amet ipsum esse dolore facilis beatae maxime qui inventore, iste? Maiores dignissimos dolore culpa debitis voluptatem harum, excepturi enim reiciendis, tempora ab ipsam illum aspernatur quasi qui porro saepe iure sunt eligendi tenetur quaerat ducimus quas sequi omnis aperiam suscipit! Molestiae obcaecati officiis quo, ratione eveniet, provident pariatur. Veniam quasi expedita distinctio, itaque molestiae sequi, dolorum nisi repellendus quia facilis iusto dignissimos nam? Tenetur fugit quos autem nihil, perspiciatis expedita enim tempore, alias ab maiores quis necessitatibus distinctio molestias eum, quidem. Delectus impedit quidem laborum, fugit vel neque quo, ipsam, quasi aspernatur quas odio nihil? Veniam amet reiciendis blanditiis quis reprehenderit repudiandae neque, ab ducimus, odit excepturi voluptate saepe ipsam. Voluptatem eum error voluptas porro officiis, amet! Molestias, fugit, ut! Tempore non magnam, amet, facere ducimus accusantium eos veritatis neque.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://unsplash.it/400/400&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;align-right slide-in&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Distinctio maiores adipisci quibusdam repudiandae dolor vero placeat esse sit! Quibusdam saepe aperiam explicabo placeat optio, consequuntur nihil voluptatibus expedita quia vero perferendis, deserunt et incidunt eveniet temporibus doloremque possimus facilis. Possimus labore, officia dolore! Eaque ratione saepe, alias harum laboriosam deserunt laudantium blanditiis eum explicabo placeat reiciendis labore iste sint. Consectetur expedita dignissimos, non quos distinctio, eos rerum facilis eligendi. Asperiores laudantium, rerum ratione consequatur, culpa consectetur possimus atque ab tempore illum non dolor nesciunt. Neque, rerum. A vel non incidunt, quod doloremque dignissimos necessitatibus aliquid laboriosam architecto at cupiditate commodi expedita in, quae blanditiis. Deserunt labore sequi, repellat laboriosam est, doloremque culpa reiciendis tempore excepturi. Enim nostrum fugit itaque vel corporis ullam sed tenetur ipsa qui rem quam error sint, libero. Laboriosam rem, ratione. Autem blanditiis laborum neque repudiandae quam, cumque, voluptate veritatis itaque, placeat veniam ad nisi. Expedita, laborum reprehenderit ratione soluta velit natus, odit mollitia. Corporis rerum minima fugiat in nostrum. Assumenda natus cupiditate hic quidem ex, quas, amet ipsum esse dolore facilis beatae maxime qui inventore, iste? Maiores dignissimos dolore culpa debitis voluptatem harum, excepturi enim reiciendis, tempora ab ipsam illum aspernatur quasi qui porro saepe iure sunt eligendi tenetur quaerat ducimus quas sequi omnis aperiam suscipit! Molestiae obcaecati officiis quo, ratione eveniet, provident pariatur. Veniam quasi expedita distinctio, itaque molestiae sequi, dolorum nisi repellendus quia facilis iusto dignissimos nam? Tenetur fugit quos autem nihil, perspiciatis expedita enim tempore, alias ab maiores quis necessitatibus distinctio molestias eum, quidem. Delectus impedit quidem laborum, fugit vel neque quo, ipsam, quasi aspernatur quas odio nihil? Veniam amet reiciendis blanditiis quis reprehenderit repudiandae neque, ab ducimus, odit excepturi voluptate saepe ipsam. Voluptatem eum error voluptas porro officiis, amet! Molestias, fugit, ut! Tempore non magnam, amet, facere ducimus accusantium eos veritatis neque.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Distinctio maiores adipisci quibusdam repudiandae dolor vero placeat esse sit! Quibusdam saepe aperiam explicabo placeat optio, consequuntur nihil voluptatibus expedita quia vero perferendis, deserunt et incidunt eveniet temporibus doloremque possimus facilis. Possimus labore, officia dolore! Eaque ratione saepe, alias harum laboriosam deserunt laudantium blanditiis eum explicabo placeat reiciendis labore iste sint. Consectetur expedita dignissimos, non quos distinctio, eos rerum facilis eligendi. Asperiores laudantium, rerum ratione consequatur, culpa consectetur possimus atque ab tempore illum non dolor nesciunt. Neque, rerum. A vel non incidunt, quod doloremque dignissimos necessitatibus aliquid laboriosam architecto at cupiditate commodi expedita in, quae blanditiis. Deserunt labore sequi, repellat laboriosam est, doloremque culpa reiciendis tempore excepturi. Enim nostrum fugit itaque vel corporis ullam sed tenetur ipsa qui rem quam error sint, libero. Laboriosam rem, ratione. Autem blanditiis laborum neque repudiandae quam, cumque, voluptate veritatis itaque, placeat veniam ad nisi. Expedita, laborum reprehenderit ratione soluta velit natus, odit mollitia. Corporis rerum minima fugiat in nostrum. Assumenda natus cupiditate hic quidem ex, quas, amet ipsum esse dolore facilis beatae maxime qui inventore, iste? Maiores dignissimos dolore culpa debitis voluptatem harum, excepturi enim reiciendis, tempora ab ipsam illum aspernatur quasi qui porro saepe iure sunt eligendi tenetur quaerat ducimus quas sequi omnis aperiam suscipit! Molestiae obcaecati officiis quo, ratione eveniet, provident pariatur. Veniam quasi expedita distinctio, itaque molestiae sequi, dolorum nisi repellendus quia facilis iusto dignissimos nam? Tenetur fugit quos autem nihil, perspiciatis expedita enim tempore, alias ab maiores quis necessitatibus distinctio molestias eum, quidem. Delectus impedit quidem laborum, fugit vel neque quo, ipsam, quasi aspernatur quas odio nihil? Veniam amet reiciendis blanditiis quis reprehenderit repudiandae neque, ab ducimus, odit excepturi voluptate saepe ipsam. Voluptatem eum error voluptas porro officiis, amet! Molestias, fugit, ut! Tempore non magnam, amet, facere ducimus accusantium eos veritatis neque.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><br><br><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">debounce</span>(<span class="hljs-params">func, wait = <span class="hljs-number">20</span>, immediate = <span class="hljs-literal">true</span></span>) </span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">var</span> timeout;</span><br><span class="javascript">      <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">var</span> context = <span class="hljs-built_in">this</span>, args = <span class="hljs-built_in">arguments</span>;</span><br><span class="javascript">        <span class="hljs-keyword">var</span> later = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">          timeout = <span class="hljs-literal">null</span>;</span><br>          if (!immediate) func.apply(context, args);<br>        &#125;;<br><span class="javascript">        <span class="hljs-keyword">var</span> callNow = immediate &amp;&amp; !timeout;</span><br><span class="javascript">        <span class="hljs-built_in">clearTimeout</span>(timeout);</span><br><span class="javascript">        timeout = <span class="hljs-built_in">setTimeout</span>(later, wait);</span><br>        if (callNow) func.apply(context, args);<br>      &#125;;<br>    &#125;<br><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><span class="css">    <span class="hljs-selector-tag">html</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">box-sizing</span>: border-box;</span><br><span class="css">      <span class="hljs-attribute">background</span>: <span class="hljs-number">#ffc600</span>;</span><br><span class="css">      <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;helvetica neue&#x27;</span>;</span><br><span class="css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;</span><br><span class="css">      <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">200</span>;</span><br>    &#125;<br>    <br><span class="css">    <span class="hljs-selector-tag">body</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br>    &#125;<br>    <br>    *, *:before, *:after &#123;<br><span class="css">      <span class="hljs-attribute">box-sizing</span>: inherit;</span><br>    &#125;<br><br><span class="css">    <span class="hljs-selector-tag">h1</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">0</span>;</span><br>    &#125;<br><br>    .site-wrap &#123;<br><span class="css">      <span class="hljs-attribute">max-width</span>: <span class="hljs-number">700px</span>;</span><br><span class="css">      <span class="hljs-attribute">margin</span>: <span class="hljs-number">100px</span> auto;</span><br><span class="css">      <span class="hljs-attribute">background</span>: white;</span><br><span class="css">      <span class="hljs-attribute">padding</span>: <span class="hljs-number">40px</span>;</span><br><span class="css">      <span class="hljs-attribute">text-align</span>: justify;</span><br>    &#125;<br><br>    .align-left &#123;<br><span class="css">      <span class="hljs-attribute">float</span>: left;</span><br><span class="css">      <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">20px</span>;</span><br>    &#125;<br><br>    .align-right &#123;<br><span class="css">      <span class="hljs-attribute">float</span>: right;</span><br><span class="css">      <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">20px</span>;</span><br>    &#125;<br><br>    .slide-in &#123;<br><span class="css">      <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;</span><br><span class="css">      <span class="hljs-attribute">transition</span>: all .<span class="hljs-number">5s</span>;</span><br>    &#125;<br><br>    .align-left.slide-in &#123;<br><span class="css">      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(-<span class="hljs-number">30%</span>) <span class="hljs-built_in">scale</span>(<span class="hljs-number">0.95</span>);</span><br>    &#125;<br>    <br>    .align-right.slide-in &#123;<br><span class="css">      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">30%</span>) <span class="hljs-built_in">scale</span>(<span class="hljs-number">0.95</span>);</span><br>    &#125;<br><br>    .slide-in.active &#123;<br><span class="css">      <span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;</span><br><span class="css">      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">0%</span>) <span class="hljs-built_in">scale</span>(<span class="hljs-number">1</span>);</span><br>    &#125;<br><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，透過 <code>console.log</code> 來看看當使用者如果滑動頁面的捲軸時，會印出什麼結果…</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-comment">// debounce</span><br>    <br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">scrollHandler</span>(<span class="hljs-params"></span>)</span>&#123;<br>      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;scroll&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getTime());<br>    &#125;<br>    <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&quot;scroll&quot;</span>, scrollHandler);<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>滑動一下視窗看看 <code>console</code> 會發生什麼？從中可以發現 <code>scroll</code>  這個事件是個會連續觸發的事件，非常的耗費我們電腦的資源，我們以 <code>new Date().getTime()</code> 的方式來看是多久會觸發一次來觀察，也因此了解到，作者在開始時給我們的程式碼中為什麼有 <code>debounce</code> 這個方法，試著加入試試看…</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">debounce</span>(<span class="hljs-params">func, wait = <span class="hljs-number">20</span>, immediate = <span class="hljs-literal">true</span></span>) </span>&#123;<br>      <span class="hljs-keyword">var</span> timeout;<br>      <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">var</span> context = <span class="hljs-built_in">this</span>, args = <span class="hljs-built_in">arguments</span>;<br>        <span class="hljs-keyword">var</span> later = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>          timeout = <span class="hljs-literal">null</span>;<br>          <span class="hljs-keyword">if</span> (!immediate) func.apply(context, args);<br>        &#125;;<br>        <span class="hljs-keyword">var</span> callNow = immediate &amp;&amp; !timeout;<br>        <span class="hljs-built_in">clearTimeout</span>(timeout);<br>        timeout = <span class="hljs-built_in">setTimeout</span>(later, wait);<br>        <span class="hljs-keyword">if</span> (callNow) func.apply(context, args);<br>      &#125;;<br>    &#125;<br>    <br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">scrollHandler</span>(<span class="hljs-params"></span>)</span>&#123;<br>      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;scroll&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getTime());<br>    &#125;<br>    <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&quot;scroll&quot;</span>, debounce(scrollHandler,<span class="hljs-number">100</span>));<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>看看Y軸在螢幕上的距離是多少吧！</p><p>Window.scrollY：<a href="https://tinyurl.com/yyktbyep">https://tinyurl.com/yyktbyep</a></p><p>Window.innerHeight：<a href="https://tinyurl.com/y3ggmnsp">https://tinyurl.com/y3ggmnsp</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-comment">//debounce</span><br>    <br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">scrollHandler</span>(<span class="hljs-params"></span>)</span>&#123;<br>      <span class="hljs-comment">// console.log(window.scrollY);</span><br>  <br>  <span class="hljs-keyword">let</span> windowTop = <span class="hljs-built_in">window</span>.scrollY;<br>      <span class="hljs-keyword">let</span> windowBottom = windowTop + <span class="hljs-built_in">window</span>.innerHeight;<br>    &#125;<br>    <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&quot;scroll&quot;</span>, debounce(scrollHandler,<span class="hljs-number">100</span>));<br><br>  &lt;/script&gt;<br></code></pre></td></tr></table></figure><p>接下來，我們要處理的是在什麼時間點將圖片加入 <code>.slide-in.active</code> ，讓使用者在滑至視窗的Y軸時，可以將圖片由右至左、由左至右的滑入</p><p>如果直接沒有判斷時間點加入</p><p>Element.classList：<a href="https://tinyurl.com/y55e9cea">https://tinyurl.com/y55e9cea</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-comment">//debounce</span><br>  <br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">scrollHandler</span>(<span class="hljs-params"></span>)</span>&#123;<br>      <span class="hljs-comment">// console.log(window.scrollY);</span><br><br>      <span class="hljs-keyword">let</span> windowTop = <span class="hljs-built_in">window</span>.scrollY;<br>      <span class="hljs-keyword">let</span> windowBottom = windowTop + <span class="hljs-built_in">window</span>.innerHeight;<br>      img = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;img&quot;</span>);<br>      img.classList.add(<span class="hljs-string">&quot;active&quot;</span>);<br>    &#125;<br>    <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&quot;scroll&quot;</span>, debounce(scrollHandler,<span class="hljs-number">100</span>));<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>使用者滑至照片的最上端使得圖片滑入</p><p>HTMLElement.offsetTop：<a href="https://tinyurl.com/yymxkgxa">https://tinyurl.com/yymxkgxa</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> &lt;script&gt;<br> <span class="hljs-comment">//debounce</span><br> <br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">scrollHandler</span>(<span class="hljs-params"></span>)</span>&#123;<br>      <span class="hljs-comment">// console.log(window.scrollY);</span><br><br>      <span class="hljs-keyword">let</span> windowTop = <span class="hljs-built_in">window</span>.scrollY;<br>      <span class="hljs-keyword">let</span> windowBottom = windowTop + <span class="hljs-built_in">window</span>.innerHeight;<br>      <span class="hljs-keyword">let</span> img = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;img&quot;</span>);<br>      <br>      <span class="hljs-keyword">if</span> (img.offsetTop &lt; windowBottom) &#123;<br>        img.classList.add(<span class="hljs-string">&quot;active&quot;</span>);<br>      &#125;<br>    &#125;<br>    <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&quot;scroll&quot;</span>, debounce(scrollHandler,<span class="hljs-number">100</span>));<br>    <br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>上面的程式碼都是只有第一張圖片而已，我們現在要將整個頁面的圖片都可以有這樣的效果，就不能只是 <code>document.querySelector</code> 了！</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-comment">//debounce</span><br>    <br>    <span class="hljs-keyword">let</span> images = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&quot;img&quot;</span>);<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">scrollHandler</span>(<span class="hljs-params"></span>)</span>&#123;<br>      <span class="hljs-comment">// console.log(window.scrollY);</span><br><br>      <span class="hljs-keyword">let</span> windowTop = <span class="hljs-built_in">window</span>.scrollY;<br>      <span class="hljs-keyword">let</span> windowBottom = windowTop + <span class="hljs-built_in">window</span>.innerHeight;<br><br>      images.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">img</span>)</span>&#123;<br>        <span class="hljs-keyword">if</span> (img.offsetTop &lt;  windowBottom) &#123;<br>        img.classList.add(<span class="hljs-string">&quot;active&quot;</span>);<br>        &#125;<br>      &#125;)      <br>    &#125;<br>    <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&quot;scroll&quot;</span>, debounce(scrollHandler,<span class="hljs-number">100</span>));<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p> 如果想要是在照片的一半時使得圖片滑入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-comment">//debounce</span><br>    <br>    <span class="hljs-keyword">let</span> images = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&quot;img&quot;</span>);<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">scrollHandler</span>(<span class="hljs-params"></span>)</span>&#123;<br>      <span class="hljs-comment">// console.log(window.scrollY);</span><br><br>      <span class="hljs-keyword">let</span> windowTop = <span class="hljs-built_in">window</span>.scrollY;<br>      <span class="hljs-keyword">let</span> windowBottom = windowTop + <span class="hljs-built_in">window</span>.innerHeight;<br><br>      images.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">img</span>)</span>&#123;<br>        <span class="hljs-keyword">if</span> (img.offsetTop + img.height / <span class="hljs-number">2</span> &lt;  windowBottom) &#123;<br>        img.classList.add(<span class="hljs-string">&quot;active&quot;</span>);<br>        &#125;<br>      &#125;)      <br>    &#125;<br>    <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&quot;scroll&quot;</span>, debounce(scrollHandler,<span class="hljs-number">100</span>));<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>就大功告成啦！</p><h2 id="JS-Final"><a href="#JS-Final" class="headerlink" title="JS - Final"></a>JS - Final</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">debounce</span>(<span class="hljs-params">func, wait = <span class="hljs-number">20</span>, immediate = <span class="hljs-literal">true</span></span>) </span>&#123;<br>      <span class="hljs-keyword">var</span> timeout;<br>      <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">var</span> context = <span class="hljs-built_in">this</span>, args = <span class="hljs-built_in">arguments</span>;<br>        <span class="hljs-keyword">var</span> later = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>          timeout = <span class="hljs-literal">null</span>;<br>          <span class="hljs-keyword">if</span> (!immediate) func.apply(context, args);<br>        &#125;;<br>        <span class="hljs-keyword">var</span> callNow = immediate &amp;&amp; !timeout;<br>        <span class="hljs-built_in">clearTimeout</span>(timeout);<br>        timeout = <span class="hljs-built_in">setTimeout</span>(later, wait);<br>        <span class="hljs-keyword">if</span> (callNow) func.apply(context, args);<br>      &#125;;<br>    &#125;<br>    <br>    <span class="hljs-keyword">let</span> images = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&quot;img&quot;</span>);<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">scrollHandler</span>(<span class="hljs-params"></span>)</span>&#123;<br>      <span class="hljs-comment">// console.log(window.scrollY);</span><br><br>      <span class="hljs-keyword">let</span> windowTop = <span class="hljs-built_in">window</span>.scrollY;<br>      <span class="hljs-keyword">let</span> windowBottom = windowTop + <span class="hljs-built_in">window</span>.innerHeight;<br><span class="hljs-keyword">let</span> imgMiddle = img.offsetTop + img.height / <span class="hljs-number">2</span>;<br>      images.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">img</span>)</span>&#123;<br>        <span class="hljs-keyword">if</span> (imgMiddle &lt;  windowBottom &amp;&amp; iimgMiddle &gt;  windowTop) &#123;<br>          img.classList.add(<span class="hljs-string">&quot;active&quot;</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          img.classList.remove(<span class="hljs-string">&quot;active&quot;</span>);<br>        &#125;<br>      &#125;)      <br>    &#125;<br>    <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&quot;scroll&quot;</span>, debounce(scrollHandler,<span class="hljs-number">100</span>));<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>本刊同步於個人網站：<a href="http://chestertang.site/">http://chestertang.site/</a></p><p>本次範例程式碼原作者來源：<a href="https://tinyurl.com/yavm5f5n">https://tinyurl.com/yavm5f5n</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村12 - Key Sequence Detection</title>
    <link href="/2019/09/27/javascript12/"/>
    <url>/2019/09/27/javascript12/</url>
    
    <content type="html"><![CDATA[<h2 id="12-Key-Sequence-Detection"><a href="#12-Key-Sequence-Detection" class="headerlink" title="12 - Key Sequence Detection"></a>12 - Key Sequence Detection</h2><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h1 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h1><ul><li>做一個打密碼出現彩蛋的功能，像是以前打遊戲的密技（WWSSAADD）<ul><li>呼叫以下網站的圖樣：<a href="http://www.cornify.com/js/cornify.js">http://www.cornify.com/js/cornify.js</a></li></ul></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Key Detection<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://www.cornify.com/js/cornify.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，這個範例就是使用者打出 <code>secretCode</code> 密技的內容 <code>上上下下左左右右</code> 就可以召喚出圖片，因此，開始時我們應該先偵測使用者在 <code>keyup</code> 的時候，輸入了什麼按鍵</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&#x27;keyup&#x27;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">env</span>)</span>&#123;<br>    <span class="hljs-built_in">console</span>.log(env.key, env.keyCode)<br>  &#125;);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>把指令的密技 <code>keyCode</code> 存成一個陣列，並將使用者的 <code>input </code> 設為一個空陣列</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> secretCode = [<span class="hljs-number">38</span>, <span class="hljs-number">38</span>, <span class="hljs-number">40</span>, <span class="hljs-number">40</span>, <span class="hljs-number">37</span>, <span class="hljs-number">37</span>, <span class="hljs-number">39</span>, <span class="hljs-number">39</span>];<br>  <span class="hljs-keyword">const</span> userinput = [];<br>  <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&#x27;keyup&#x27;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">env</span>)</span>&#123;<br>    <span class="hljs-built_in">console</span>.log(env.key, env.keyCode)<br>  &#125;);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>假設使用者輸入數字時，透過 <code>push</code> 會將 <code>keyCode</code> 推進去 <code>userinput</code> 陣列中</p><p>Array.prototype.push()：<a href="https://tinyurl.com/yycov32s">https://tinyurl.com/yycov32s</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> secretCode = [<span class="hljs-number">38</span>, <span class="hljs-number">38</span>, <span class="hljs-number">40</span>, <span class="hljs-number">40</span>, <span class="hljs-number">37</span>, <span class="hljs-number">37</span>, <span class="hljs-number">39</span>, <span class="hljs-number">39</span>];<br>  <span class="hljs-keyword">const</span> userinput = [];<br>  <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&#x27;keyup&#x27;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">env</span>)</span>&#123;<br>    userinput.push(env.keyCode);<br>  &#125;);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>如果使用者 input 的 <code>Keycode</code> 跟 <code>secretCode</code> 相同的話，就會呼叫 <code>cornify_add()</code> 這個 JS 套件中的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> secretCode = [<span class="hljs-number">38</span>, <span class="hljs-number">38</span>, <span class="hljs-number">40</span>, <span class="hljs-number">40</span>, <span class="hljs-number">37</span>, <span class="hljs-number">37</span>, <span class="hljs-number">39</span>, <span class="hljs-number">39</span>];<br>  <span class="hljs-keyword">const</span> userinput = [];<br>  <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&#x27;keyup&#x27;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">env</span>)</span>&#123;<br>    userinput.push(env.keyCode);<br>    <span class="hljs-keyword">if</span>(userinput.join(<span class="hljs-string">&#x27;&#x27;</span>) === secretCode.join(<span class="hljs-string">&#x27;&#x27;</span>))&#123;<br>      cornify_add();<br>    &#125;<br>  &#125;);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p><code>userinput</code> 陣列打對一次後會一直越來越多～來判斷一下 <code>userinput </code> 長度太長的話，把第一個砍掉</p><p>Array.prototype.shift()：<a href="https://tinyurl.com/y4bs8dmf">https://tinyurl.com/y4bs8dmf</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> secretCode = [<span class="hljs-number">38</span>, <span class="hljs-number">38</span>, <span class="hljs-number">40</span>, <span class="hljs-number">40</span>, <span class="hljs-number">37</span>, <span class="hljs-number">37</span>, <span class="hljs-number">39</span>, <span class="hljs-number">39</span>];<br>  <span class="hljs-keyword">const</span> userinput = [];<br>  <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&#x27;keyup&#x27;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">env</span>)</span>&#123;<br>    userinput.push(env.keyCode);<br><br>    <span class="hljs-keyword">while</span>(userinput.length &gt; secretCode.length)&#123;<br>      userinput.shift();<br>    &#125;<br>    <span class="hljs-keyword">if</span>(userinput.join(<span class="hljs-string">&#x27;&#x27;</span>) === secretCode.join(<span class="hljs-string">&#x27;&#x27;</span>))&#123;<br>      cornify_add();<br>    &#125;<br>  &#125;);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>就大功告成啦！</p><h2 id="JS-Final"><a href="#JS-Final" class="headerlink" title="JS - Final"></a>JS - Final</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> secretCode = [<span class="hljs-number">38</span>, <span class="hljs-number">38</span>, <span class="hljs-number">40</span>, <span class="hljs-number">40</span>, <span class="hljs-number">37</span>, <span class="hljs-number">37</span>, <span class="hljs-number">39</span>, <span class="hljs-number">39</span>];<br>  <span class="hljs-keyword">const</span> userinput = [];<br>  <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&#x27;keyup&#x27;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">env</span>)</span>&#123;<br>    userinput.push(env.keyCode);<br><br>    <span class="hljs-keyword">while</span>(userinput.length &gt; secretCode.length)&#123;<br>      userinput.shift();<br>    &#125;<br>    <span class="hljs-keyword">if</span>(userinput.join(<span class="hljs-string">&#x27;|&#x27;</span>) === secretCode.join(<span class="hljs-string">&#x27;|&#x27;</span>))&#123;<br>      cornify_add();<br>    &#125;<br>  &#125;);<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>本刊同步於個人網站：<a href="http://chestertang.site/">http://chestertang.site/</a></p><p>本次範例程式碼原作者來源：<a href="https://tinyurl.com/yavm5f5n">https://tinyurl.com/yavm5f5n</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村11 - Custom Video Player</title>
    <link href="/2019/09/26/javascript11/"/>
    <url>/2019/09/26/javascript11/</url>
    
    <content type="html"><![CDATA[<h2 id="11-Custom-Video-Player"><a href="#11-Custom-Video-Player" class="headerlink" title="11 - Custom Video Player"></a>11 - Custom Video Player</h2><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h1 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h1><ul><li>功能<ul><li>和預設介面相同的功能<ul><li>play、pause、跳到指定時間、音量調整、播放速度、往前10秒、往後5秒</li></ul></li></ul></li><li>畫面<ul><li>縮起來剩下進度條</li><li>Hover整個出現</li></ul></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>HTML Video Player<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;style.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>   <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player&quot;</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player__video viewer&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;652333414.mp4&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br><br>     <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player__controls&quot;</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;progress&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;progress__filled&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player__button toggle&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Toggle Play&quot;</span>&gt;</span>►<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;volume&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player__slider&quot;</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">step</span>=<span class="hljs-string">&quot;0.05&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;playbackRate&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player__slider&quot;</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;0.5&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">step</span>=<span class="hljs-string">&quot;0.1&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">data-skip</span>=<span class="hljs-string">&quot;-10&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player__button&quot;</span>&gt;</span>« 10s<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">data-skip</span>=<span class="hljs-string">&quot;25&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player__button&quot;</span>&gt;</span>25s »<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>     <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;scripts.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">html</span> &#123;<br>  <span class="hljs-attribute">box-sizing</span>: border-box;<br>&#125;<br><br>*, *:before, *:after &#123;<br>  box-sizing: inherit;<br>&#125;<br><br><span class="hljs-selector-tag">body</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#7A419B</span>;<br>  <span class="hljs-attribute">min-height</span>: <span class="hljs-number">100vh</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">135deg</span>, <span class="hljs-number">#7c1599</span> <span class="hljs-number">0%</span>,<span class="hljs-number">#921099</span> <span class="hljs-number">48%</span>,<span class="hljs-number">#7e4ae8</span> <span class="hljs-number">100%</span>);<br>  <span class="hljs-attribute">background-size</span>: cover;<br>  <span class="hljs-attribute">align-items</span>: center;<br>  <span class="hljs-attribute">justify-content</span>: center;<br>&#125;<br><br><span class="hljs-selector-class">.player</span> &#123;<br>  <span class="hljs-attribute">max-width</span>: <span class="hljs-number">750px</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">5px</span> solid <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.2</span>);<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">20px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.2</span>);<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">overflow</span>: hidden;<br>&#125;<br><br><span class="hljs-comment">/* This css is only applied when fullscreen is active. */</span><br><span class="hljs-selector-class">.player</span><span class="hljs-selector-pseudo">:fullscreen</span> &#123;<br>  <span class="hljs-attribute">max-width</span>: none;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>&#125;<br><br><span class="hljs-selector-class">.player</span>:-webkit-full-screen &#123;<br>  max-width: none;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>&#125;<br><br><span class="hljs-selector-class">.player__video</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>&#125;<br><br><span class="hljs-selector-class">.player__button</span> &#123;<br>  <span class="hljs-attribute">background</span>: none;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">color</span>: white;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">outline</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">cursor</span>: pointer;<br>  <span class="hljs-attribute">max-width</span>: <span class="hljs-number">50px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.player__button</span><span class="hljs-selector-pseudo">:focus</span> &#123;<br>  <span class="hljs-attribute">border-color</span>: <span class="hljs-number">#ffc600</span>;<br>&#125;<br><br><span class="hljs-selector-class">.player__slider</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">10px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.player__controls</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">100%</span>) <span class="hljs-built_in">translateY</span>(-<span class="hljs-number">5px</span>);<br>  <span class="hljs-attribute">transition</span>: all .<span class="hljs-number">3s</span>;<br>  <span class="hljs-attribute">flex-wrap</span>: wrap;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.1</span>);<br>&#125;<br><br><span class="hljs-selector-class">.player</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-class">.player__controls</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-selector-class">.player</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-class">.progress</span> &#123;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">15px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.player__controls</span> &gt; * &#123;<br>  <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;<br>&#125;<br><br><span class="hljs-selector-class">.progress</span> &#123;<br>  <span class="hljs-attribute">flex</span>: <span class="hljs-number">10</span>;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-basis</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">5px</span>;<br>  <span class="hljs-attribute">transition</span>: height <span class="hljs-number">0.3s</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.5</span>);<br>  <span class="hljs-attribute">cursor</span>: ew-resize;<br>&#125;<br><br><span class="hljs-selector-class">.progress__filled</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#ffc600</span>;<br>  <span class="hljs-attribute">flex</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">flex-basis</span>: <span class="hljs-number">50%</span>;<br>&#125;<br><br><span class="hljs-comment">/* unholy css to style input type=&quot;range&quot; */</span><br><br><span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=range]</span> &#123;<br>  -webkit-appearance: none;<br>  <span class="hljs-attribute">background</span>: transparent;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">5px</span>;<br>&#125;<br><br><span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=range]</span><span class="hljs-selector-pseudo">:focus</span> &#123;<br>  <span class="hljs-attribute">outline</span>: none;<br>&#125;<br><br><span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=range]</span>::-webkit-slider-runnable-track &#123;<br>  width: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">8.4px</span>;<br>  <span class="hljs-attribute">cursor</span>: pointer;<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">1px</span> <span class="hljs-number">1px</span> <span class="hljs-number">1px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>), <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">13</span>, <span class="hljs-number">13</span>, <span class="hljs-number">13</span>, <span class="hljs-number">0</span>);<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">0.8</span>);<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">1.3px</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">0.2px</span> solid <span class="hljs-built_in">rgba</span>(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=range]</span>::-webkit-slider-thumb &#123;<br>  height: <span class="hljs-number">15px</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">15px</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#ffc600</span>;<br>  <span class="hljs-attribute">cursor</span>: pointer;<br>  -webkit-appearance: none;<br>  <span class="hljs-attribute">margin-top</span>: -<span class="hljs-number">3.5px</span>;<br>  <span class="hljs-attribute">box-shadow</span>:<span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">2px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.2</span>);<br>&#125;<br><br><span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=range]</span><span class="hljs-selector-pseudo">:focus</span>::-webkit-slider-runnable-track &#123;<br>  background: <span class="hljs-number">#bada55</span>;<br>&#125;<br><br><span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=range]</span>::-moz-range-track &#123;<br>  width: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">8.4px</span>;<br>  <span class="hljs-attribute">cursor</span>: pointer;<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">1px</span> <span class="hljs-number">1px</span> <span class="hljs-number">1px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>), <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">13</span>, <span class="hljs-number">13</span>, <span class="hljs-number">13</span>, <span class="hljs-number">0</span>);<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#ffffff</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">1.3px</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">0.2px</span> solid <span class="hljs-built_in">rgba</span>(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=range]</span>::-moz-range-thumb &#123;<br>  box-shadow: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>), <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">13</span>, <span class="hljs-number">13</span>, <span class="hljs-number">13</span>, <span class="hljs-number">0</span>);<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">15px</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">15px</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#ffc600</span>;<br>  <span class="hljs-attribute">cursor</span>: pointer;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先可以估狗查一下在 HTML、JS 處理 Vedio 的方法上，是如何來進行操作的，分別可以看到 <code>&lt;video&gt;: The Video Embed element</code> 、 <code>HTMLMediaElement</code> </p><p><video> The Video Embed element：<a href="https://tinyurl.com/k8qo497">https://tinyurl.com/k8qo497</a></p><p>HTMLMediaElement：<a href="https://tinyurl.com/yxcx6wpq">https://tinyurl.com/yxcx6wpq</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">controls</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;250&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/media/examples/flower.webm&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;video/webm&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/media/examples/flower.mp4&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;video/mp4&quot;</span>&gt;</span><br><br>    Sorry, your browser doesn&#x27;t support embedded videos.<br><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在這個範例中，原作者想要將給個按鈕都能自己手刻、控制速度、音量大小、暫停、開始、快轉等等效果，但其實滿不實際的，第一個想到處理影片的方式一定是直接丟 Youtube 嵌入，把影片放在自己本地端有點吃資源</p><p>於是就查了一下如果影片在本地端，到底該如何使用呢？只要有個 <code>class</code> 叫做 <code>controls</code> 就可以了…</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>HTML Video Player<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;style.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>   <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player&quot;</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player__video viewer&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;652333414.mp4&quot;</span> <span class="hljs-attr">controls</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br><br>     <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player__controls&quot;</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;progress&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;progress__filled&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player__button toggle&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Toggle Play&quot;</span>&gt;</span>►<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;volume&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player__slider&quot;</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">step</span>=<span class="hljs-string">&quot;0.05&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;playbackRate&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player__slider&quot;</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;0.5&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">step</span>=<span class="hljs-string">&quot;0.1&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">data-skip</span>=<span class="hljs-string">&quot;-10&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player__button&quot;</span>&gt;</span>« 10s<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">data-skip</span>=<span class="hljs-string">&quot;25&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;player__button&quot;</span>&gt;</span>25s »<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>     <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;scripts.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>就大功告成啦！（欸～不是啦！雖然這樣很實際但還是尊重一下原本作者想要練習的東西嘛…</p><h2 id="JS-Final"><a href="#JS-Final" class="headerlink" title="JS - Final"></a>JS - Final</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/* Get Our Elements */</span><br><span class="hljs-keyword">const</span> player = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.player&#x27;</span>);<br><span class="hljs-keyword">const</span> video = player.querySelector(<span class="hljs-string">&#x27;.viewer&#x27;</span>);<br><span class="hljs-keyword">const</span> progress = player.querySelector(<span class="hljs-string">&#x27;.progress&#x27;</span>);<br><span class="hljs-keyword">const</span> progressBar = player.querySelector(<span class="hljs-string">&#x27;.progress__filled&#x27;</span>);<br><span class="hljs-keyword">const</span> toggle = player.querySelector(<span class="hljs-string">&#x27;.toggle&#x27;</span>);<br><span class="hljs-keyword">const</span> skipButtons = player.querySelectorAll(<span class="hljs-string">&#x27;[data-skip]&#x27;</span>);<br><span class="hljs-keyword">const</span> ranges = player.querySelectorAll(<span class="hljs-string">&#x27;.player__slider&#x27;</span>);<br><br><span class="hljs-comment">/* Build out functions */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">togglePlay</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">const</span> method = video.paused ? <span class="hljs-string">&#x27;play&#x27;</span> : <span class="hljs-string">&#x27;pause&#x27;</span>;<br>  video[method]();<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">updateButton</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">const</span> icon = <span class="hljs-built_in">this</span>.paused ? <span class="hljs-string">&#x27;►&#x27;</span> : <span class="hljs-string">&#x27;❚ ❚&#x27;</span>;<br>  <span class="hljs-built_in">console</span>.log(icon);<br>  toggle.textContent = icon;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">skip</span>(<span class="hljs-params"></span>) </span>&#123;<br> video.currentTime += <span class="hljs-built_in">parseFloat</span>(<span class="hljs-built_in">this</span>.dataset.skip);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">handleRangeUpdate</span>(<span class="hljs-params"></span>) </span>&#123;<br>  video[<span class="hljs-built_in">this</span>.name] = <span class="hljs-built_in">this</span>.value;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">handleProgress</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">const</span> percent = (video.currentTime / video.duration) * <span class="hljs-number">100</span>;<br>  progressBar.style.flexBasis = <span class="hljs-string">`<span class="hljs-subst">$&#123;percent&#125;</span>%`</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">scrub</span>(<span class="hljs-params">e</span>) </span>&#123;<br>  <span class="hljs-keyword">const</span> scrubTime = (e.offsetX / progress.offsetWidth) * video.duration;<br>  video.currentTime = scrubTime;<br>&#125;<br><br><span class="hljs-comment">/* Hook up the event listeners */</span><br>video.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, togglePlay);<br>video.addEventListener(<span class="hljs-string">&#x27;play&#x27;</span>, updateButton);<br>video.addEventListener(<span class="hljs-string">&#x27;pause&#x27;</span>, updateButton);<br>video.addEventListener(<span class="hljs-string">&#x27;timeupdate&#x27;</span>, handleProgress);<br><br>toggle.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, togglePlay);<br>skipButtons.forEach(<span class="hljs-function"><span class="hljs-params">button</span> =&gt;</span> button.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, skip));<br>ranges.forEach(<span class="hljs-function"><span class="hljs-params">range</span> =&gt;</span> range.addEventListener(<span class="hljs-string">&#x27;change&#x27;</span>, handleRangeUpdate));<br>ranges.forEach(<span class="hljs-function"><span class="hljs-params">range</span> =&gt;</span> range.addEventListener(<span class="hljs-string">&#x27;mousemove&#x27;</span>, handleRangeUpdate));<br><br><span class="hljs-keyword">let</span> mousedown = <span class="hljs-literal">false</span>;<br>progress.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, scrub);<br>progress.addEventListener(<span class="hljs-string">&#x27;mousemove&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> mousedown &amp;&amp; scrub(e));<br>progress.addEventListener(<span class="hljs-string">&#x27;mousedown&#x27;</span>, <span class="hljs-function">() =&gt;</span> mousedown = <span class="hljs-literal">true</span>);<br>progress.addEventListener(<span class="hljs-string">&#x27;mouseup&#x27;</span>, <span class="hljs-function">() =&gt;</span> mousedown = <span class="hljs-literal">false</span>);<br></code></pre></td></tr></table></figure><p>本刊同步於個人網站：<a href="http://chestertang.site/">http://chestertang.site/</a></p><p>本次範例程式碼原作者來源：<a href="https://tinyurl.com/yavm5f5n">https://tinyurl.com/yavm5f5n</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村10 - Hold Shift and Check Checkboxes</title>
    <link href="/2019/09/25/javascript10/"/>
    <url>/2019/09/25/javascript10/</url>
    
    <content type="html"><![CDATA[<h2 id="10-Hold-Shift-and-Check-Checkboxes"><a href="#10-Hold-Shift-and-Check-Checkboxes" class="headerlink" title="10 - Hold Shift and Check Checkboxes"></a>10 - Hold Shift and Check Checkboxes</h2><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h2 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h2><ul><li>功能<ul><li>對其中一個 checkbox 打勾，再按住 <code>shift</code> 對另一個打勾，中間的選項會自動勾起來</li></ul></li><li>畫面<ul><li>滑鼠點 checkbox要打勾，再點擊則取消</li><li>「按住<code>shift</code>」勾選，若畫面上已有打勾，則此次和上次打勾的選項中間都要自動打勾</li></ul></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Hold Shift to Check Multiple Checkboxes<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><br><span class="css">    <span class="hljs-selector-tag">html</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">font-family</span>: sans-serif;</span><br><span class="css">      <span class="hljs-attribute">background</span>: <span class="hljs-number">#ffc600</span>;</span><br>    &#125;<br><br>    .inbox &#123;<br><span class="css">      <span class="hljs-attribute">max-width</span>: <span class="hljs-number">400px</span>;</span><br><span class="css">      <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto;</span><br><span class="css">      <span class="hljs-attribute">background</span>: white;</span><br><span class="css">      <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">5px</span>;</span><br><span class="css">      <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">10px</span> <span class="hljs-number">10px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.1</span>);</span><br>    &#125;<br><br>    .item &#123;<br><span class="css">      <span class="hljs-attribute">display</span>: flex;</span><br><span class="css">      <span class="hljs-attribute">align-items</span>: center;</span><br><span class="css">      <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#F1F1F1</span>;</span><br>    &#125;<br><br><span class="css">    <span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:last-child</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">0</span>;</span><br>    &#125;<br><br><span class="css">    <span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">:checked</span> + <span class="hljs-selector-tag">p</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">background</span>: <span class="hljs-number">#F9F9F9</span>;</span><br><span class="css">      <span class="hljs-attribute">text-decoration</span>: line-through;</span><br>    &#125;<br><br><span class="css">    <span class="hljs-selector-tag">input</span><span class="hljs-selector-attr">[type=<span class="hljs-string">&quot;checkbox&quot;</span>]</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">margin</span>: <span class="hljs-number">20px</span>;</span><br>    &#125;<br><br><span class="css">    <span class="hljs-selector-tag">p</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="css">      <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;</span><br><span class="css">      <span class="hljs-attribute">transition</span>: background <span class="hljs-number">0.2s</span>;</span><br><span class="css">      <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;</span><br><span class="css">      <span class="hljs-attribute">font-family</span>:<span class="hljs-string">&#x27;helvetica neue&#x27;</span>;</span><br><span class="css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;</span><br><span class="css">      <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">200</span>;</span><br><span class="css">      <span class="hljs-attribute">border-left</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#D1E2FF</span>;</span><br>    &#125;<br>  <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>   <span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">   The following is a common layout you would see in an email client.</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">   When a user clicks a checkbox, holds Shift, and then clicks another checkbox a few rows down, all the checkboxes inbetween those two checkboxes should be checked.</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">  --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;inbox&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>This is an inbox layout.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Check one item<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Hold down your Shift key<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Check a lower item<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Everything in between should also be set to checked<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Try to do it without any libraries<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Just regular JavaScript<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Good Luck!<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Don&#x27;t forget to tweet your result!<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，透過 <code>querySelectorAll</code> 抓出 <code>type=&quot;checkbox&quot;</code> ，為了方便之後可以使用 <code>foreach</code> 迴圈讀出每項checkbox，因此再將它轉為陣列 <code>Array.from</code>，如果被點擊的話，觸發 <code>clickHandler</code> 這個方法印出 <code>MouseEvent</code> 可以操作的項目，然後來看看裡面有什麼…</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> checkboxes = <span class="hljs-built_in">Array</span>.from(<span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;.inbox input[type=&quot;checkbox&quot;]&#x27;</span>));<br><br>  checkboxes.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">input</span>)</span>&#123;<br>  input.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, clickHandler);<br>  &#125;)<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clickHandler</span>(<span class="hljs-params">env</span>)</span>&#123;<br>  <span class="hljs-built_in">console</span>.log(env);<br>  &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>根據題目要求，我們要執行的是按住 Shift 按鈕觸發功能，在上方程式碼的 <code>env</code> 變數中，印出來的觸發事件如下，可以看到 <code>shiftKey: false</code> 這個事件物件，勾起來是 <code>true</code>，反之</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// MouseEvent &#123;isTrusted: true, screenX: 287, screenY: 265, clientX: 316, clientY: 80, …&#125;</span><br><span class="hljs-comment">// altKey: false</span><br><span class="hljs-comment">// bubbles: true</span><br><span class="hljs-comment">// button: 0</span><br><span class="hljs-comment">// buttons: 0</span><br><span class="hljs-comment">// cancelBubble: false</span><br><span class="hljs-comment">// cancelable: true</span><br><span class="hljs-comment">// clientX: 316</span><br><span class="hljs-comment">// clientY: 80</span><br><span class="hljs-comment">// -------------------略--------------------</span><br><span class="hljs-comment">// screenX: 287</span><br><span class="hljs-comment">// screenY: 265</span><br><span class="hljs-comment">// shiftKey: false</span><br><span class="hljs-comment">// sourceCapabilities: InputDeviceCapabilities &#123;firesTouchEvents: true&#125;</span><br><span class="hljs-comment">// srcElement: input</span><br><span class="hljs-comment">// target: input</span><br><span class="hljs-comment">// timeStamp: 1173.464999999851</span><br><span class="hljs-comment">// toElement: input</span><br><span class="hljs-comment">// type: &quot;click&quot;</span><br><span class="hljs-comment">// view: Window &#123;postMessage: ƒ, blur: ƒ, focus: ƒ, close: ƒ, parent: Window, …&#125;</span><br><span class="hljs-comment">// which: 1</span><br><span class="hljs-comment">// x: 316</span><br><span class="hljs-comment">// y: 80</span><br><span class="hljs-comment">// __proto__: MouseEvent</span><br></code></pre></td></tr></table></figure><p>不過要先要紀錄我們點到的 checkbox 是陣列中的第幾個，透過 <code>indexOf</code> 算出並記於變數 <code>firstCheck</code> 中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> checkboxes = <span class="hljs-built_in">Array</span>.from(<span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;.inbox input[type=&quot;checkbox&quot;]&#x27;</span>));<br><br>  checkboxes.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">input</span>)</span>&#123;<br>    input.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, clickHandler);<br>  &#125;)<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clickHandler</span>(<span class="hljs-params">env</span>)</span>&#123;<br>    <span class="hljs-comment">// console.log(env);</span><br>    firstCheck = checkboxes.indexOf(<span class="hljs-built_in">this</span>)<br>    <span class="hljs-built_in">console</span>.log(firstCheck);<br>  &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>變數 <code>firstCheck</code> 代表紀錄使用者一開始點的 Checkbox，先宣告一開始是空值，如果使用者點下 Checkbox，就記錄下剛剛抓的陣列第幾個，反之為 null</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> checkboxes = <span class="hljs-built_in">Array</span>.from(<span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;.inbox input[type=&quot;checkbox&quot;]&#x27;</span>));<br><br>  checkboxes.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">input</span>)</span>&#123;<br>    input.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, clickHandler);<br>  &#125;)<br><br>  <span class="hljs-keyword">let</span> firstCheck = <span class="hljs-literal">null</span>;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clickHandler</span>(<span class="hljs-params">env</span>)</span>&#123;<br>    <span class="hljs-comment">// console.log(env);</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.checked) &#123;<br>      firstCheck = checkboxes.indexOf(<span class="hljs-built_in">this</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      firstCheck = <span class="hljs-literal">null</span>;<br>    &#125;<br>  &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>當有 ShiftKey 並且 firstCheck 不是空值的話，可以抓到使用者第二個按下的按鈕，並且透過 <code>slice</code> 將點擊的兩個按鈕排列 <code>Math.min / Math.max</code>，在將全部打勾的讀出來設定為打勾勾</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> checkboxes = <span class="hljs-built_in">Array</span>.from(<span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;.inbox input[type=&quot;checkbox&quot;]&#x27;</span>));<br><br>  checkboxes.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">input</span>)</span>&#123;<br>    input.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, clickHandler);<br>  &#125;)<br><br>  <span class="hljs-keyword">let</span> firstCheck = <span class="hljs-literal">null</span>;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clickHandler</span>(<span class="hljs-params">env</span>)</span>&#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.checked) &#123;<br>      <span class="hljs-keyword">if</span> (env.shiftKey &amp;&amp; firstCheck !== <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-keyword">let</span> secondCheck = checkboxes.indexOf(<span class="hljs-built_in">this</span>);<br>        checkboxes<br>          .slice(<br>            <span class="hljs-built_in">Math</span>.min(secondCheck, firstCheck),<br>            <span class="hljs-built_in">Math</span>.max(secondCheck, firstCheck)<br>          )<br>          .forEach(<span class="hljs-function"><span class="hljs-params">input</span> =&gt;</span> (input.checked = <span class="hljs-literal">true</span>));<br>      &#125; <br>      firstCheck = checkboxes.indexOf(<span class="hljs-built_in">this</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      firstCheck = <span class="hljs-literal">null</span>;<br>    &#125;<br>  &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>就大功告成啦！</p><h2 id="JS-Final"><a href="#JS-Final" class="headerlink" title="JS - Final"></a>JS - Final</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> checkboxes = <span class="hljs-built_in">Array</span>.from(<span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;.inbox input[type=&quot;checkbox&quot;]&#x27;</span>));<br><br>  checkboxes.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">input</span>)</span>&#123;<br>    input.addEventListener(<span class="hljs-string">&quot;click&quot;</span>, clickHandler);<br>  &#125;)<br><br>  <span class="hljs-keyword">let</span> firstCheck = <span class="hljs-literal">null</span>;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clickHandler</span>(<span class="hljs-params">env</span>)</span>&#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.checked) &#123;<br>      <span class="hljs-keyword">if</span> (env.shiftKey &amp;&amp; firstCheck !== <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-keyword">let</span> secondCheck = checkboxes.indexOf(<span class="hljs-built_in">this</span>);<br>        checkboxes<br>          .slice(<br>            <span class="hljs-built_in">Math</span>.min(secondCheck, firstCheck),<br>            <span class="hljs-built_in">Math</span>.max(secondCheck, firstCheck)<br>          )<br>          .forEach(<span class="hljs-function"><span class="hljs-params">input</span> =&gt;</span> (input.checked = <span class="hljs-literal">true</span>));<br>      &#125; <br>      firstCheck = checkboxes.indexOf(<span class="hljs-built_in">this</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      firstCheck = <span class="hljs-literal">null</span>;<br>    &#125;<br>  &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>本刊同步於個人網站：<a href="http://chestertang.site/">http://chestertang.site/</a></p><p>本次範例程式碼原作者來源：<a href="https://tinyurl.com/yavm5f5n">https://tinyurl.com/yavm5f5n</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村09 - Dev Tools</title>
    <link href="/2019/09/24/javascript09/"/>
    <url>/2019/09/24/javascript09/</url>
    
    <content type="html"><![CDATA[<h2 id="09-Dev-Tools-Domination"><a href="#09-Dev-Tools-Domination" class="headerlink" title="09 - Dev Tools Domination"></a>09 - Dev Tools Domination</h2><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h2 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h2><ul><li>開發工具和 console 技巧的範例，直接來練習吧！</li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Console Tricks!<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&quot;makeGreen()&quot;</span>&gt;</span>×BREAK×DOWN×<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">    <span class="hljs-keyword">const</span> dogs = [&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Snickers&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">2</span> &#125;, &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;hugo&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">8</span> &#125;];</span><br><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">makeGreen</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">const</span> p = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;p&#x27;</span>);</span><br><span class="javascript">      p.style.color = <span class="hljs-string">&#x27;#BADA55&#x27;</span>;</span><br><span class="javascript">      p.style.fontSize = <span class="hljs-string">&#x27;50px&#x27;</span>;</span><br>    &#125;<br><br><span class="javascript">    <span class="hljs-comment">// Regular</span></span><br><br><span class="javascript">    <span class="hljs-comment">// Interpolated</span></span><br><br><span class="javascript">    <span class="hljs-comment">// Styled</span></span><br><br><span class="javascript">    <span class="hljs-comment">// warning!</span></span><br><br><span class="javascript">    <span class="hljs-comment">// Error :|</span></span><br><br><span class="javascript">    <span class="hljs-comment">// Info</span></span><br><br><span class="javascript">    <span class="hljs-comment">// Testing</span></span><br><br><span class="javascript">    <span class="hljs-comment">// clearing</span></span><br><br><span class="javascript">    <span class="hljs-comment">// Viewing DOM Elements</span></span><br><br><span class="javascript">    <span class="hljs-comment">// Grouping together</span></span><br><br><span class="javascript">    <span class="hljs-comment">// counting</span></span><br><br><span class="javascript">    <span class="hljs-comment">// timing</span></span><br><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，範例都與 JS 的 Console 有關，所使用到的 Console 方法都可以參考以下</p><p>Console：<a href="https://tinyurl.com/y6nrq9gq">https://tinyurl.com/y6nrq9gq</a></p><ol><li><p>Regular Console</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;hello&#x27;</span>);<br><br><span class="hljs-comment">// hello</span><br></code></pre></td></tr></table></figure></li><li><p>Interpolated Console</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;hi my name is %s&#x27;</span>,<span class="hljs-string">&#x27;chester&#x27;</span>);<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;hi my name is %d&#x27;</span>, <span class="hljs-number">3.14</span> );<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;hi my name is %f&#x27;</span>, <span class="hljs-number">3.14</span> );<br><br><span class="hljs-comment">// hi my name is chester</span><br><span class="hljs-comment">// hi my name is 3</span><br><span class="hljs-comment">// hi my name is 3.14</span><br></code></pre></td></tr></table></figure></li><li><p>ES6 Console</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> es6 = <span class="hljs-string">&#x27;es6&#x27;</span>;<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">`my name is <span class="hljs-subst">$&#123;es6&#125;</span>`</span>);<br><br><span class="hljs-comment">// my name is es6</span><br></code></pre></td></tr></table></figure></li><li><p>Styled Console</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;%c住手&quot;</span>, <span class="hljs-string">&quot;font-size:60px; color:red&quot;</span>);<br><br><span class="hljs-comment">// 紅色的大大的住手(fb?)</span><br></code></pre></td></tr></table></figure></li><li><p>Warning Console</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.warn(<span class="hljs-string">&quot;警告&quot;</span>);<br><br><span class="hljs-comment">// 黃色的緊告</span><br></code></pre></td></tr></table></figure></li><li><p>Error Console</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.error(<span class="hljs-string">&quot;錯誤&quot;</span>);<br><br><span class="hljs-comment">// 紅色的錯誤</span><br></code></pre></td></tr></table></figure></li><li><p>Info Console</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.info(<span class="hljs-string">&quot;好像跟log沒有什麼差別，以前有一個圖標的樣子orz&quot;</span>);<br></code></pre></td></tr></table></figure></li><li><p>Testing Conosle</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.assert(<span class="hljs-literal">true</span>,<span class="hljs-string">&quot;訊息&quot;</span>);<br><span class="hljs-built_in">console</span>.assert(<span class="hljs-literal">false</span>,<span class="hljs-string">&quot;前面訊息沒有通過，就會噴這段訊息&quot;</span>);<br><span class="hljs-built_in">console</span>.assert(<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-string">&quot;前面訊息沒有通過，就會噴這段訊息&quot;</span>);<br><span class="hljs-built_in">console</span>.assert(<span class="hljs-number">0</span>,<span class="hljs-string">&quot;前面訊息沒有通過，就會噴這段訊息&quot;</span>);<br><span class="hljs-built_in">console</span>.assert(<span class="hljs-literal">NaN</span>,<span class="hljs-string">&quot;前面訊息沒有通過，就會噴這段訊息&quot;</span>);<br><span class="hljs-built_in">console</span>.assert(<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;前面訊息沒有通過，就會噴這段訊息&quot;</span>);<br><span class="hljs-built_in">console</span>.assert(<span class="hljs-literal">undefined</span>,<span class="hljs-string">&quot;前面訊息沒有通過，就會噴這段訊息&quot;</span>);<br></code></pre></td></tr></table></figure></li><li><p>Clearing Console</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript">   CTRL+L<br>   <span class="hljs-string">``</span><span class="hljs-string">`  </span><br><span class="hljs-string"></span><br><span class="hljs-string">10. Viewing DOM Elements Console</span><br><span class="hljs-string"></span><br><span class="hljs-string">    `</span><span class="hljs-string">``</span>javascript<br>    <span class="hljs-keyword">let</span> p = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;p&quot;</span>);<br>    <span class="hljs-built_in">console</span>.log(p);<br>    <span class="hljs-built_in">console</span>.log(dogs);<br>    <span class="hljs-comment">// &lt;p onclick=&quot;makeGreen()&quot;&gt;×BREAK×DOWN×&lt;/p&gt; html的dom</span><br>    <span class="hljs-comment">// (2) [&#123;…&#125;, &#123;…&#125;]                            array的dom</span><br>    <br>    <span class="hljs-built_in">console</span>.dir(p);<br>    <span class="hljs-built_in">console</span>.dir(dogs);<br>    <br>    <span class="hljs-comment">// p        P內的所有可以用  展開dom告訴有哪些屬性可以用</span><br>    <span class="hljs-comment">// Array(2) DOGS內的所有可以用  展開dom告訴有哪些屬性可以用</span><br>    <span class="hljs-string">``</span><span class="hljs-string">`   </span><br><span class="hljs-string"></span><br><span class="hljs-string">11. Grouping together Console</span><br><span class="hljs-string"></span><br><span class="hljs-string">    `</span><span class="hljs-string">``</span>javascript<br>    <span class="hljs-built_in">console</span>.table(dogs);<br>    <span class="hljs-built_in">console</span>.table(dogs,[<span class="hljs-string">&#x27;name&#x27;</span>]);<br>    <span class="hljs-comment">// 只要有name欄位</span><br></code></pre></td></tr></table></figure></li><li><p>counting Console</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.count(<span class="hljs-string">&#x27;Wes&#x27;</span>);<br><span class="hljs-built_in">console</span>.count(<span class="hljs-string">&#x27;Wes&#x27;</span>);<br><span class="hljs-built_in">console</span>.count(<span class="hljs-string">&#x27;Steve&#x27;</span>);<br><span class="hljs-built_in">console</span>.count(<span class="hljs-string">&#x27;Steve&#x27;</span>);<br><span class="hljs-built_in">console</span>.count(<span class="hljs-string">&#x27;Wes&#x27;</span>);<br><span class="hljs-built_in">console</span>.count(<span class="hljs-string">&#x27;Steve&#x27;</span>);<br><span class="hljs-built_in">console</span>.count(<span class="hljs-string">&#x27;Wes&#x27;</span>);<br><span class="hljs-built_in">console</span>.count(<span class="hljs-string">&#x27;Steve&#x27;</span>);<br><span class="hljs-built_in">console</span>.count(<span class="hljs-string">&#x27;Steve&#x27;</span>);<br><span class="hljs-built_in">console</span>.count(<span class="hljs-string">&#x27;Steve&#x27;</span>);<br><span class="hljs-built_in">console</span>.count(<span class="hljs-string">&#x27;Steve&#x27;</span>);<br><span class="hljs-built_in">console</span>.count(<span class="hljs-string">&#x27;Steve&#x27;</span>);<br><br><span class="hljs-comment">// 印出 count 東西的數量</span><br></code></pre></td></tr></table></figure></li><li><p>timing Conolse</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.time(<span class="hljs-string">&quot;test1&quot;</span>);<br><span class="hljs-keyword">let</span> i<br><span class="hljs-keyword">let</span> j <br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span> ; i &lt; <span class="hljs-number">1000</span>; i++) &#123;<br>j = i;<br>&#125;<br><span class="hljs-built_in">console</span>.timeEnd(<span class="hljs-string">&quot;test1&quot;</span>);<br><br><span class="hljs-comment">// test1: 0.015869140625ms</span><br><br><span class="hljs-built_in">console</span>.time(<span class="hljs-string">&quot;test2&quot;</span>); <br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span> ; i &lt; <span class="hljs-number">1000</span>; i++) &#123;<br>j = i ;<br>&#125;<br><span class="hljs-built_in">console</span>.timeEnd(<span class="hljs-string">&quot;test2&quot;</span>);<br><br><span class="hljs-comment">// test2: 0.01513671875ms</span><br></code></pre></td></tr></table></figure><p>就大功告成啦！</p></li></ol><h2 id="JS-Final"><a href="#JS-Final" class="headerlink" title="JS - Final"></a>JS - Final</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">  <span class="hljs-keyword">const</span> dogs = [&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Snickers&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">2</span> &#125;, &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;hugo&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">8</span> &#125;];</span><br><br><span class="javascript">  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">makeGreen</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">const</span> p = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;p&#x27;</span>);</span><br><span class="javascript">    p.style.color = <span class="hljs-string">&#x27;#BADA55&#x27;</span>;</span><br><span class="javascript">    p.style.fontSize = <span class="hljs-string">&#x27;50px&#x27;</span>;</span><br>  &#125;<br><br><span class="javascript">  <span class="hljs-comment">// Regular</span></span><br><span class="javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;hello&#x27;</span>);</span><br>  <br><span class="javascript">  <span class="hljs-comment">// Interpolated</span></span><br><span class="javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;hi my name is %s&#x27;</span>,<span class="hljs-string">&#x27;chester&#x27;</span>);</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;hi my name is %d&#x27;</span>, <span class="hljs-number">3.14</span> );</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;hi my name is %f&#x27;</span>, <span class="hljs-number">3.14</span> );</span><br>  <br><span class="javascript">  <span class="hljs-comment">//ES6</span></span><br><span class="javascript">  <span class="hljs-keyword">let</span> es6 = <span class="hljs-string">&#x27;es6&#x27;</span>;</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`my name is <span class="hljs-subst">$&#123;es6&#125;</span>`</span>);</span><br><br><span class="javascript">  <span class="hljs-comment">// Styled</span></span><br><span class="javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;%c住手&quot;</span>, <span class="hljs-string">&quot;font-size:60px; color:red&quot;</span>);</span><br><br><span class="javascript">  <span class="hljs-comment">// warning!</span></span><br><span class="javascript">  <span class="hljs-built_in">console</span>.warn(<span class="hljs-string">&quot;警告&quot;</span>);</span><br><br><span class="javascript">  <span class="hljs-comment">// Error :|</span></span><br><span class="javascript">  <span class="hljs-built_in">console</span>.error(<span class="hljs-string">&quot;錯誤&quot;</span>);</span><br><br><span class="javascript">  <span class="hljs-comment">// Info</span></span><br><span class="javascript">  <span class="hljs-built_in">console</span>.info(<span class="hljs-string">&quot;跟log沒有什麼差別，以前有一個圖標的樣子orz&quot;</span>);</span><br><br><span class="javascript">  <span class="hljs-comment">// Testing</span></span><br><span class="javascript">  <span class="hljs-built_in">console</span>.assert(<span class="hljs-literal">true</span>,<span class="hljs-string">&quot;訊息&quot;</span>);</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.assert(<span class="hljs-literal">false</span>,<span class="hljs-string">&quot;前面訊息沒有通過，就會噴這段訊息&quot;</span>);</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.assert(<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-string">&quot;前面訊息沒有通過，就會噴這段訊息&quot;</span>);</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.assert(<span class="hljs-number">0</span>,<span class="hljs-string">&quot;前面訊息沒有通過，就會噴這段訊息&quot;</span>);</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.assert(<span class="hljs-literal">NaN</span>,<span class="hljs-string">&quot;前面訊息沒有通過，就會噴這段訊息&quot;</span>);</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.assert(<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;前面訊息沒有通過，就會噴這段訊息&quot;</span>);</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.assert(<span class="hljs-literal">undefined</span>,<span class="hljs-string">&quot;前面訊息沒有通過，就會噴這段訊息&quot;</span>);</span><br><br><span class="javascript">  <span class="hljs-comment">// clearing</span></span><br><span class="javascript">  <span class="hljs-comment">// CTRL+L</span></span><br><br><span class="javascript">  <span class="hljs-comment">// Viewing DOM Elements</span></span><br><span class="javascript">  <span class="hljs-keyword">let</span> p = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;p&quot;</span>);</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.log(p);</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.log(dogs);</span><br><br><span class="javascript">  <span class="hljs-built_in">console</span>.dir(p);</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.dir(dogs);</span><br><br><span class="javascript">  <span class="hljs-comment">// Grouping together</span></span><br><span class="javascript">  <span class="hljs-built_in">console</span>.table(dogs);</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.table(dogs,[<span class="hljs-string">&#x27;name&#x27;</span>]);</span><br><br><span class="javascript">  <span class="hljs-comment">// counting</span></span><br><br><span class="javascript">  <span class="hljs-built_in">console</span>.count(<span class="hljs-string">&#x27;Wes&#x27;</span>);</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.count(<span class="hljs-string">&#x27;Wes&#x27;</span>);</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.count(<span class="hljs-string">&#x27;Steve&#x27;</span>);</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.count(<span class="hljs-string">&#x27;Steve&#x27;</span>);</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.count(<span class="hljs-string">&#x27;Wes&#x27;</span>);</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.count(<span class="hljs-string">&#x27;Steve&#x27;</span>);</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.count(<span class="hljs-string">&#x27;Wes&#x27;</span>);</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.count(<span class="hljs-string">&#x27;Steve&#x27;</span>);</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.count(<span class="hljs-string">&#x27;Steve&#x27;</span>);</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.count(<span class="hljs-string">&#x27;Steve&#x27;</span>);</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.count(<span class="hljs-string">&#x27;Steve&#x27;</span>);</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.count(<span class="hljs-string">&#x27;Steve&#x27;</span>);</span><br><br><span class="javascript">  <span class="hljs-comment">// timing</span></span><br><br><span class="javascript">  <span class="hljs-built_in">console</span>.time(<span class="hljs-string">&quot;test1&quot;</span>);</span><br><span class="javascript">  <span class="hljs-keyword">let</span> i</span><br><span class="javascript">  <span class="hljs-keyword">let</span> j </span><br>  for (i = 0 ; i &lt; 1000; i++) &#123;<br>    j = i;<br>  &#125;<br><span class="javascript">  <span class="hljs-built_in">console</span>.timeEnd(<span class="hljs-string">&quot;test1&quot;</span>);</span><br><br><span class="javascript">  <span class="hljs-built_in">console</span>.time(<span class="hljs-string">&quot;test2&quot;</span>); </span><br><span class="javascript">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span> ; i &lt; <span class="hljs-number">1000</span>; i++) &#123;</span><br>    j = i ;<br>  &#125;<br><span class="javascript">  <span class="hljs-built_in">console</span>.timeEnd(<span class="hljs-string">&quot;test2&quot;</span>);</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>本次範例程式碼原作者來源：<a href="https://tinyurl.com/yxhsxcnl">https://tinyurl.com/yxhsxcnl</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村08 - HTML5 Canvas</title>
    <link href="/2019/09/23/javascript08/"/>
    <url>/2019/09/23/javascript08/</url>
    
    <content type="html"><![CDATA[<h1 id="08-Fun-with-HTML5-Canvas"><a href="#08-Fun-with-HTML5-Canvas" class="headerlink" title="08 - Fun with HTML5 Canvas"></a>08 - Fun with HTML5 Canvas</h1><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h2 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h2><ul><li>功能<ul><li>可以畫圖的書布</li><li>粗細、顏色變化</li></ul></li><li>畫面<ul><li>邊畫邊換色、粗細</li><li>停下來，再繼續畫，粗細和顏色與上次停筆相同</li></ul></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>HTML5 Canvas<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;draw&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;800&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;800&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><span class="css">  <span class="hljs-selector-tag">html</span>, <span class="hljs-selector-tag">body</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br>  &#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，這次的範例只是Canvas的基本、滑鼠的操作，如果很喜歡 Canvas 的人，歡迎來我的 Codepen 看更多範例</p><p>繪圖基礎語法與動畫原理：<a href="https://tinyurl.com/yxftfxoz">https://tinyurl.com/yxftfxoz</a></p><p>畫布的座標系操作：<a href="https://tinyurl.com/y4s8fxjr">https://tinyurl.com/y4s8fxjr</a></p><p>從事件的角度，先來寫使用者的觸發事件吧！分別是 <code>mousedown</code>、<code>mousemove</code>、<code>mouseup</code>、<code>mouseleave</code> 四種事件，記得 <code>mousemove</code> 這個事件是會一直觸發，使用者在脫離 Canvas 這個 800x800 畫布的時候，也會觸發脫離框框事件，分別有兩種作法：一個是 <code>mouseout</code>、<code>mouseleave</code>，而兩者的差別在 DOM 的層級。</p><p>另外，因為要使用者按下去才能畫，因此在 <code>mousemove</code> 方法中，我們要假設如果狀態不能畫畫的 <code>if(!drawing) return</code>，就不能畫畫</p><p>mouveseout v.s mouse leave：<a href="https://tinyurl.com/y282qc3g">https://tinyurl.com/y282qc3g</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> canvas = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;#draw&quot;</span>);<br>  <span class="hljs-keyword">let</span> drawing = <span class="hljs-literal">false</span>;<br><br>  canvas.addEventListener(<span class="hljs-string">&quot;mousedown&quot;</span>,<span class="hljs-function">()=&gt;</span> &#123;<br>    drawing = <span class="hljs-literal">true</span>;<br>  &#125;)<br>  canvas.addEventListener(<span class="hljs-string">&quot;mousemove&quot;</span>,<span class="hljs-function">()=&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span>(!drawing) <span class="hljs-keyword">return</span>;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;move&quot;</span>); <span class="hljs-comment">// 假設console視為畫畫</span><br>  &#125;)<br>  canvas.addEventListener(<span class="hljs-string">&quot;mouseup&quot;</span>,<span class="hljs-function">()=&gt;</span> &#123;<br>    drawing = <span class="hljs-literal">false</span>;<br>  &#125;)<br>  canvas.addEventListener(<span class="hljs-string">&quot;mouseleave&quot;</span>,<span class="hljs-function">()=&gt;</span> &#123;<br>    drawing = <span class="hljs-literal">false</span>;<br>  &#125;)<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>透過 <code>CanvasRenderingContext2D</code> 來操作 Canvas 的 Context，記得不是操作它的 DOM！處理一下要畫畫線條的顏色 <code>ctx.fillStyle</code>，它是透過HSL 色環來計算顏色 <code>&quot;hsl(0,100%,50%)&quot;</code>，各欄位分別意思是（顏色、飽和度、明亮度）、調整筆畫粗細 <code>linewidth </code>、筆畫收尾的形狀 <code>lineCap</code>、轉折角 <code>lineJoin</code> </p><p>CanvasRenderingContext2D：<a href="https://tinyurl.com/y39wgnms">https://tinyurl.com/y39wgnms</a><br>CanvasRenderingContext2D.fillStyle：<a href="https://tinyurl.com/y5j8zu5g">https://tinyurl.com/y5j8zu5g</a><br>CanvasRenderingContext2D.lineWidth：<a href="https://tinyurl.com/q3pm3aw">https://tinyurl.com/q3pm3aw</a><br>CanvasRenderingContext2D.lineCap：<a href="https://tinyurl.com/y63rq9rf">https://tinyurl.com/y63rq9rf</a><br>CanvasRenderingContext2D.lineJoin：<a href="https://tinyurl.com/yxesyrbw">https://tinyurl.com/yxesyrbw</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">let</span> ctx = canvas.getContext(<span class="hljs-string">&#x27;2d&#x27;</span>);<br>  ctx.strokeStyle = <span class="hljs-string">`hsl(0,100%,50%)`</span>;<br>  ctx.lineWidth = <span class="hljs-number">100</span>;<br>  ctx.lineCap = <span class="hljs-string">&#x27;round&#x27;</span>;<br><span class="hljs-comment">// 下略</span><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>現在來製作畫畫吧！（點對點的概念，按下去會是一個點，然後會連到結束時候的點成為一條線），必須將按下時的點及結束的點存起來，透過 x、y 變數存下 <code>offsetX、offsetY</code> </p><p>MouseEvent.offsetX：<a href="https://tinyurl.com/phhseue">https://tinyurl.com/phhseue</a><br>MouseEvent.offsetY：<a href="https://tinyurl.com/yys9e773">https://tinyurl.com/yys9e773</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> canvas = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;#draw&quot;</span>);<br>  <span class="hljs-keyword">let</span> ctx = canvas.getContext(<span class="hljs-string">&#x27;2d&#x27;</span>);<br>  ctx.strokeStyle = <span class="hljs-string">`hsl(0,100%,50%)`</span>;<br>  ctx.lineWidth = <span class="hljs-number">50</span>;<br>  ctx.lineCap = <span class="hljs-string">&#x27;round&#x27;</span>;<br>  ctx.lineJoin = <span class="hljs-string">&#x27;round&#x27;</span>;<br>  <span class="hljs-keyword">let</span> x = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">let</span> y = <span class="hljs-number">0</span>;<br><br>  <span class="hljs-keyword">let</span> drawing = <span class="hljs-literal">false</span>;<br>  canvas.addEventListener(<span class="hljs-string">&quot;mousedown&quot;</span>,<span class="hljs-function">(<span class="hljs-params">e</span>)=&gt;</span> &#123;<br>    drawing = <span class="hljs-literal">true</span>;<br>    [x,y] = [e.offsetX, e.offsetY];<br>  &#125;)<br>  canvas.addEventListener(<span class="hljs-string">&quot;mousemove&quot;</span>,<span class="hljs-function">()=&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span>(!drawing) <span class="hljs-keyword">return</span>;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;move&quot;</span>);<br>  &#125;)<br>  canvas.addEventListener(<span class="hljs-string">&quot;mouseup&quot;</span>,<span class="hljs-function">()=&gt;</span> &#123;<br>    drawing = <span class="hljs-literal">false</span>;<br>  &#125;)<br>  canvas.addEventListener(<span class="hljs-string">&quot;mouseleave&quot;</span>,<span class="hljs-function">()=&gt;</span> &#123;<br>    drawing = <span class="hljs-literal">false</span>;<br>  &#125;)<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>畫製 Canvas 圖的規則滿前顯易懂的，可以參考下面的範例連結（切記在製作Canvas的時候程式結束一定要有分號，不然都會出錯喔！）</p><p>CanvasRenderingContext2D.beginPath()：<a href="https://tinyurl.com/ycrkznet">https://tinyurl.com/ycrkznet</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> canvas = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;#draw&quot;</span>);<br>  <span class="hljs-keyword">let</span> ctx = canvas.getContext(<span class="hljs-string">&#x27;2d&#x27;</span>);<br>  ctx.strokeStyle = <span class="hljs-string">`hsl(0,100%,50%)`</span>;<br>  ctx.lineWidth = <span class="hljs-number">50</span>;<br>  ctx.lineCap = <span class="hljs-string">&#x27;round&#x27;</span>;<br>  ctx.lineJoin = <span class="hljs-string">&#x27;round&#x27;</span>;<br><br>  <span class="hljs-keyword">let</span> drawing = <span class="hljs-literal">false</span><br>  <span class="hljs-keyword">let</span> x = <span class="hljs-number">0</span>, y = <span class="hljs-number">0</span>;<br><br>  canvas.addEventListener(<span class="hljs-string">&quot;mousedown&quot;</span>,<span class="hljs-function">(<span class="hljs-params">e</span>)=&gt;</span> &#123;<br>    drawing = <span class="hljs-literal">true</span>;<br>    [x, y] = [e.offsetX, e.offsetY];<br>  &#125;)<br>  canvas.addEventListener(<span class="hljs-string">&quot;mousemove&quot;</span>,<span class="hljs-function">(<span class="hljs-params">e</span>)=&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span>(!drawing) <span class="hljs-keyword">return</span>;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;move&quot;</span>);<br><br>    ctx.beginPath();<br>    ctx.moveTo(x, y);<br>    ctx.lineTo(e.offsetX, e.offsetY);<br>    ctx.stroke();<br>    [x, y] = [e.offsetX, e.offsetY];<br>  &#125;)<br>  canvas.addEventListener(<span class="hljs-string">&quot;mouseup&quot;</span>,<span class="hljs-function">()=&gt;</span> &#123;<br>    drawing = <span class="hljs-literal">false</span>;<br>  &#125;)<br>  canvas.addEventListener(<span class="hljs-string">&quot;mouseleave&quot;</span>,<span class="hljs-function">()=&gt;</span> &#123;<br>    drawing = <span class="hljs-literal">false</span>;<br>  &#125;)<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>讓顏色會隨著紅橙黃綠藍靛紫 &amp; 粗細會持續變化：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> canvas = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;#draw&quot;</span>);<br>  <span class="hljs-keyword">let</span> ctx = canvas.getContext(<span class="hljs-string">&#x27;2d&#x27;</span>);<br><br>  colorDeg = <span class="hljs-number">0</span>;<br>  lineWidth = <span class="hljs-number">50</span>;<br>  dir = <span class="hljs-number">1</span>;<br>  ctx.strokeStyle = <span class="hljs-string">`hsl(<span class="hljs-subst">$&#123;colorDeg&#125;</span>,100%,50%)`</span>;<br>  ctx.lineWidth = lineWidth;<br>  ctx.lineCap = <span class="hljs-string">&#x27;round&#x27;</span>;<br>  ctx.lineJoin = <span class="hljs-string">&#x27;round&#x27;</span>;<br><br>  <span class="hljs-keyword">let</span> drawing = <span class="hljs-literal">false</span><br>  <span class="hljs-keyword">let</span> x = <span class="hljs-number">0</span>, y = <span class="hljs-number">0</span>;<br><br>  canvas.addEventListener(<span class="hljs-string">&quot;mousedown&quot;</span>,<span class="hljs-function">(<span class="hljs-params">e</span>)=&gt;</span> &#123;<br>    drawing = <span class="hljs-literal">true</span>;<br>    [x, y] = [e.offsetX, e.offsetY];<br>  &#125;)<br>  canvas.addEventListener(<span class="hljs-string">&quot;mousemove&quot;</span>,<span class="hljs-function">(<span class="hljs-params">e</span>)=&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span>(!drawing) <span class="hljs-keyword">return</span>;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;move&quot;</span>);<br><br>    ctx.beginPath();<br>    <br>    <span class="hljs-comment">// 讓角度持續的在 0-360 變化</span><br>    colorDeg = colorDeg &lt; <span class="hljs-number">360</span> ? colorDeg + <span class="hljs-number">1</span> : <span class="hljs-number">0</span>;<br>    ctx.strokeStyle = <span class="hljs-string">`hsl(<span class="hljs-subst">$&#123;colorDeg&#125;</span>,100%,50%)`</span>;<br>    <br>    <span class="hljs-comment">// 從大到變小 再到變大</span><br>    <span class="hljs-keyword">if</span> (lineWidth &lt; <span class="hljs-number">1</span> || lineWidth &gt; <span class="hljs-number">50</span>) &#123;<br>      dir *= -<span class="hljs-number">1</span>;<br>    &#125;<br>    lineWidth -= dir ;<br>    <br>    ctx.lineWidth = lineWidth;<br>    ctx.moveTo(x, y);<br>    ctx.lineTo(e.offsetX, e.offsetY);<br>    ctx.stroke();<br>    [x, y] = [e.offsetX, e.offsetY];<br>  &#125;)<br>  canvas.addEventListener(<span class="hljs-string">&quot;mouseup&quot;</span>,<span class="hljs-function">()=&gt;</span> &#123;<br>    drawing = <span class="hljs-literal">false</span>;<br>  &#125;)<br>  canvas.addEventListener(<span class="hljs-string">&quot;mouseleave&quot;</span>,<span class="hljs-function">()=&gt;</span> &#123;<br>    drawing = <span class="hljs-literal">false</span>;<br>  &#125;)<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>就大功告成啦！</p><h2 id="JS-Final"><a href="#JS-Final" class="headerlink" title="JS - Final"></a>JS - Final</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-keyword">const</span> canvas = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;#draw&quot;</span>);<br>  <span class="hljs-keyword">let</span> ctx = canvas.getContext(<span class="hljs-string">&#x27;2d&#x27;</span>);<br><br>  colorDeg = <span class="hljs-number">0</span>;<br>  lineWidth = <span class="hljs-number">50</span>;<br>  dir = <span class="hljs-number">1</span>;<br>  ctx.strokeStyle = <span class="hljs-string">`hsl(<span class="hljs-subst">$&#123;colorDeg&#125;</span>,100%,50%)`</span>;<br>  ctx.lineWidth = lineWidth;<br>  ctx.lineCap = <span class="hljs-string">&#x27;round&#x27;</span>;<br>  ctx.lineJoin = <span class="hljs-string">&#x27;round&#x27;</span>;<br><br>  <span class="hljs-keyword">let</span> drawing = <span class="hljs-literal">false</span><br>  <span class="hljs-keyword">let</span> x = <span class="hljs-number">0</span>, y = <span class="hljs-number">0</span>;<br><br>  canvas.addEventListener(<span class="hljs-string">&quot;mousedown&quot;</span>,<span class="hljs-function">(<span class="hljs-params">e</span>)=&gt;</span> &#123;<br>    drawing = <span class="hljs-literal">true</span>;<br>    [x, y] = [e.offsetX, e.offsetY];<br>  &#125;)<br>  canvas.addEventListener(<span class="hljs-string">&quot;mousemove&quot;</span>,<span class="hljs-function">(<span class="hljs-params">e</span>)=&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span>(!drawing) <span class="hljs-keyword">return</span>;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;move&quot;</span>);<br><br>    ctx.beginPath();<br>    colorDeg = colorDeg &lt; <span class="hljs-number">360</span> ? colorDeg + <span class="hljs-number">1</span> : <span class="hljs-number">0</span>;<br>    ctx.strokeStyle = <span class="hljs-string">`hsl(<span class="hljs-subst">$&#123;colorDeg&#125;</span>,100%,50%)`</span>;<br>    <span class="hljs-keyword">if</span> (lineWidth &lt; <span class="hljs-number">1</span> || lineWidth &gt; <span class="hljs-number">50</span>) &#123;<br>      dir *= -<span class="hljs-number">1</span>;<br>    &#125;<br>    lineWidth -= dir ;<br>    ctx.lineWidth = lineWidth;<br>    ctx.moveTo(x, y);<br>    ctx.lineTo(e.offsetX, e.offsetY);<br>    ctx.stroke();<br>    [x, y] = [e.offsetX, e.offsetY];<br>  &#125;)<br>  canvas.addEventListener(<span class="hljs-string">&quot;mouseup&quot;</span>,<span class="hljs-function">()=&gt;</span> &#123;<br>    drawing = <span class="hljs-literal">false</span>;<br>  &#125;)<br>  canvas.addEventListener(<span class="hljs-string">&quot;mouseleave&quot;</span>,<span class="hljs-function">()=&gt;</span> &#123;<br>    drawing = <span class="hljs-literal">false</span>;<br>  &#125;)<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>本刊同步於個人網站：<a href="http://chestertang.site/">http://chestertang.site/</a></p><p>本次範例程式碼原作者來源：<a href="https://tinyurl.com/yxhsxcnl">https://tinyurl.com/yxhsxcnl</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村07 - Array Cardio Day 2</title>
    <link href="/2019/09/22/javascript07/"/>
    <url>/2019/09/22/javascript07/</url>
    
    <content type="html"><![CDATA[<h1 id="07-Array-Cardio-Day-2"><a href="#07-Array-Cardio-Day-2" class="headerlink" title="07 - Array Cardio Day 2"></a>07 - Array Cardio Day 2</h1><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h4 id=""><a href="#" class="headerlink" title=""></a></h4><h2 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h2><p>Javascript基本的Array方法運用：</p><ul><li><p>有兩個陣列  <code>people</code>、<code>comments</code> ，完成題目的要求</p></li><li><p>題目以 <code>Array.prototype.method() </code> 為分界</p></li><li><p>練習這些方法：<code>Array.prototype.some()</code>、<code>Array.prototype.every() </code>、<code>Array.prototype.find()</code>、<code>Array.prototype.findIndex()</code></p></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Array Cardio 💪💪<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">em</span>&gt;</span>Psst: have a look at the JavaScript Console<span class="hljs-tag">&lt;/<span class="hljs-name">em</span>&gt;</span> 💁<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">    <span class="hljs-comment">// ## Array Cardio Day 2</span></span><br><span class="javascript">    <span class="hljs-keyword">const</span> people = [</span><br><span class="javascript">      &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Wes&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1988</span> &#125;,</span><br><span class="javascript">      &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Kait&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1986</span> &#125;,</span><br><span class="javascript">      &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Irv&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1970</span> &#125;,</span><br><span class="javascript">      &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Lux&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">2015</span> &#125;</span><br>    ];<br><span class="javascript">    <span class="hljs-keyword">const</span> comments = [</span><br><span class="javascript">      &#123; <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Love this!&#x27;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">523423</span> &#125;,</span><br><span class="javascript">      &#123; <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Super good&#x27;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">823423</span> &#125;,</span><br><span class="javascript">      &#123; <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;You are the best&#x27;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">2039842</span> &#125;,</span><br><span class="javascript">      &#123; <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Ramen is my fav food ever&#x27;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">123523</span> &#125;,</span><br><span class="javascript">      &#123; <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Nice Nice Nice!&#x27;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">542328</span> &#125;</span><br>    ];<br><span class="javascript">    <span class="hljs-comment">// Some and Every Checks</span></span><br><span class="javascript">    <span class="hljs-comment">// Array.prototype.some() // is at least one person 19 or older?</span></span><br><span class="javascript">    <span class="hljs-comment">// Array.prototype.every() // is everyone 19 or older?</span></span><br><span class="javascript">    <span class="hljs-comment">// Array.prototype.find()</span></span><br><span class="javascript">    <span class="hljs-comment">// Find is like filter, but instead returns just the one you are looking for</span></span><br><span class="javascript">    <span class="hljs-comment">// find the comment with the ID of 823423</span></span><br><span class="javascript">    <span class="hljs-comment">// Array.prototype.findIndex()</span></span><br><span class="javascript">    <span class="hljs-comment">// Find the comment with this ID</span></span><br><span class="javascript">    <span class="hljs-comment">// delete the comment with the ID of 823423</span></span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><ol><li><p>從 people 的變數中透過 <code>some</code> 找出一筆資料大於等於19歲：</p><ul><li><p>some：方法會測試陣列中其中一個元素是否都通過了由給定之函式所實作的測試，回傳的是布林值。</p></li><li><p>getUTCFullYear：以世界時間為標準，回傳一個指定的日期的年份。</p><p>Array.prototype.some()：<a href="https://tinyurl.com/y3ox2o5b">https://tinyurl.com/y3ox2o5b</a></p><p>Date.prototype.getUTCFullYear()：<a href="https://tinyurl.com/y64burg7">https://tinyurl.com/y64burg7</a></p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> isAdult = people.some(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">p</span>)</span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getUTCFullYear() - p.year &gt;= <span class="hljs-number">19</span><br>&#125;)<br><br><span class="hljs-built_in">console</span>.log(isAdult)<br><span class="hljs-comment">//true</span><br></code></pre></td></tr></table></figure></li><li><p>從 people 的變數中透過 <code>every</code> 必須任何一筆資料大於等於19歲：</p><ul><li><p>every：方法會測試陣列中的所有元素是否都通過了由給定之函式所實作的測試，回傳的是布林值。</p><p>Array.prototype.every()：<a href="https://tinyurl.com/yyhl7e54">https://tinyurl.com/yyhl7e54</a></p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> allAdults = people.every(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">p</span>)</span>&#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getUTCFullYear() - p.year &gt;= <span class="hljs-number">19</span><br>&#125;)<br><br><span class="hljs-built_in">console</span>.log(allAdults)<br><span class="hljs-comment">//false</span><br></code></pre></td></tr></table></figure></li><li><p>從 comments 的變數中透過 <code>find</code> 找出 ID 是 823423：</p><ul><li><p>find：方法會回傳第一個滿足所提供之測試函式的元素值，並列出找到的項目，如果找不到會回傳 undefined。</p><p>Array.prototype.find()：<a href="https://tinyurl.com/y2swwtgq">https://tinyurl.com/y2swwtgq</a></p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> comment = comments.find(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">c</span>)</span>&#123;<br>  <span class="hljs-keyword">return</span> c.id === <span class="hljs-number">823423</span><br>&#125;)<br><br><span class="hljs-built_in">console</span>.log(comment)<br><span class="hljs-comment">//&#123;text: &quot;Super good&quot;, id: 823423&#125;</span><br></code></pre></td></tr></table></figure></li><li><p>從 comments 的變數中透過 <code>findIndex</code> 找出 ID 是 823423</p><ul><li><p>findIndex：方法會回傳第一個滿足所提供之測試函式的元素值，不會列出找到的項目，只會列出比數，如果找不到會回傳 -1 。</p><p>Array.prototype.findIndex()：<a href="https://tinyurl.com/y38fqko5">https://tinyurl.com/y38fqko5</a></p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> index = comments.findIndex(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">i</span>)</span>&#123;<br>  <span class="hljs-keyword">return</span> i.id === <span class="hljs-number">823423</span><br>&#125;)<br><br><span class="hljs-built_in">console</span>.log(index)<br><span class="hljs-comment">// 1</span><br></code></pre></td></tr></table></figure><p>就大功告成啦！</p></li></ol><h2 id="JS-Final"><a href="#JS-Final" class="headerlink" title="JS - Final"></a>JS - Final</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-comment">// ## Array Cardio Day 2</span><br><br>  <span class="hljs-keyword">const</span> people = [<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Wes&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1988</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Kait&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1986</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Irv&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1970</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Lux&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">2015</span> &#125;<br>  ];<br><br>  <span class="hljs-keyword">const</span> comments = [<br>    &#123; <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Love this!&#x27;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">523423</span> &#125;,<br>    &#123; <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Super good&#x27;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">823423</span> &#125;,<br>    &#123; <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;You are the best&#x27;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">2039842</span> &#125;,<br>    &#123; <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Ramen is my fav food ever&#x27;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">123523</span> &#125;,<br>    &#123; <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Nice Nice Nice!&#x27;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">542328</span> &#125;<br>  ];<br><br>  <span class="hljs-comment">// Some and Every Checks</span><br>  <span class="hljs-comment">// Array.prototype.some() // is at least one person 19 or older?</span><br><br>  <span class="hljs-keyword">const</span> isAdult = people.some(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">p</span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getUTCFullYear() - p.year &gt;= <span class="hljs-number">19</span><br>  &#125;)<br><br>  <span class="hljs-built_in">console</span>.log(isAdult)<br><br>  <span class="hljs-comment">// Array.prototype.every() // is everyone 19 or older?</span><br><br>  <span class="hljs-keyword">const</span> allAdults = people.every(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">p</span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getUTCFullYear() - p.year &gt;= <span class="hljs-number">19</span><br>  &#125;)<br><br>  <span class="hljs-built_in">console</span>.log(allAdults)<br><br>  <span class="hljs-comment">// Array.prototype.find()</span><br>  <span class="hljs-comment">// Find is like filter, but instead returns just the one you are looking for</span><br>  <span class="hljs-comment">// find the comment with the ID of 823423</span><br><br>  <span class="hljs-keyword">const</span> comment = comments.find(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">c</span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> c.id === <span class="hljs-number">823423</span><br>  &#125;)<br><br>  <span class="hljs-built_in">console</span>.log(comment)<br><br>  <span class="hljs-comment">// Array.prototype.findIndex()</span><br>  <span class="hljs-comment">// Find the comment with this ID</span><br>  <span class="hljs-comment">// delete the comment with the ID of 823423</span><br><br>  <span class="hljs-keyword">const</span> index = comments.findIndex(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">i</span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> i.id === <span class="hljs-number">823423</span><br>  &#125;)<br><br>  <span class="hljs-built_in">console</span>.log(index)<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>本刊同步於個人網站：<a href="http://chestertang.site/">http://chestertang.site/</a></p><p>本次範例程式碼原作者來源：<a href="https://reurl.cc/9zZGYv">https://reurl.cc/9zZGYv</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村06 - Type Ahead</title>
    <link href="/2019/09/21/javascript06/"/>
    <url>/2019/09/21/javascript06/</url>
    
    <content type="html"><![CDATA[<h1 id="06-Type-Ahead"><a href="#06-Type-Ahead" class="headerlink" title="06 - Type Ahead"></a>06 - Type Ahead</h1><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h2 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h2><ul><li>功能<ul><li>接收到 Json</li><li>列出符合關鍵字的項目</li></ul></li><li>畫面<ul><li>列出符合關鍵字的項目</li><li>將關鍵字的部份mark起來</li><li>顯示該項目的「歡迎程度」數字</li></ul></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Type Ahead 👀<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;style.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;search-form&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;search&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;City or State&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;suggestions&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>Filter for a city<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>or a state<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript"><span class="hljs-keyword">const</span> endpoint = <span class="hljs-string">&#x27;https://gist.githubusercontent.com/Miserlou/c5cd8364bf9b2420bb29/raw/2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/cities.json&#x27;</span>;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* style.css */</span><br><br><span class="hljs-selector-tag">html</span> &#123;<br>  <span class="hljs-attribute">box-sizing</span>: border-box;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#ffc600</span>;<br>  <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;helvetica neue&#x27;</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;<br>  <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">200</span>;<br>&#125;<br><br>*, *:before, *:after &#123;<br>  box-sizing: inherit;<br>&#125;<br><br><span class="hljs-selector-tag">input</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.search-form</span> &#123;<br>  <span class="hljs-attribute">max-width</span>: <span class="hljs-number">400px</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto;<br>&#125;<br><br><span class="hljs-selector-tag">input</span><span class="hljs-selector-class">.search</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">outline</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">10px</span> solid <span class="hljs-number">#F7F7F7</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">120%</span>;<br>  <span class="hljs-attribute">left</span>: -<span class="hljs-number">10%</span>;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">10px</span>;<br>  <span class="hljs-attribute">z-index</span>: <span class="hljs-number">2</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">5px</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">40px</span>;<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.12</span>), inset <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">2px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.19</span>);<br>&#125;<br><br><span class="hljs-selector-class">.suggestions</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-comment">/*perspective: 20px;*/</span><br>&#125;<br><br><span class="hljs-selector-class">.suggestions</span> <span class="hljs-selector-tag">li</span> &#123;<br>  <span class="hljs-attribute">background</span>: white;<br>  <span class="hljs-attribute">list-style</span>: none;<br>  <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#D8D8D8</span>;<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">10px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.14</span>);<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;<br>  <span class="hljs-attribute">transition</span>: background <span class="hljs-number">0.2s</span>;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">justify-content</span>: space-between;<br>  <span class="hljs-attribute">text-transform</span>: capitalize;<br>&#125;<br><br><span class="hljs-selector-class">.suggestions</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:nth-child</span>(even) &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">perspective</span>(<span class="hljs-number">100px</span>) <span class="hljs-built_in">rotateX</span>(<span class="hljs-number">3deg</span>) <span class="hljs-built_in">translateY</span>(<span class="hljs-number">2px</span>) <span class="hljs-built_in">scale</span>(<span class="hljs-number">1.001</span>);<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(to bottom,  <span class="hljs-number">#ffffff</span> <span class="hljs-number">0%</span>,<span class="hljs-number">#EFEFEF</span> <span class="hljs-number">100%</span>);<br>&#125;<br><br><span class="hljs-selector-class">.suggestions</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:nth-child</span>(odd) &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">perspective</span>(<span class="hljs-number">100px</span>) <span class="hljs-built_in">rotateX</span>(-<span class="hljs-number">3deg</span>) <span class="hljs-built_in">translateY</span>(<span class="hljs-number">3px</span>);<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(to top,  <span class="hljs-number">#ffffff</span> <span class="hljs-number">0%</span>,<span class="hljs-number">#EFEFEF</span> <span class="hljs-number">100%</span>);<br>&#125;<br><br><span class="hljs-selector-tag">span</span><span class="hljs-selector-class">.population</span> &#123;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">15px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.hl</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#ffc600</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，先來學一下如何抓  Json 檔吧！不知道大家習慣用這種舊式的寫法還是新的 ES6 語法 <code>cities</code> 宣告為 const 並設為空陣列，並再底下將 return 回來的結果 …拆開 <code>push</code> 回來呢？我是比較喜歡舊的下面這種寫法啦w</p><p>Using Fetch：<a href="https://ubin.io/cz5PZD">https://ubin.io/cz5PZD</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span> <br><span class="javascript">  <span class="hljs-keyword">const</span> endpoint = <span class="hljs-string">&#x27;https://gist.githubusercontent.com/Miserlou/c5cd8364bf9b2420bb29/raw/2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/cities.json&#x27;</span>;</span><br><br><span class="javascript">  <span class="hljs-keyword">let</span> cities = <span class="hljs-literal">null</span></span><br>  fetch(endpoint)<br><span class="javascript">    .then(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">blog</span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">return</span> blog.json()</span><br>    &#125;)<br><span class="javascript">    .then(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">myJson</span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">return</span> cities = myJson</span><br>    &#125;)<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>瀏覽器 console 看看有沒有抓到：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// cities</span><br><span class="hljs-comment">// (1000) [&#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, &#123;…&#125;, …]</span><br></code></pre></td></tr></table></figure><p>使用者在輸入 City or State 放開按鍵的時候，搜尋與Json的資料有哪幾筆符合？這邊我們必須透過正則RegExp 來寫，此外也來批純的方法xd</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript"><span class="hljs-comment">// 略</span></span><br><span class="javascript">  <span class="hljs-keyword">let</span> cities = <span class="hljs-literal">null</span></span><br>  fetch(endpoint)<br><span class="javascript">    .then(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">blog</span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">return</span> blog.json()</span><br>    &#125;)<br><span class="javascript">    .then(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">myJson</span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">return</span> cities = myJson</span><br>    &#125;)<br><br><span class="javascript">    <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.search&#x27;</span>).addEventListener(<span class="hljs-string">&quot;keyup&quot;</span>, keyupHandler)</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">keyupHandler</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><br>    &#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在 pure function <code>findMatches</code>  中，wordToMatch 與 cities 兩個值不會變動，透過正則將 <code>wordToMatch</code> 丟進來，後面 ‘gi’ 裡的 g 代表全部的意思、i 代表不分大小寫，再回資料結構中有 city || state 回傳值…</p><p>RegExp：<a href="https://ubin.io/pjvYgJ">https://ubin.io/pjvYgJ</a><br>Pure function：<a href="https://ubin.io/RpbKDT">https://ubin.io/RpbKDT</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript"><span class="hljs-comment">// 上略</span></span><br><span class="javascript">  <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.search&#x27;</span>).addEventListener(<span class="hljs-string">&quot;keyup&quot;</span>, keyupHandler)</span><br>  <br><span class="javascript">  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">keyupHandler</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">const</span> matchArray = findMatches(<span class="hljs-built_in">this</span>.value, cities)</span><br><span class="javascript">    <span class="hljs-built_in">console</span>.log(matchArray)</span><br>  &#125;<br><span class="javascript">  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">findMatches</span>(<span class="hljs-params">wordToMatch, cities</span>) </span>&#123;</span><br><span class="javascript">  <span class="hljs-keyword">return</span> cities.filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">place</span>)</span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">const</span> regex = <span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(wordToMatch, <span class="hljs-string">&#x27;gi&#x27;</span>)</span><br><span class="javascript">    <span class="hljs-keyword">return</span> place.city.match(regex) || place.state.match(regex)</span><br>  &#125;)<br>&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>接著來處理 DOM 的資料，並新增抓到的資料透過來新增HTML 到 Class <code>.suggestions</code> 裡，這邊單純只是做資料的處理，可能會看不懂的地方是，以前用單引號表示字串在 ES6 中換成蝌蚪按鍵的一點符號（這個該叫什麼好呢xd ），另一個為 <code>numberWithCommas</code> 方法中的 <code>toLocaleString()</code> ，在原作者中是用正則去做處理，不過感覺用這個會比較直接…</p><p>Number.prototype.toLocaleString()：<a href="https://reurl.cc/NaXNde">https://reurl.cc/NaXNde</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">  <span class="hljs-comment">// 上略</span></span><br><span class="javascript">  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">keyupHandler</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">const</span> matchArray = findMatches(<span class="hljs-built_in">this</span>.value, cities)</span><br><span class="javascript">    <span class="hljs-keyword">const</span> html = matchArray.map(<span class="hljs-function"><span class="hljs-params">place</span> =&gt;</span> &#123;</span><br><span class="javascript">    <span class="hljs-keyword">const</span> regex = <span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(<span class="hljs-built_in">this</span>.value, <span class="hljs-string">&#x27;gi&#x27;</span>)</span><br><span class="javascript">    <span class="hljs-keyword">const</span> cityName = place.city.replace(regex, <span class="hljs-string">`&lt;span class=&quot;hl&quot;&gt;<span class="hljs-subst">$&#123;<span class="hljs-built_in">this</span>.value&#125;</span>&lt;/span&gt;`</span>)</span><br><span class="javascript">    <span class="hljs-keyword">const</span> stateName = place.state.replace(regex, <span class="hljs-string">`&lt;span class=&quot;hl&quot;&gt;<span class="hljs-subst">$&#123;<span class="hljs-built_in">this</span>.value&#125;</span>&lt;/span&gt;`</span>)</span><br><span class="javascript">    <span class="hljs-keyword">return</span> <span class="hljs-string">`</span></span><br><span class="handlebars"><span class="xml">      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span></span></span><br><span class="handlebars"><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;name&quot;</span>&gt;</span>$&#123;cityName&#125;, $&#123;stateName&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span></span><br><span class="handlebars"><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;population&quot;</span>&gt;</span>$&#123;numberWithCommas(place.population)&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span></span><br><span class="handlebars"><span class="xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span></span><br>    `<br><span class="javascript">    &#125;).join(<span class="hljs-string">&#x27;&#x27;</span>)</span><br><span class="javascript">    <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.suggestions&#x27;</span>).innerHTML = html</span><br>  &#125;<br><br><span class="javascript">  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">numberWithCommas</span>(<span class="hljs-params">x</span>) </span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> x.toLocaleString()</span><br>  &#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>就大功告成啦！</p><h2 id="JS-Final"><a href="#JS-Final" class="headerlink" title="JS - Final"></a>JS - Final</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">  <span class="hljs-keyword">const</span> endpoint = <span class="hljs-string">&#x27;https://gist.githubusercontent.com/Miserlou/c5cd8364bf9b2420bb29/raw/2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/cities.json&#x27;</span>;</span><br><br><span class="javascript">  <span class="hljs-keyword">let</span> cities = <span class="hljs-literal">null</span></span><br>  fetch(endpoint)<br><span class="javascript">    .then(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">blog</span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">return</span> blog.json()</span><br>    &#125;)<br><span class="javascript">    .then(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">myJson</span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">return</span> cities = myJson</span><br>    &#125;)<br><br><span class="javascript">    <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.search&#x27;</span>).addEventListener(<span class="hljs-string">&quot;keyup&quot;</span>, keyupHandler)</span><br><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">keyupHandler</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">const</span> matchArray = findMatches(<span class="hljs-built_in">this</span>.value, cities)</span><br><span class="javascript">      <span class="hljs-keyword">const</span> html = matchArray.map(<span class="hljs-function"><span class="hljs-params">place</span> =&gt;</span> &#123;</span><br><span class="javascript">      <span class="hljs-keyword">const</span> regex = <span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(<span class="hljs-built_in">this</span>.value, <span class="hljs-string">&#x27;gi&#x27;</span>)</span><br><span class="javascript">      <span class="hljs-keyword">const</span> cityName = place.city.replace(regex, <span class="hljs-string">`&lt;span class=&quot;hl&quot;&gt;<span class="hljs-subst">$&#123;<span class="hljs-built_in">this</span>.value&#125;</span>&lt;/span&gt;`</span>)</span><br><span class="javascript">      <span class="hljs-keyword">const</span> stateName = place.state.replace(regex, <span class="hljs-string">`&lt;span class=&quot;hl&quot;&gt;<span class="hljs-subst">$&#123;<span class="hljs-built_in">this</span>.value&#125;</span>&lt;/span&gt;`</span>)</span><br><span class="javascript">      <span class="hljs-keyword">return</span> <span class="hljs-string">`</span></span><br><span class="handlebars"><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span></span></span><br><span class="handlebars"><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;name&quot;</span>&gt;</span>$&#123;cityName&#125;, $&#123;stateName&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span></span><br><span class="handlebars"><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;population&quot;</span>&gt;</span>$&#123;numberWithCommas(place.population)&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span></span><br><span class="handlebars"><span class="xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span></span><br>      `<br><span class="javascript">      &#125;).join(<span class="hljs-string">&#x27;&#x27;</span>)</span><br><span class="javascript">      <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.suggestions&#x27;</span>).innerHTML = html</span><br>    &#125;<br><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">numberWithCommas</span>(<span class="hljs-params">x</span>) </span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">return</span> x.toLocaleString()</span><br>    &#125;<br><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">findMatches</span>(<span class="hljs-params">wordToMatch, cities</span>) </span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">return</span> cities.filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">place</span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">const</span> regex = <span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(wordToMatch, <span class="hljs-string">&#x27;gi&#x27;</span>)</span><br><span class="javascript">      <span class="hljs-keyword">return</span> place.city.match(regex) || place.state.match(regex)</span><br>    &#125;)<br>  &#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p>本刊同步於個人網站：<a href="http://chestertang.site/">http://chestertang.site/</a><br>本次範例程式碼原作者來源：<a href="https://reurl.cc/yynKGl">https://reurl.cc/yynKGl</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村05 - Flex Panel Gallery</title>
    <link href="/2019/09/20/javascript05/"/>
    <url>/2019/09/20/javascript05/</url>
    
    <content type="html"><![CDATA[<h1 id="05-Flex-Panel-Gallery"><a href="#05-Flex-Panel-Gallery" class="headerlink" title="05 - Flex Panel Gallery"></a>05 - Flex Panel Gallery</h1><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h2 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h2><ul><li>功能（CSS居多）<ul><li>點擊指定的區塊有兩段式的動畫變化</li><li>再點擊一次，恢復原狀</li></ul></li><li>畫面<ul><li>改用 Flex 排版</li><li>標籤 p 中間的字變大</li><li>變大之後上下的字要進來</li></ul></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Flex Panels 💪<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&#x27;https://fonts.googleapis.com/css?family=Amatic+SC&#x27;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&#x27;stylesheet&#x27;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&#x27;text/css&#x27;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><span class="css">    <span class="hljs-selector-tag">html</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">box-sizing</span>: border-box;</span><br><span class="css">      <span class="hljs-attribute">background</span>: <span class="hljs-number">#ffc600</span>;</span><br><span class="css">      <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;helvetica neue&#x27;</span>;</span><br><span class="css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;</span><br><span class="css">      <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">200</span>;</span><br>    &#125;<br>    <br><span class="css">    <span class="hljs-selector-tag">body</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br>    &#125;<br>    <br>    *, *:before, *:after &#123;<br><span class="css">      <span class="hljs-attribute">box-sizing</span>: inherit;</span><br>    &#125;<br><br>    .panels &#123;<br><span class="css">      <span class="hljs-attribute">min-height</span>: <span class="hljs-number">100vh</span>;</span><br><span class="css">      <span class="hljs-attribute">overflow</span>: hidden;</span><br>    &#125;<br><br>    .panel &#123;<br><span class="css">      <span class="hljs-attribute">background</span>: <span class="hljs-number">#6B0F9C</span>;</span><br><span class="css">      <span class="hljs-attribute">box-shadow</span>: inset <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">0.1</span>);</span><br><span class="css">      <span class="hljs-attribute">color</span>: white;</span><br><span class="css">      <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">      <span class="hljs-attribute">align-items</span>: center;</span><br><span class="css">      <span class="hljs-comment">/* Safari transitionend event.propertyName === flex */</span></span><br><span class="css">      <span class="hljs-comment">/* Chrome + FF transitionend event.propertyName === flex-grow */</span></span><br><span class="css">      <span class="hljs-attribute">transition</span>:</span><br><span class="css">        <span class="hljs-attribute">font-size</span> <span class="hljs-number">0.7s</span> cubic-bezier(<span class="hljs-number">0.61</span>,-<span class="hljs-number">0.19</span>, <span class="hljs-number">0.7</span>,-<span class="hljs-number">0.11</span>),</span><br><span class="css">        <span class="hljs-attribute">flex</span> <span class="hljs-number">0.7s</span> cubic-bezier(<span class="hljs-number">0.61</span>,-<span class="hljs-number">0.19</span>, <span class="hljs-number">0.7</span>,-<span class="hljs-number">0.11</span>),</span><br><span class="css">        <span class="hljs-attribute">background</span> <span class="hljs-number">0.2s</span>;</span><br><span class="css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;</span><br><span class="css">      <span class="hljs-attribute">background-size</span>: cover;</span><br><span class="css">      <span class="hljs-attribute">background-position</span>: center;</span><br>    &#125;<br><br><span class="css">    <span class="hljs-selector-class">.panel1</span> &#123; <span class="hljs-attribute">background-image</span>:<span class="hljs-built_in">url</span>(<span class="hljs-string">https://source.unsplash.com/gYl-UtwNg_I/1500x1500</span>); &#125;</span><br><span class="css">    <span class="hljs-selector-class">.panel2</span> &#123; <span class="hljs-attribute">background-image</span>:<span class="hljs-built_in">url</span>(<span class="hljs-string">https://source.unsplash.com/rFKUFzjPYiQ/1500x1500</span>); &#125;</span><br><span class="css">    <span class="hljs-selector-class">.panel3</span> &#123; <span class="hljs-attribute">background-image</span>:<span class="hljs-built_in">url</span>(<span class="hljs-string">https://images.unsplash.com/photo-1465188162913-8fb5709d6d57?ixlib=rb-0.3.5&amp;q=80&amp;fm=jpg&amp;crop=faces&amp;cs=tinysrgb&amp;w=1500&amp;h=1500&amp;fit=crop&amp;s=967e8a713a4e395260793fc8c802901d</span>); &#125;</span><br><span class="css">    <span class="hljs-selector-class">.panel4</span> &#123; <span class="hljs-attribute">background-image</span>:<span class="hljs-built_in">url</span>(<span class="hljs-string">https://source.unsplash.com/ITjiVXcwVng/1500x1500</span>); &#125;</span><br><span class="css">    <span class="hljs-selector-class">.panel5</span> &#123; <span class="hljs-attribute">background-image</span>:<span class="hljs-built_in">url</span>(<span class="hljs-string">https://source.unsplash.com/3MNzGlQM7qs/1500x1500</span>); &#125;</span><br><br><span class="css">    <span class="hljs-comment">/* Flex Children */</span></span><br>    .panel &gt; * &#123;<br><span class="css">      <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="css">      <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">      <span class="hljs-attribute">transition</span>: transform <span class="hljs-number">0.5s</span>;</span><br>    &#125;<br><br><span class="css">    <span class="hljs-selector-class">.panel</span> <span class="hljs-selector-tag">p</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">text-transform</span>: uppercase;</span><br><span class="css">      <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;Amatic SC&#x27;</span>, cursive;</span><br><span class="css">      <span class="hljs-attribute">text-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">4px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.72</span>), <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">14px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.45</span>);</span><br><span class="css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">2em</span>;</span><br>    &#125;<br>    <br><span class="css">    <span class="hljs-selector-class">.panel</span> <span class="hljs-selector-tag">p</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>) &#123;</span><br><span class="css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">4em</span>;</span><br>    &#125;<br><br>    .panel.open &#123;<br><span class="css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">40px</span>;</span><br>    &#125;<br><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;panels&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;panel panel1&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Hey<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Let&#x27;s<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Dance<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;panel panel2&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Give<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Take<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Receive<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;panel panel3&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Experience<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>It<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Today<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;panel panel4&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Give<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>All<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>You can<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;panel panel5&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Life<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>In<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Motion<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="CSS-step-by-step"><a href="#CSS-step-by-step" class="headerlink" title="CSS - step by step"></a>CSS - step by step</h2><p>原本的 <code>.panels</code> 為直行，現在透過 <code>flex</code> 來改變排列方式，變為橫排並將內容 <code>.panel</code> 佔據整個版面一等份</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><span class="css">    <span class="hljs-comment">/* 上略 */</span></span><br>    .panels &#123;<br><span class="css">      <span class="hljs-attribute">min-height</span>: <span class="hljs-number">100vh</span>;</span><br><span class="css">      <span class="hljs-attribute">overflow</span>: hidden;</span><br><span class="css">      <span class="hljs-attribute">display</span>: flex; </span><br><span class="css"><span class="hljs-comment">/* flex 橫排 */</span>      </span><br>    &#125;<br><br>    .panel &#123;<br><span class="css">    <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>; </span><br><span class="css">      <span class="hljs-comment">/* 均等份 */</span></span><br><span class="css">      <span class="hljs-attribute">background</span>: <span class="hljs-number">#6B0F9C</span>;</span><br><span class="css">      <span class="hljs-attribute">box-shadow</span>: inset <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">0.1</span>);</span><br><span class="css">      <span class="hljs-attribute">color</span>: white;</span><br><span class="css">      <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">      <span class="hljs-attribute">align-items</span>: center;</span><br><span class="css">      <span class="hljs-attribute">transition</span>:</span><br><span class="css">        <span class="hljs-attribute">font-size</span> <span class="hljs-number">0.7s</span> cubic-bezier(<span class="hljs-number">0.61</span>,-<span class="hljs-number">0.19</span>, <span class="hljs-number">0.7</span>,-<span class="hljs-number">0.11</span>),</span><br><span class="css">        <span class="hljs-attribute">flex</span> <span class="hljs-number">0.7s</span> cubic-bezier(<span class="hljs-number">0.61</span>,-<span class="hljs-number">0.19</span>, <span class="hljs-number">0.7</span>,-<span class="hljs-number">0.11</span>),</span><br><span class="css">        <span class="hljs-attribute">background</span> <span class="hljs-number">0.2s</span>;</span><br><span class="css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;</span><br><span class="css">      <span class="hljs-attribute">background-size</span>: cover;</span><br><span class="css">      <span class="hljs-attribute">background-position</span>: center;</span><br>    &#125;<br><span class="css">    <span class="hljs-comment">/* 下略 */</span></span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>Flex</code> 主軸為橫向（文字會左到右），內層的 <code>.panel</code> 要來改變主軸方向並置中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><span class="css">    <span class="hljs-comment">/* 上略 */</span></span><br>    .panels &#123;<br><span class="css">      <span class="hljs-attribute">min-height</span>: <span class="hljs-number">100vh</span>;</span><br><span class="css">      <span class="hljs-attribute">overflow</span>: hidden;</span><br><span class="css">      <span class="hljs-attribute">display</span>: flex;  </span><br>    &#125;<br><br>    .panel &#123;<br><span class="css">      <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;</span><br><span class="css">      <span class="hljs-attribute">display</span>: flex;</span><br><span class="css">      <span class="hljs-attribute">flex-direction</span>: column;</span><br><span class="css">      <span class="hljs-attribute">justify-content</span>: center;</span><br><span class="css">      <span class="hljs-comment">/* 改變主軸方向並置中 */</span></span><br>      <br><span class="css">      <span class="hljs-attribute">background</span>: <span class="hljs-number">#6B0F9C</span>;</span><br><span class="css">      <span class="hljs-attribute">box-shadow</span>: inset <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">0.1</span>);</span><br><span class="css">      <span class="hljs-attribute">color</span>: white;</span><br><span class="css">      <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">      <span class="hljs-attribute">align-items</span>: center;</span><br><span class="css">      <span class="hljs-attribute">transition</span>:</span><br><span class="css">        <span class="hljs-attribute">font-size</span> <span class="hljs-number">0.7s</span> cubic-bezier(<span class="hljs-number">0.61</span>,-<span class="hljs-number">0.19</span>, <span class="hljs-number">0.7</span>,-<span class="hljs-number">0.11</span>),</span><br><span class="css">        <span class="hljs-attribute">flex</span> <span class="hljs-number">0.7s</span> cubic-bezier(<span class="hljs-number">0.61</span>,-<span class="hljs-number">0.19</span>, <span class="hljs-number">0.7</span>,-<span class="hljs-number">0.11</span>),</span><br><span class="css">        <span class="hljs-attribute">background</span> <span class="hljs-number">0.2s</span>;</span><br><span class="css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;</span><br><span class="css">      <span class="hljs-attribute">background-size</span>: cover;</span><br><span class="css">      <span class="hljs-attribute">background-position</span>: center;</span><br>    &#125;<br><span class="css">    <span class="hljs-comment">/* 下略 */</span></span><br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p>子層 <code>.panel &gt; *</code> 也要有垂直置中效果，並讓上下的標籤 <code>p</code> 文字偏移出去中間的標籤 <code>p</code> 文字後才能加入動畫</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><span class="css">    <span class="hljs-comment">/* 上略 */</span></span><br><br>    .panels &#123;<br><span class="css">      <span class="hljs-attribute">min-height</span>: <span class="hljs-number">100vh</span>;</span><br><span class="css">      <span class="hljs-attribute">overflow</span>: hidden;</span><br><span class="css">      <span class="hljs-attribute">display</span>: flex;  </span><br>    &#125;<br><br>    .panel &#123;<br><span class="css">      <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;</span><br><span class="css">      <span class="hljs-attribute">display</span>: flex;</span><br><span class="css">      <span class="hljs-attribute">flex-direction</span>: column;</span><br><span class="css">      <span class="hljs-attribute">justify-content</span>: center;</span><br><br><span class="css">      <span class="hljs-attribute">background</span>: <span class="hljs-number">#6B0F9C</span>;</span><br><span class="css">      <span class="hljs-attribute">box-shadow</span>: inset <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">0.1</span>);</span><br><span class="css">      <span class="hljs-attribute">color</span>: white;</span><br><span class="css">      <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">      <span class="hljs-attribute">align-items</span>: center;</span><br><span class="css">      <span class="hljs-attribute">transition</span>:</span><br><span class="css">        <span class="hljs-attribute">font-size</span> <span class="hljs-number">0.7s</span> cubic-bezier(<span class="hljs-number">0.61</span>,-<span class="hljs-number">0.19</span>, <span class="hljs-number">0.7</span>,-<span class="hljs-number">0.11</span>),</span><br><span class="css">        <span class="hljs-attribute">flex</span> <span class="hljs-number">0.7s</span> cubic-bezier(<span class="hljs-number">0.61</span>,-<span class="hljs-number">0.19</span>, <span class="hljs-number">0.7</span>,-<span class="hljs-number">0.11</span>),</span><br><span class="css">        <span class="hljs-attribute">background</span> <span class="hljs-number">0.2s</span>;</span><br><span class="css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;</span><br><span class="css">      <span class="hljs-attribute">background-size</span>: cover;</span><br><span class="css">      <span class="hljs-attribute">background-position</span>: center;</span><br>    &#125;<br><br><span class="css">    <span class="hljs-comment">/* 略 */</span></span><br><br><span class="css">    <span class="hljs-comment">/* Flex Children */</span></span><br>    .panel &gt; * &#123;<br><span class="css">      <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="css">      <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">      <span class="hljs-attribute">transition</span>: transform <span class="hljs-number">0.5s</span>;</span><br><br><span class="css"><span class="hljs-comment">/* 等份並垂直置中 */</span></span><br><span class="css">      <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;</span><br><span class="css">      <span class="hljs-attribute">display</span>: flex;</span><br><span class="css">      <span class="hljs-attribute">justify-content</span>: center;</span><br><span class="css">      <span class="hljs-attribute">align-items</span>: center;</span><br>    &#125;<br>  <br><span class="css">  <span class="hljs-comment">/* 上下的文字偏移中間的文字 */</span></span><br><span class="css">  <span class="hljs-selector-class">.panel</span> &gt; *<span class="hljs-selector-pseudo">:first</span>-child&#123;</span><br><span class="css">      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(-<span class="hljs-number">100%</span>);</span><br>    &#125;<br><span class="css">    <span class="hljs-selector-class">.panel</span> &gt; *<span class="hljs-selector-pseudo">:last-child</span>&#123;</span><br><span class="css">      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">100%</span>);</span><br>    &#125;<br>  <br><span class="css">  <span class="hljs-comment">/* JS時需要toggle的class 讓文字偏移回來 */</span></span><br><span class="css">    <span class="hljs-selector-class">.panel</span><span class="hljs-selector-class">.open-active</span> &gt; *<span class="hljs-selector-pseudo">:first</span>-child&#123;</span><br><span class="css">      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">0%</span>);</span><br>    &#125;<br><span class="css">    <span class="hljs-selector-class">.panel</span><span class="hljs-selector-class">.open-active</span> &gt; *<span class="hljs-selector-pseudo">:last-child</span>&#123;</span><br><span class="css">      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">0%</span>);</span><br>    &#125;<br><span class="css"><span class="hljs-comment">/* JS時需要toggle的class 文字放大及flex等份要變大 */</span></span><br>  .panel.open &#123;<br><span class="css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">40px</span>;</span><br><span class="css">      <span class="hljs-attribute">flex</span>: <span class="hljs-number">3</span>;</span><br>    &#125;<br><span class="css">    <span class="hljs-comment">/* 下略 */</span></span><br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，抓出整個外層的 NodeList 並設為變數 panels 吧！忘記有 All 跟沒有 All 的差別可以看 Day 1 JavaScript Drum Kit 的文章，或者在這個程式碼中直接 console.log 印出來看看～</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">    <span class="hljs-keyword">const</span> panels = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&quot;.panel&quot;</span>)</span><br><span class="javascript">    <span class="hljs-built_in">console</span>.log(panels)</span><br><br><span class="javascript"><span class="hljs-comment">// NodeList(5) [div.panel.panel1, div.panel.panel2, div.panel.panel3, </span></span><br><span class="javascript">    <span class="hljs-comment">// div.panel.panel4, div.panel.panel5]</span></span><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>記得 panels 不是一個陣列所以透過 <code>foreach</code> 讀出每個 List，方法中監聽假設使用者有 <code>click</code> 的話，就會呼叫方法 <code>clickHandler</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">    <span class="hljs-keyword">const</span> panels = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&quot;.panel&quot;</span>)</span><br><span class="javascript">    panels.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">panel</span>)</span>&#123;</span><br><span class="javascript">      panel.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>,clickHandler)</span><br>    &#125;)<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>clickHandler</code> 方法來對 <code>.panel</code> 增加 Class <code>.panel.open</code> (字體放大、Flex 等份變大)，因為要能放大後再點又能縮小，所以用 <code>toggle</code> 來新增、移除，與Jquery的概念相同，對應如下：</p><p>JS：classList.add / classList.remove / classList.toogle<br>Jquery：addClass / removeClass / googleClass</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>  <br><span class="javascript">    <span class="hljs-keyword">const</span> panels = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&quot;.panel&quot;</span>)</span><br><span class="javascript">    panels.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">panel</span>)</span>&#123;</span><br><span class="javascript">      panel.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>,clickHandler)</span><br>    &#125;)<br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clickHandler</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.classList.toggle(<span class="hljs-string">&#x27;open&#x27;</span>)</span><br>    &#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>現在要來做第二段動畫，在這邊我們希望在第一段動畫完成之後再做第二段動畫，所以我們來 <code>transitionend</code> 呼叫 <code>transitionendHandler</code> 方法看看 click 動畫結束後回傳什麼</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">    <span class="hljs-keyword">const</span> panels = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&quot;.panel&quot;</span>)</span><br><span class="javascript">    panels.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">panel</span>)</span>&#123;</span><br><span class="javascript">      panel.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>,clickHandler)</span><br><span class="javascript">      panel.addEventListener(<span class="hljs-string">&#x27;transitionend&#x27;</span>,transitionendHandler)</span><br>    &#125;)<br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clickHandler</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.classList.toggle(<span class="hljs-string">&#x27;open&#x27;</span>)</span><br>    &#125;<br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">transitionendHandler</span>(<span class="hljs-params">e</span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-built_in">console</span>.log(e)</span><br>    &#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// TransitionEvent &#123;isTrusted: true, propertyName: &quot;font-size&quot;, elapsedTime: 0.7, pseudoElement: &quot;&quot;, type: &quot;transitionend&quot;, …&#125;</span><br><span class="hljs-comment">// TransitionEvent &#123;isTrusted: true, propertyName: &quot;flex-grow&quot;, elapsedTime: 0.7, pseudoElement: &quot;&quot;, type: &quot;transitionend&quot;, …&#125;</span><br></code></pre></td></tr></table></figure><p>看到了觸發兩個事件有什麼關聯呢？其實會有個Bug，因為假設直接寫了 toogle 在 <code>transitionendHandler</code> 中的話，事件有兩個所以被觸發了兩次，導致上下的文字進來了又出去，但如果今天回傳的事件是奇數又會可以觸發。因此，我們要寫個判斷式來觸發 Class <code>open-active</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">    <span class="hljs-keyword">const</span> panels = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&quot;.panel&quot;</span>)</span><br><span class="javascript">    panels.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">panel</span>)</span>&#123;</span><br><span class="javascript">      panel.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>,clickHandler)</span><br><span class="javascript">      panel.addEventListener(<span class="hljs-string">&#x27;transitionend&#x27;</span>,transitionendHandler)</span><br>    &#125;)<br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clickHandler</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.classList.toggle(<span class="hljs-string">&#x27;open&#x27;</span>)</span><br>    &#125;<br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">transitionendHandler</span>(<span class="hljs-params">e</span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-built_in">console</span>.log(e)</span><br><span class="javascript">      <span class="hljs-keyword">if</span>(e.propertyName.indexOf(<span class="hljs-string">&#x27;flex&#x27;</span>) !== -<span class="hljs-number">1</span>)&#123;</span><br><span class="javascript">        <span class="hljs-built_in">this</span>.classList.toggle(<span class="hljs-string">&#x27;open-active&#x27;</span>)</span><br>      &#125;<br>    &#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li><p>indexOf()：方法會回傳給定元素於陣列中第一個被找到之索引，若不存在於陣列中則回傳 -1。</p><p>Array.prototype.indexOf()：<a href="https://ubin.io/zgWY3u">https://ubin.io/zgWY3u</a>    </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> beasts = [<span class="hljs-string">&#x27;ant&#x27;</span>, <span class="hljs-string">&#x27;bison&#x27;</span>, <span class="hljs-string">&#x27;camel&#x27;</span>, <span class="hljs-string">&#x27;duck&#x27;</span>, <span class="hljs-string">&#x27;bison&#x27;</span>];<br><br><span class="hljs-built_in">console</span>.log(beasts.indexOf(<span class="hljs-string">&#x27;bison&#x27;</span>));<br><span class="hljs-comment">// expected output: 1</span><br><br><span class="hljs-built_in">console</span>.log(beasts.indexOf(<span class="hljs-string">&#x27;bison&#x27;</span>, <span class="hljs-number">2</span>));<br><span class="hljs-comment">// expected output: 4</span><br><br><span class="hljs-built_in">console</span>.log(beasts.indexOf(<span class="hljs-string">&#x27;giraffe&#x27;</span>));<br><span class="hljs-comment">// expected output: -1</span><br></code></pre></td></tr></table></figure><p>就大功告成啦！</p></li></ul><h2 id="CSS-Final"><a href="#CSS-Final" class="headerlink" title="CSS - Final"></a>CSS - Final</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><span class="css">    <span class="hljs-selector-tag">html</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">box-sizing</span>: border-box;</span><br><span class="css">      <span class="hljs-attribute">background</span>: <span class="hljs-number">#ffc600</span>;</span><br><span class="css">      <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;helvetica neue&#x27;</span>;</span><br><span class="css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;</span><br><span class="css">      <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">200</span>;</span><br>    &#125;<br>    <br><span class="css">    <span class="hljs-selector-tag">body</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br>    &#125;<br>    <br>    *, *:before, *:after &#123;<br><span class="css">      <span class="hljs-attribute">box-sizing</span>: inherit;</span><br>    &#125;<br><br>    .panels &#123;<br><span class="css">      <span class="hljs-attribute">min-height</span>: <span class="hljs-number">100vh</span>;</span><br><span class="css">      <span class="hljs-attribute">overflow</span>: hidden;</span><br><span class="css">      <span class="hljs-attribute">display</span>: flex;  </span><br>    &#125;<br><br>    .panel &#123;<br><span class="css">      <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;</span><br><span class="css">      <span class="hljs-attribute">display</span>: flex;</span><br><span class="css">      <span class="hljs-attribute">flex-direction</span>: column;</span><br><span class="css">      <span class="hljs-attribute">justify-content</span>: center;</span><br><br><span class="css">      <span class="hljs-attribute">background</span>: <span class="hljs-number">#6B0F9C</span>;</span><br><span class="css">      <span class="hljs-attribute">box-shadow</span>: inset <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">0.1</span>);</span><br><span class="css">      <span class="hljs-attribute">color</span>: white;</span><br><span class="css">      <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">      <span class="hljs-attribute">align-items</span>: center;</span><br><span class="css">      <span class="hljs-attribute">transition</span>:</span><br><span class="css">        <span class="hljs-attribute">font-size</span> <span class="hljs-number">0.7s</span> cubic-bezier(<span class="hljs-number">0.61</span>,-<span class="hljs-number">0.19</span>, <span class="hljs-number">0.7</span>,-<span class="hljs-number">0.11</span>),</span><br><span class="css">        <span class="hljs-attribute">flex</span> <span class="hljs-number">0.7s</span> cubic-bezier(<span class="hljs-number">0.61</span>,-<span class="hljs-number">0.19</span>, <span class="hljs-number">0.7</span>,-<span class="hljs-number">0.11</span>),</span><br><span class="css">        <span class="hljs-attribute">background</span> <span class="hljs-number">0.2s</span>;</span><br><span class="css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;</span><br><span class="css">      <span class="hljs-attribute">background-size</span>: cover;</span><br><span class="css">      <span class="hljs-attribute">background-position</span>: center;</span><br>    &#125;<br><br><span class="css">    <span class="hljs-selector-class">.panel1</span> &#123; <span class="hljs-attribute">background-image</span>:<span class="hljs-built_in">url</span>(<span class="hljs-string">https://source.unsplash.com/gYl-UtwNg_I/1500x1500</span>); &#125;</span><br><span class="css">    <span class="hljs-selector-class">.panel2</span> &#123; <span class="hljs-attribute">background-image</span>:<span class="hljs-built_in">url</span>(<span class="hljs-string">https://source.unsplash.com/rFKUFzjPYiQ/1500x1500</span>); &#125;</span><br><span class="css">    <span class="hljs-selector-class">.panel3</span> &#123; <span class="hljs-attribute">background-image</span>:<span class="hljs-built_in">url</span>(<span class="hljs-string">https://images.unsplash.com/photo-1465188162913-8fb5709d6d57?ixlib=rb-0.3.5&amp;q=80&amp;fm=jpg&amp;crop=faces&amp;cs=tinysrgb&amp;w=1500&amp;h=1500&amp;fit=crop&amp;s=967e8a713a4e395260793fc8c802901d</span>); &#125;</span><br><span class="css">    <span class="hljs-selector-class">.panel4</span> &#123; <span class="hljs-attribute">background-image</span>:<span class="hljs-built_in">url</span>(<span class="hljs-string">https://source.unsplash.com/ITjiVXcwVng/1500x1500</span>); &#125;</span><br><span class="css">    <span class="hljs-selector-class">.panel5</span> &#123; <span class="hljs-attribute">background-image</span>:<span class="hljs-built_in">url</span>(<span class="hljs-string">https://source.unsplash.com/3MNzGlQM7qs/1500x1500</span>); &#125;</span><br><br><span class="css">    <span class="hljs-comment">/* Flex Children */</span></span><br>    .panel &gt; * &#123;<br><span class="css">      <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="css">      <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">      <span class="hljs-attribute">transition</span>: transform <span class="hljs-number">0.5s</span>;</span><br><span class="css">      <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;</span><br><span class="css">      <span class="hljs-attribute">display</span>: flex;</span><br><span class="css">      <span class="hljs-attribute">justify-content</span>: center;</span><br><span class="css">      <span class="hljs-attribute">align-items</span>: center;</span><br>    &#125;<br><br><span class="css">    <span class="hljs-selector-class">.panel</span> <span class="hljs-selector-tag">p</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">text-transform</span>: uppercase;</span><br><span class="css">      <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;Amatic SC&#x27;</span>, cursive;</span><br><span class="css">      <span class="hljs-attribute">text-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">4px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.72</span>), <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">14px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.45</span>);</span><br><span class="css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">2em</span>;</span><br>    &#125;<br>    <br><span class="css">    <span class="hljs-selector-class">.panel</span> &gt; *<span class="hljs-selector-pseudo">:first</span>-child&#123;</span><br><span class="css">      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(-<span class="hljs-number">100%</span>);</span><br>    &#125;<br><span class="css">    <span class="hljs-selector-class">.panel</span> &gt; *<span class="hljs-selector-pseudo">:last-child</span>&#123;</span><br><span class="css">      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">100%</span>);</span><br>    &#125;<br><span class="css">    <span class="hljs-selector-class">.panel</span><span class="hljs-selector-class">.open-active</span> &gt; *<span class="hljs-selector-pseudo">:first</span>-child&#123;</span><br><span class="css">      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">0%</span>);</span><br>    &#125;<br><span class="css">    <span class="hljs-selector-class">.panel</span><span class="hljs-selector-class">.open-active</span> &gt; *<span class="hljs-selector-pseudo">:last-child</span>&#123;</span><br><span class="css">      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">0%</span>);</span><br>    &#125;<br>    <br><span class="css">    <span class="hljs-selector-class">.panel</span> <span class="hljs-selector-tag">p</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>) &#123;</span><br><span class="css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">4em</span>;</span><br>    &#125;<br><br>    .panel.open &#123;<br><span class="css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">40px</span>;</span><br><span class="css">      <span class="hljs-attribute">flex</span>: <span class="hljs-number">3</span>;</span><br>    &#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="JS-Final"><a href="#JS-Final" class="headerlink" title="JS - Final"></a>JS - Final</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">    <span class="hljs-keyword">const</span> panels = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&quot;.panel&quot;</span>)</span><br><span class="javascript">    panels.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">panel</span>)</span>&#123;</span><br><span class="javascript">      panel.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>,clickHandler)</span><br><span class="javascript">      panel.addEventListener(<span class="hljs-string">&#x27;transitionend&#x27;</span>,transitionendHandler)</span><br>    &#125;)<br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clickHandler</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-built_in">this</span>.classList.toggle(<span class="hljs-string">&#x27;open&#x27;</span>)</span><br>    &#125;<br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">transitionendHandler</span>(<span class="hljs-params">e</span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-built_in">console</span>.log(e)</span><br><span class="javascript">      <span class="hljs-keyword">if</span>(e.propertyName.indexOf(<span class="hljs-string">&#x27;flex&#x27;</span>) !== -<span class="hljs-number">1</span>)&#123;</span><br><span class="javascript">        <span class="hljs-built_in">this</span>.classList.toggle(<span class="hljs-string">&#x27;open-active&#x27;</span>)</span><br>      &#125;<br>    &#125;<br> <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>本次範例程式碼原作者來源：<a href="https://reurl.cc/M7Z0xW">https://reurl.cc/M7Z0xW</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村04 - Array Cardio Day 1</title>
    <link href="/2019/09/19/javascript04/"/>
    <url>/2019/09/19/javascript04/</url>
    
    <content type="html"><![CDATA[<h1 id="04-Array-Cardio-Day-1"><a href="#04-Array-Cardio-Day-1" class="headerlink" title="04 - Array Cardio Day 1"></a>04 - Array Cardio Day 1</h1><p>俗話說的好，一天一蘋果，醫生遠離我</p><p>一天一 JS，What the f*ck JavaScript？</p><p>small steps every day - 記錄著新手村日記</p><h2 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h2><p>Javascript基本的Array方法運用：</p><ul><li><p>運用高階函式的三大支柱：map、filter、reduce 處理 <code>inventors</code>、 <code>people </code> 陣列</p></li><li><p>每一題會指定一個 Array Method，透過 console.log / console.table（不支援IE喔！）來解題</p></li><li><p>小試身手一題</p></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Array Cardio 💪<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">em</span>&gt;</span>Psst: have a look at the JavaScript Console<span class="hljs-tag">&lt;/<span class="hljs-name">em</span>&gt;</span> 💁<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">    <span class="hljs-keyword">const</span> inventors = [</span><br><span class="javascript">      &#123; <span class="hljs-attr">first</span>: <span class="hljs-string">&#x27;Albert&#x27;</span>, <span class="hljs-attr">last</span>: <span class="hljs-string">&#x27;Einstein&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1879</span>, <span class="hljs-attr">passed</span>: <span class="hljs-number">1955</span> &#125;,</span><br><span class="javascript">      &#123; <span class="hljs-attr">first</span>: <span class="hljs-string">&#x27;Isaac&#x27;</span>, <span class="hljs-attr">last</span>: <span class="hljs-string">&#x27;Newton&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1643</span>, <span class="hljs-attr">passed</span>: <span class="hljs-number">1727</span> &#125;,</span><br><span class="javascript">      &#123; <span class="hljs-attr">first</span>: <span class="hljs-string">&#x27;Galileo&#x27;</span>, <span class="hljs-attr">last</span>: <span class="hljs-string">&#x27;Galilei&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1564</span>, <span class="hljs-attr">passed</span>: <span class="hljs-number">1642</span> &#125;,</span><br><span class="javascript">      &#123; <span class="hljs-attr">first</span>: <span class="hljs-string">&#x27;Marie&#x27;</span>, <span class="hljs-attr">last</span>: <span class="hljs-string">&#x27;Curie&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1867</span>, <span class="hljs-attr">passed</span>: <span class="hljs-number">1934</span> &#125;,</span><br><span class="javascript">      &#123; <span class="hljs-attr">first</span>: <span class="hljs-string">&#x27;Johannes&#x27;</span>, <span class="hljs-attr">last</span>: <span class="hljs-string">&#x27;Kepler&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1571</span>, <span class="hljs-attr">passed</span>: <span class="hljs-number">1630</span> &#125;,</span><br><span class="javascript">      &#123; <span class="hljs-attr">first</span>: <span class="hljs-string">&#x27;Nicolaus&#x27;</span>, <span class="hljs-attr">last</span>: <span class="hljs-string">&#x27;Copernicus&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1473</span>, <span class="hljs-attr">passed</span>: <span class="hljs-number">1543</span> &#125;,</span><br><span class="javascript">      &#123; <span class="hljs-attr">first</span>: <span class="hljs-string">&#x27;Max&#x27;</span>, <span class="hljs-attr">last</span>: <span class="hljs-string">&#x27;Planck&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1858</span>, <span class="hljs-attr">passed</span>: <span class="hljs-number">1947</span> &#125;,</span><br><span class="javascript">      &#123; <span class="hljs-attr">first</span>: <span class="hljs-string">&#x27;Katherine&#x27;</span>, <span class="hljs-attr">last</span>: <span class="hljs-string">&#x27;Blodgett&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1898</span>, <span class="hljs-attr">passed</span>: <span class="hljs-number">1979</span> &#125;,</span><br><span class="javascript">      &#123; <span class="hljs-attr">first</span>: <span class="hljs-string">&#x27;Ada&#x27;</span>, <span class="hljs-attr">last</span>: <span class="hljs-string">&#x27;Lovelace&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1815</span>, <span class="hljs-attr">passed</span>: <span class="hljs-number">1852</span> &#125;,</span><br><span class="javascript">      &#123; <span class="hljs-attr">first</span>: <span class="hljs-string">&#x27;Sarah E.&#x27;</span>, <span class="hljs-attr">last</span>: <span class="hljs-string">&#x27;Goode&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1855</span>, <span class="hljs-attr">passed</span>: <span class="hljs-number">1905</span> &#125;,</span><br><span class="javascript">      &#123; <span class="hljs-attr">first</span>: <span class="hljs-string">&#x27;Lise&#x27;</span>, <span class="hljs-attr">last</span>: <span class="hljs-string">&#x27;Meitner&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1878</span>, <span class="hljs-attr">passed</span>: <span class="hljs-number">1968</span> &#125;,</span><br><span class="javascript">      &#123; <span class="hljs-attr">first</span>: <span class="hljs-string">&#x27;Hanna&#x27;</span>, <span class="hljs-attr">last</span>: <span class="hljs-string">&#x27;Hammarström&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1829</span>, <span class="hljs-attr">passed</span>: <span class="hljs-number">1909</span> &#125;</span><br>    ];<br><br><span class="javascript">    <span class="hljs-keyword">const</span> people = [<span class="hljs-string">&#x27;Beck, Glenn&#x27;</span>, <span class="hljs-string">&#x27;Becker, Carl&#x27;</span>, <span class="hljs-string">&#x27;Beckett, Samuel&#x27;</span>, <span class="hljs-string">&#x27;Beddoes, Mick&#x27;</span>, <span class="hljs-string">&#x27;Beecher, Henry&#x27;</span>, <span class="hljs-string">&#x27;Beethoven, Ludwig&#x27;</span>, <span class="hljs-string">&#x27;Begin, Menachem&#x27;</span>, <span class="hljs-string">&#x27;Belloc, Hilaire&#x27;</span>, <span class="hljs-string">&#x27;Bellow, Saul&#x27;</span>, <span class="hljs-string">&#x27;Benchley, Robert&#x27;</span>, <span class="hljs-string">&#x27;Benenson, Peter&#x27;</span>, <span class="hljs-string">&#x27;Ben-Gurion, David&#x27;</span>, <span class="hljs-string">&#x27;Benjamin, Walter&#x27;</span>, <span class="hljs-string">&#x27;Benn, Tony&#x27;</span>, <span class="hljs-string">&#x27;Bennington, Chester&#x27;</span>, <span class="hljs-string">&#x27;Benson, Leana&#x27;</span>, <span class="hljs-string">&#x27;Bent, Silas&#x27;</span>, <span class="hljs-string">&#x27;Bentsen, Lloyd&#x27;</span>, <span class="hljs-string">&#x27;Berger, Ric&#x27;</span>, <span class="hljs-string">&#x27;Bergman, Ingmar&#x27;</span>, <span class="hljs-string">&#x27;Berio, Luciano&#x27;</span>, <span class="hljs-string">&#x27;Berle, Milton&#x27;</span>, <span class="hljs-string">&#x27;Berlin, Irving&#x27;</span>, <span class="hljs-string">&#x27;Berne, Eric&#x27;</span>, <span class="hljs-string">&#x27;Bernhard, Sandra&#x27;</span>, <span class="hljs-string">&#x27;Berra, Yogi&#x27;</span>, <span class="hljs-string">&#x27;Berry, Halle&#x27;</span>, <span class="hljs-string">&#x27;Berry, Wendell&#x27;</span>, <span class="hljs-string">&#x27;Bethea, Erin&#x27;</span>, <span class="hljs-string">&#x27;Bevan, Aneurin&#x27;</span>, <span class="hljs-string">&#x27;Bevel, Ken&#x27;</span>, <span class="hljs-string">&#x27;Biden, Joseph&#x27;</span>, <span class="hljs-string">&#x27;Bierce, Ambrose&#x27;</span>, <span class="hljs-string">&#x27;Biko, Steve&#x27;</span>, <span class="hljs-string">&#x27;Billings, Josh&#x27;</span>, <span class="hljs-string">&#x27;Biondo, Frank&#x27;</span>, <span class="hljs-string">&#x27;Birrell, Augustine&#x27;</span>, <span class="hljs-string">&#x27;Black, Elk&#x27;</span>, <span class="hljs-string">&#x27;Blair, Robert&#x27;</span>, <span class="hljs-string">&#x27;Blair, Tony&#x27;</span>, <span class="hljs-string">&#x27;Blake, William&#x27;</span>];</span><br><br><span class="javascript">    <span class="hljs-comment">// Array.prototype.filter()</span></span><br><span class="javascript">    <span class="hljs-comment">// 1. Filter the list of inventors for those who were born in the 1500&#x27;s</span></span><br><br><span class="javascript">    <span class="hljs-comment">// Array.prototype.map()</span></span><br><span class="javascript">    <span class="hljs-comment">// 2. Give us an array of the inventors&#x27; first and last names</span></span><br><br><span class="javascript">    <span class="hljs-comment">// Array.prototype.sort()</span></span><br><span class="javascript">    <span class="hljs-comment">// 3. Sort the inventors by birthdate, oldest to youngest</span></span><br><br><span class="javascript">    <span class="hljs-comment">// Array.prototype.reduce()</span></span><br><span class="javascript">    <span class="hljs-comment">// 4. How many years did all the inventors live?</span></span><br><br><span class="javascript">    <span class="hljs-comment">// 5. Sort the inventors by years lived</span></span><br><br><span class="javascript">    <span class="hljs-comment">// 6. create a list of Boulevards in Paris that contain &#x27;de&#x27; anywhere in the name</span></span><br><span class="javascript">    <span class="hljs-comment">// https://en.wikipedia.org/wiki/Category:Boulevards_in_Paris</span></span><br><br><br><span class="javascript">    <span class="hljs-comment">// 7. sort Exercise</span></span><br><span class="javascript">    <span class="hljs-comment">// Sort the people alphabetically by last name</span></span><br><br><span class="javascript">    <span class="hljs-comment">// 8. Reduce Exercise</span></span><br><span class="javascript">    <span class="hljs-comment">// Sum up the instances of each of these</span></span><br><span class="javascript">    <span class="hljs-keyword">const</span> data = [<span class="hljs-string">&#x27;car&#x27;</span>, <span class="hljs-string">&#x27;car&#x27;</span>, <span class="hljs-string">&#x27;truck&#x27;</span>, <span class="hljs-string">&#x27;truck&#x27;</span>, <span class="hljs-string">&#x27;bike&#x27;</span>, <span class="hljs-string">&#x27;walk&#x27;</span>, <span class="hljs-string">&#x27;car&#x27;</span>, <span class="hljs-string">&#x27;van&#x27;</span>, <span class="hljs-string">&#x27;bike&#x27;</span>, <span class="hljs-string">&#x27;walk&#x27;</span>, <span class="hljs-string">&#x27;car&#x27;</span>, <span class="hljs-string">&#x27;van&#x27;</span>, <span class="hljs-string">&#x27;car&#x27;</span>, <span class="hljs-string">&#x27;truck&#x27;</span> ];</span><br><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h2><ul><li><p>console.table(data [, columns])</p><p>data：必須是 Array || Hash 、 columns：一個包含列的名稱和 Array</p><p>試著在 console 中玩玩看這個範例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.table([<span class="hljs-string">&quot;apples&quot;</span>, <span class="hljs-string">&quot;oranges&quot;</span>, <span class="hljs-string">&quot;bananas&quot;</span>]);<br></code></pre></td></tr></table></figure><p>陣列裡面包含物件的範例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Person</span>(<span class="hljs-params">firstName, lastName</span>) </span>&#123;<br>  <span class="hljs-built_in">this</span>.firstName = firstName;<br>  <span class="hljs-built_in">this</span>.lastName = lastName;<br>&#125;<br><br><span class="hljs-keyword">var</span> john = <span class="hljs-keyword">new</span> Person(<span class="hljs-string">&quot;John&quot;</span>, <span class="hljs-string">&quot;Smith&quot;</span>);<br><span class="hljs-keyword">var</span> jane = <span class="hljs-keyword">new</span> Person(<span class="hljs-string">&quot;Jane&quot;</span>, <span class="hljs-string">&quot;Doe&quot;</span>);<br><span class="hljs-keyword">var</span> emily = <span class="hljs-keyword">new</span> Person(<span class="hljs-string">&quot;Emily&quot;</span>, <span class="hljs-string">&quot;Jones&quot;</span>);<br><br><span class="hljs-built_in">console</span>.table([john, jane, emily]);<br></code></pre></td></tr></table></figure></li></ul><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><ol><li><p>從 inventors 的變數中透過 <code>filter</code> 找出出生在15世紀的人：</p><ul><li>filter：篩選抽出符合條件的保留下來，成為新的一個陣列，不會影響到原始資料（回傳是True或False）<br>Array.prototype.filter()：<a href="https://ubin.io/NV9EDk">https://ubin.io/NV9EDk</a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> fifteen = inventors.filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">inventor</span>)</span>&#123;<br>  <span class="hljs-keyword">return</span> inventor.year &gt;= <span class="hljs-number">1500</span> &amp;&amp; inventor.year &lt; <span class="hljs-number">1600</span><br>&#125;)<br><span class="hljs-built_in">console</span>.table(fifteen)<br></code></pre></td></tr></table></figure></li></ul></li><li><p>從 inventors 的變數中透過 <code>map</code> 合併 inventors’ first and last names：</p><ul><li>map：一樣產生一個新陣列，新陣列會紀錄回傳新的內容<br>Array.prototype.map()：<a href="https://ubin.io/cdqWhm">https://ubin.io/cdqWhm</a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> fullnames = inventors.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">inventor</span>)</span>&#123;<br>  <span class="hljs-keyword">return</span> inventor.first + <span class="hljs-string">&#x27; &#x27;</span> + inventor.last<br>&#125;)<br><span class="hljs-built_in">console</span>.table(fullnames)<br></code></pre></td></tr></table></figure></li></ul></li><li><p>從 inventors 的變數中透過 <code>sort</code> 排序 <code>year</code> 欄位由小至大：</p><ul><li>sort：對一個陣列的所有元素進行排序，並回傳此陣列<br>Array.prototype.sort()：<a href="https://ubin.io/62RcBV">https://ubin.io/62RcBV</a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> ordered = inventors.sort(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>)</span>&#123;<br>  <span class="hljs-keyword">return</span> a.year &gt; b.year ? <span class="hljs-number">1</span> : -<span class="hljs-number">1</span><br>  <span class="hljs-comment">// compareFunction(a, b) 的回傳值若小於 0，即 a 排在 b 前面，反之</span><br>&#125;)<br><span class="hljs-built_in">console</span>.table(ordered)<br></code></pre></td></tr></table></figure></li></ul></li><li><p>從 inventors 的變數中透過 <code>reduce</code> 算出每個人各活了多久：</p><ul><li>reduce：累加器 total 及陣列中每項元素（由左至右）傳入回呼函式並將陣列化為單一值<br>Array.prototype.reduce()：<a href="https://ubin.io/Rgsbh1">https://ubin.io/Rgsbh1</a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript">   <span class="hljs-keyword">let</span> totalYears = inventors.reduce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">total,inventor</span>)</span>&#123;<br>     <span class="hljs-keyword">return</span> total + (inventor.passed - inventor.year)<br>   &#125;, <span class="hljs-number">0</span>) <span class="hljs-comment">// 初始值</span><br>   <span class="hljs-built_in">console</span>.log(totalYears)<br>   <span class="hljs-string">``</span><span class="hljs-string">`   </span><br><span class="hljs-string"></span><br><span class="hljs-string">5. 從 inventors 的變數中透過 `</span>sort<span class="hljs-string">` 排序活得長至短：</span><br><span class="hljs-string">   - 結合上方的 `</span>sort<span class="hljs-string">` 與 `</span>reduce<span class="hljs-string">` 中計算活多久的算式</span><br><span class="hljs-string">    `</span><span class="hljs-string">``</span>javascript<br>   <span class="hljs-keyword">let</span> oldest = inventors.sort(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) </span>&#123;<br>     <span class="hljs-keyword">return</span> (a.passed - a.year) &gt; (b.passed - b.year) ? -<span class="hljs-number">1</span> : <span class="hljs-number">1</span><br>   &#125;)<br>   <span class="hljs-built_in">console</span>.table(oldest)<br></code></pre></td></tr></table></figure></li></ul></li><li><p>去連結網站尋找 名字裡面有包含 ‘de’ 的姓名：</p><ul><li>至連結打開 console 執行</li><li>透過 <code>querySelectorAll</code> 抓到的值不是陣列所以沒有 <code>map</code> ，必須依靠 <code>Array.from</code> 來轉成陣列<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> category = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.mw-category&#x27;</span>)<br>    <span class="hljs-keyword">let</span> links = <span class="hljs-built_in">Array</span>.from(category.querySelectorAll(<span class="hljs-string">&#x27;a&#x27;</span>))<br>    <span class="hljs-keyword">let</span> de = links<br>                .map(<span class="hljs-function"><span class="hljs-params">link</span> =&gt;</span> link.textContent)<br>                .filter(<span class="hljs-function"><span class="hljs-params">streetName</span> =&gt;</span> streetName.includes(<span class="hljs-string">&#x27;de&#x27;</span>))<br></code></pre></td></tr></table></figure></li></ul></li><li><p>從 people 的變數中透過 <code>split</code> 切開姓名並用 <code>sort</code> 排序活得長至短：</p><ul><li>Split：用於把一個一串分割成一個個字串組<br>String.prototype.split()：<a href="https://ubin.io/wgKJ42">https://ubin.io/wgKJ42</a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> alphabetically = people.sort(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a,b</span>)</span>&#123;<br>  <span class="hljs-keyword">let</span> [alast, afirst] = a.split(<span class="hljs-string">&#x27;, &#x27;</span>)<br>  <span class="hljs-keyword">let</span> [blast, bfirst] = b.split(<span class="hljs-string">&#x27;, &#x27;</span>)<br>  <span class="hljs-keyword">return</span> alast &gt; blast ? <span class="hljs-number">1</span> : -<span class="hljs-number">1</span><br>&#125;)<br><span class="hljs-built_in">console</span>.table(alphabetically)<br></code></pre></td></tr></table></figure></li></ul></li><li><p>紀錄每個 data 中的物件共出現幾次：</p><ul><li>如果沒有這個物件，必須設為一、有的話每次讀到要加一<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> transportation = data.reduce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">obj,content</span>)</span>&#123;<br>  <span class="hljs-keyword">if</span>(!obj[content]) obj[content] = <span class="hljs-number">1</span><br>  <span class="hljs-keyword">else</span> obj[content] += <span class="hljs-number">1</span><br>  <span class="hljs-keyword">return</span> obj<br>&#125;,&#123;&#125;)<br><span class="hljs-built_in">console</span>.table(transportation)<br></code></pre></td></tr></table></figure></li></ul><p>同類型題目小試身手：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">Array</span>.prototype.inspect = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>)<br>  <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span><br>&#125;<br><br><span class="hljs-keyword">let</span> students = [<br>  &#123;<span class="hljs-attr">name</span>: <span class="hljs-string">&quot;John Doe&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">24</span>&#125;,<br>  &#123;<span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Mary Lee&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">17</span>&#125;,<br>  &#123;<span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Bill Doe&quot;</span>,  <span class="hljs-attr">age</span>: <span class="hljs-number">2</span>&#125;,<br>  &#123;<span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Ash Lee&quot;</span>,  <span class="hljs-attr">age</span>: <span class="hljs-number">38</span>&#125;,<br>  &#123;<span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Ryu Doe&quot;</span>,  <span class="hljs-attr">age</span>: <span class="hljs-number">18</span>&#125;,<br>]<br><br><span class="hljs-keyword">let</span> result = <br>  students.filter(<span class="hljs-function">(<span class="hljs-params">&#123;age&#125;</span>) =&gt;</span> age &gt;= <span class="hljs-number">18</span>)<br>          .map(<span class="hljs-function">(<span class="hljs-params">&#123;name&#125;</span>) =&gt;</span> name.split(<span class="hljs-string">&#x27; &#x27;</span>)[<span class="hljs-number">1</span>])<br>          .inspect()<br>          .reduce(<span class="hljs-function">(<span class="hljs-params">accu, name</span>) =&gt;</span> &#123;<br>            <span class="hljs-keyword">if</span> (accu[name]) &#123;<br>              accu[name] = accu[name] + <span class="hljs-number">1</span><br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>              accu[name] = <span class="hljs-number">1</span><br>            &#125;<br>            <span class="hljs-keyword">return</span> accu<br>          &#125;, &#123;&#125;)<br><br><span class="hljs-built_in">console</span>.log(result)<br></code></pre></td></tr></table></figure><p>就大功告成啦！</p></li></ol><h2 id="JS-Final"><a href="#JS-Final" class="headerlink" title="JS - Final"></a>JS - Final</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>  <span class="hljs-comment">// Get your shorts on - this is an array workout!</span><br>  <span class="hljs-comment">// ## Array Cardio Day 1</span><br><br>  <span class="hljs-comment">// Some data we can work with</span><br><br>  <span class="hljs-keyword">const</span> inventors = [<br>    &#123; <span class="hljs-attr">first</span>: <span class="hljs-string">&#x27;Albert&#x27;</span>, <span class="hljs-attr">last</span>: <span class="hljs-string">&#x27;Einstein&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1879</span>, <span class="hljs-attr">passed</span>: <span class="hljs-number">1955</span> &#125;,<br>    &#123; <span class="hljs-attr">first</span>: <span class="hljs-string">&#x27;Isaac&#x27;</span>, <span class="hljs-attr">last</span>: <span class="hljs-string">&#x27;Newton&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1643</span>, <span class="hljs-attr">passed</span>: <span class="hljs-number">1727</span> &#125;,<br>    &#123; <span class="hljs-attr">first</span>: <span class="hljs-string">&#x27;Galileo&#x27;</span>, <span class="hljs-attr">last</span>: <span class="hljs-string">&#x27;Galilei&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1564</span>, <span class="hljs-attr">passed</span>: <span class="hljs-number">1642</span> &#125;,<br>    &#123; <span class="hljs-attr">first</span>: <span class="hljs-string">&#x27;Marie&#x27;</span>, <span class="hljs-attr">last</span>: <span class="hljs-string">&#x27;Curie&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1867</span>, <span class="hljs-attr">passed</span>: <span class="hljs-number">1934</span> &#125;,<br>    &#123; <span class="hljs-attr">first</span>: <span class="hljs-string">&#x27;Johannes&#x27;</span>, <span class="hljs-attr">last</span>: <span class="hljs-string">&#x27;Kepler&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1571</span>, <span class="hljs-attr">passed</span>: <span class="hljs-number">1630</span> &#125;,<br>    &#123; <span class="hljs-attr">first</span>: <span class="hljs-string">&#x27;Nicolaus&#x27;</span>, <span class="hljs-attr">last</span>: <span class="hljs-string">&#x27;Copernicus&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1473</span>, <span class="hljs-attr">passed</span>: <span class="hljs-number">1543</span> &#125;,<br>    &#123; <span class="hljs-attr">first</span>: <span class="hljs-string">&#x27;Max&#x27;</span>, <span class="hljs-attr">last</span>: <span class="hljs-string">&#x27;Planck&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1858</span>, <span class="hljs-attr">passed</span>: <span class="hljs-number">1947</span> &#125;,<br>    &#123; <span class="hljs-attr">first</span>: <span class="hljs-string">&#x27;Katherine&#x27;</span>, <span class="hljs-attr">last</span>: <span class="hljs-string">&#x27;Blodgett&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1898</span>, <span class="hljs-attr">passed</span>: <span class="hljs-number">1979</span> &#125;,<br>    &#123; <span class="hljs-attr">first</span>: <span class="hljs-string">&#x27;Ada&#x27;</span>, <span class="hljs-attr">last</span>: <span class="hljs-string">&#x27;Lovelace&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1815</span>, <span class="hljs-attr">passed</span>: <span class="hljs-number">1852</span> &#125;,<br>    &#123; <span class="hljs-attr">first</span>: <span class="hljs-string">&#x27;Sarah E.&#x27;</span>, <span class="hljs-attr">last</span>: <span class="hljs-string">&#x27;Goode&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1855</span>, <span class="hljs-attr">passed</span>: <span class="hljs-number">1905</span> &#125;,<br>    &#123; <span class="hljs-attr">first</span>: <span class="hljs-string">&#x27;Lise&#x27;</span>, <span class="hljs-attr">last</span>: <span class="hljs-string">&#x27;Meitner&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1878</span>, <span class="hljs-attr">passed</span>: <span class="hljs-number">1968</span> &#125;,<br>    &#123; <span class="hljs-attr">first</span>: <span class="hljs-string">&#x27;Hanna&#x27;</span>, <span class="hljs-attr">last</span>: <span class="hljs-string">&#x27;Hammarström&#x27;</span>, <span class="hljs-attr">year</span>: <span class="hljs-number">1829</span>, <span class="hljs-attr">passed</span>: <span class="hljs-number">1909</span> &#125;<br>  ];<br><br>  <span class="hljs-keyword">const</span> people = [<span class="hljs-string">&#x27;Beck, Glenn&#x27;</span>, <span class="hljs-string">&#x27;Becker, Carl&#x27;</span>, <span class="hljs-string">&#x27;Beckett, Samuel&#x27;</span>, <span class="hljs-string">&#x27;Beddoes, Mick&#x27;</span>, <span class="hljs-string">&#x27;Beecher, Henry&#x27;</span>, <span class="hljs-string">&#x27;Beethoven, Ludwig&#x27;</span>, <span class="hljs-string">&#x27;Begin, Menachem&#x27;</span>, <span class="hljs-string">&#x27;Belloc, Hilaire&#x27;</span>, <span class="hljs-string">&#x27;Bellow, Saul&#x27;</span>, <span class="hljs-string">&#x27;Benchley, Robert&#x27;</span>, <span class="hljs-string">&#x27;Benenson, Peter&#x27;</span>, <span class="hljs-string">&#x27;Ben-Gurion, David&#x27;</span>, <span class="hljs-string">&#x27;Benjamin, Walter&#x27;</span>, <span class="hljs-string">&#x27;Benn, Tony&#x27;</span>, <span class="hljs-string">&#x27;Bennington, Chester&#x27;</span>, <span class="hljs-string">&#x27;Benson, Leana&#x27;</span>, <span class="hljs-string">&#x27;Bent, Silas&#x27;</span>, <span class="hljs-string">&#x27;Bentsen, Lloyd&#x27;</span>, <span class="hljs-string">&#x27;Berger, Ric&#x27;</span>, <span class="hljs-string">&#x27;Bergman, Ingmar&#x27;</span>, <span class="hljs-string">&#x27;Berio, Luciano&#x27;</span>, <span class="hljs-string">&#x27;Berle, Milton&#x27;</span>, <span class="hljs-string">&#x27;Berlin, Irving&#x27;</span>, <span class="hljs-string">&#x27;Berne, Eric&#x27;</span>, <span class="hljs-string">&#x27;Bernhard, Sandra&#x27;</span>, <span class="hljs-string">&#x27;Berra, Yogi&#x27;</span>, <span class="hljs-string">&#x27;Berry, Halle&#x27;</span>, <span class="hljs-string">&#x27;Berry, Wendell&#x27;</span>, <span class="hljs-string">&#x27;Bethea, Erin&#x27;</span>, <span class="hljs-string">&#x27;Bevan, Aneurin&#x27;</span>, <span class="hljs-string">&#x27;Bevel, Ken&#x27;</span>, <span class="hljs-string">&#x27;Biden, Joseph&#x27;</span>, <span class="hljs-string">&#x27;Bierce, Ambrose&#x27;</span>, <span class="hljs-string">&#x27;Biko, Steve&#x27;</span>, <span class="hljs-string">&#x27;Billings, Josh&#x27;</span>, <span class="hljs-string">&#x27;Biondo, Frank&#x27;</span>, <span class="hljs-string">&#x27;Birrell, Augustine&#x27;</span>, <span class="hljs-string">&#x27;Black, Elk&#x27;</span>, <span class="hljs-string">&#x27;Blair, Robert&#x27;</span>, <span class="hljs-string">&#x27;Blair, Tony&#x27;</span>, <span class="hljs-string">&#x27;Blake, William&#x27;</span>];<br><br>  <span class="hljs-comment">// Array.prototype.filter()</span><br>  <span class="hljs-comment">// 1. Filter the list of inventors for those who were born in the 1500&#x27;s</span><br>  <span class="hljs-keyword">let</span> fifteen = inventors.filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">inventor</span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> inventor.year &gt;= <span class="hljs-number">1500</span> &amp;&amp; inventor.year &lt; <span class="hljs-number">1600</span><br>  &#125;)<br>  <span class="hljs-comment">// console.table(fifteen)</span><br><br>  <span class="hljs-comment">// Array.prototype.map()</span><br>  <span class="hljs-comment">// 2. Give us an array of the inventors&#x27; first and last names</span><br>  <span class="hljs-keyword">let</span> fullnames = inventors.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">inventor</span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> inventor.first + <span class="hljs-string">&#x27; &#x27;</span> + inventor.last<br>  &#125;)<br>  <span class="hljs-comment">// console.table(fullnames)</span><br><br>  <span class="hljs-comment">// Array.prototype.sort()</span><br>  <span class="hljs-comment">// 3. Sort the inventors by birthdate, oldest to youngest</span><br><br>  <span class="hljs-keyword">let</span> ordered = inventors.sort(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> a.year &gt; b.year ? <span class="hljs-number">1</span> : -<span class="hljs-number">1</span><br>  &#125;)<br>  <span class="hljs-comment">// console.table(ordered)</span><br><br>  <span class="hljs-comment">// Array.prototype.reduce()</span><br>  <span class="hljs-comment">// 4. How many years did all the inventors live?</span><br><br>  <span class="hljs-keyword">let</span> totalYears = inventors.reduce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">total,inventor</span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> total + (inventor.passed - inventor.year)<br>  &#125;, <span class="hljs-number">0</span>)<br>  <span class="hljs-comment">// console.log(totalYears)</span><br><br>  <span class="hljs-comment">// 5. Sort the inventors by years lived</span><br>  <span class="hljs-keyword">let</span> oldest = inventors.sort(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> (a.passed - a.year) &gt; (b.passed - b.year) ? -<span class="hljs-number">1</span> : <span class="hljs-number">1</span><br>  &#125;)<br>  <span class="hljs-comment">// console.table(oldest)</span><br><br>  <span class="hljs-comment">// 6. create a list of Boulevards in Paris that contain &#x27;de&#x27; anywhere in the name</span><br>  <span class="hljs-comment">// https://en.wikipedia.org/wiki/Category:Boulevards_in_Paris</span><br><br>  <span class="hljs-comment">// let category = document.querySelector(&#x27;.mw-category&#x27;)</span><br>  <span class="hljs-comment">// let links = Array.from(category.querySelectorAll(&#x27;a&#x27;))</span><br>  <span class="hljs-comment">// let de = links</span><br>  <span class="hljs-comment">//             .map(link =&gt; link.textContent)</span><br>  <span class="hljs-comment">//             .filter(streetName =&gt; streetName.includes(&#x27;de&#x27;))</span><br><br><br>  <span class="hljs-comment">// 7. sort Exercise</span><br>  <span class="hljs-comment">// Sort the people alphabetically by last name</span><br><br>  <span class="hljs-keyword">let</span> alphabetically = people.sort(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a,b</span>)</span>&#123;<br>    <span class="hljs-keyword">let</span> [alast, afirst] = a.split(<span class="hljs-string">&#x27;, &#x27;</span>)<br>    <span class="hljs-keyword">let</span> [blast, bfirst] = b.split(<span class="hljs-string">&#x27;, &#x27;</span>)<br>    <span class="hljs-keyword">return</span> alast &gt; blast ? <span class="hljs-number">1</span> : -<span class="hljs-number">1</span><br>  &#125;)<br>  <span class="hljs-built_in">console</span>.table(alphabetically)<br><br>  <span class="hljs-comment">// 8. Reduce Exercise</span><br>  <span class="hljs-comment">// Sum up the instances of each of these</span><br>  <span class="hljs-keyword">const</span> data = [<span class="hljs-string">&#x27;car&#x27;</span>, <span class="hljs-string">&#x27;car&#x27;</span>, <span class="hljs-string">&#x27;truck&#x27;</span>, <span class="hljs-string">&#x27;truck&#x27;</span>, <span class="hljs-string">&#x27;bike&#x27;</span>, <span class="hljs-string">&#x27;walk&#x27;</span>, <span class="hljs-string">&#x27;car&#x27;</span>, <span class="hljs-string">&#x27;van&#x27;</span>, <span class="hljs-string">&#x27;bike&#x27;</span>, <span class="hljs-string">&#x27;walk&#x27;</span>, <span class="hljs-string">&#x27;car&#x27;</span>, <span class="hljs-string">&#x27;van&#x27;</span>, <span class="hljs-string">&#x27;car&#x27;</span>, <span class="hljs-string">&#x27;truck&#x27;</span> ];<br><br>  <span class="hljs-keyword">let</span> transportation = data.reduce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">obj,content</span>)</span>&#123;<br>    <span class="hljs-keyword">if</span>(!obj[content]) obj[content] = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">else</span> obj[content] += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">return</span> obj<br>  &#125;,&#123;&#125;)<br>  <span class="hljs-built_in">console</span>.table(transportation)<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>本次範例程式碼原作者來源：<a href="https://reurl.cc/9zZGYv">https://reurl.cc/9zZGYv</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村03 - CSS Variables</title>
    <link href="/2019/09/18/javascript03/"/>
    <url>/2019/09/18/javascript03/</url>
    
    <content type="html"><![CDATA[<h1 id="03-CSS-Variables"><a href="#03-CSS-Variables" class="headerlink" title="03 - CSS Variables"></a>03 - CSS Variables</h1><p>俗話說的好，一天一蘋果，醫生遠離我<br>一天一 JS，What the f*ck JavaScript？<br>small steps every day - 記錄著新手村日記</p><h2 id="完成目標"><a href="#完成目標" class="headerlink" title="完成目標"></a>完成目標</h2><p>先寫一段 CSS 來改變 img 的 padding &amp; filter &amp; backgorund<br>畫面有三個變數: <code>Space</code>, <code>Blur</code>, <code>Base Color</code>，當我們在畫面拉動時它會立即更新畫面</p><ul><li>功能<ul><li>拉動、點擊</li></ul></li><li>畫面<ul><li>改變控制項會立即改變畫面</li></ul></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><p>html 的整體結構如下所示， <code>class=&quot;controls&quot;</code> 包住 <code>label+input</code> 並且在 <code>id=&quot;spacing&quot;</code> 中有 <code>type=&quot;range&quot;</code> 與 <code>type=&quot;range&quot;</code> 可以調整控制項與選擇顏色以更動下方的照片。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Scoped CSS Variables and JS<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Update CSS Variables with <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;hl&#x27;</span>&gt;</span>JS<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;controls&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;spacing&quot;</span>&gt;</span>Spacing:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;spacing&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;spacing&quot;</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;10&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;200&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;10&quot;</span> <span class="hljs-attr">data-sizing</span>=<span class="hljs-string">&quot;px&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;blur&quot;</span>&gt;</span>Blur:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;blur&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;blur&quot;</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;25&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;10&quot;</span> <span class="hljs-attr">data-sizing</span>=<span class="hljs-string">&quot;px&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;base&quot;</span>&gt;</span>Base Color<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;base&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;color&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;base&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;#ffc600&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://source.unsplash.com/7bwQXzbF6KE/800x500&quot;</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><br>    /*<br><span class="css">      misc styles, nothing <span class="hljs-selector-tag">to</span> do with CSS variables</span><br>    */<br><br><span class="css">    <span class="hljs-selector-tag">body</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">      <span class="hljs-attribute">background</span>: <span class="hljs-number">#193549</span>;</span><br><span class="css">      <span class="hljs-attribute">color</span>: white;</span><br><span class="css">      <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;helvetica neue&#x27;</span>, sans-serif;</span><br><span class="css">      <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">100</span>;</span><br><span class="css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">50px</span>;</span><br>    &#125;<br><br>    .controls &#123;<br><span class="css">      <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">50px</span>;</span><br>    &#125;<br><br><span class="css">    <span class="hljs-selector-tag">input</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br>    &#125;<br>  <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Html"><a href="#Html" class="headerlink" title="Html"></a>Html</h2><ul><li><p>type=”range”、type=”color”</p><p>type 屬性規定 input 元素的類型，其屬性值可以有 button、checkbox、file、hidden、image、password、radio、reset、submit、text。而 color、range兩者為 HTML5 新的屬性值</p></li></ul><p>Color：使用者可以開啟選擇顏色器選取所要之顏色</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">Color: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;color&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;user_color&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p>Range：使用者可以滑動選擇範圍內的數值</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;points&quot;</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;10&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><ul><li><p>透過 JS 研究 CSS 中的 :root 是什麼？</p><p>也可以把 :root 變成 html，它指的是指向文件根的標籤</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;:root&#x27;</span>)<br><span class="hljs-comment">// html</span><br><span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;:root&#x27;</span>) === <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;html&#x27;</span>)<br><span class="hljs-comment">// true</span><br><span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;:root&#x27;</span>) === <span class="hljs-built_in">document</span>.documentElement<br><span class="hljs-comment">// true</span><br></code></pre></td></tr></table></figure><h2 id="CSS-step-by-step"><a href="#CSS-step-by-step" class="headerlink" title="CSS - step by step"></a>CSS - step by step</h2></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><span class="css">    <span class="hljs-selector-pseudo">:root</span> &#123;</span><br><span class="css">      --base: <span class="hljs-number">#ffc600</span>;</span><br><span class="css">      --spacing: <span class="hljs-number">10px</span>;</span><br><span class="css">      --blur: <span class="hljs-number">10px</span>;</span><br>    &#125;<br><br><span class="css">    <span class="hljs-selector-tag">img</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">padding</span>: <span class="hljs-built_in">var</span>(--spacing);</span><br><span class="css">      <span class="hljs-attribute">background</span>: <span class="hljs-built_in">var</span>(--base);</span><br><span class="css">      <span class="hljs-attribute">filter</span>: <span class="hljs-built_in">blur</span>(<span class="hljs-built_in">var</span>(--blur));</span><br>    &#125;<br><br>    .hl &#123;<br><span class="css">      <span class="hljs-attribute">color</span>: <span class="hljs-built_in">var</span>(--base);</span><br>    &#125;<br><br><span class="css">    <span class="hljs-comment">/*下略*/</span> </span><br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，透過 <code>querySelectorAll</code> 抓出 class=”controls” 內的 input 標籤，設定變數為 inputs，記得如這樣抓出來的 inputs 是一個 List，他是沒有辦法使用 map 的！</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript"><span class="hljs-keyword">const</span> inputs = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;.controls input&#x27;</span>)</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>將抓出來的 List 透過迴圈並用 <code>addEventListener</code> 來監視假設 input 裡的 value 更換會呼叫方法，方法會印出 HTML 中 input 的 name &amp; value（change在滑動時不會呼叫方法，放開滑鼠後才會執行、要持續的話必須要加上 <code>mousemove</code> ）</p><p>EventTarget.addEventListener()：<a href="https://ubin.io/AQGZfT">https://ubin.io/AQGZfT</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">    <span class="hljs-keyword">const</span> inputs = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;.controls input&#x27;</span>)</span><br><br><span class="javascript">    inputs.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">input</span>)</span>&#123;</span><br><span class="javascript">      input.addEventListener(<span class="hljs-string">&#x27;change&#x27;</span>,changeinput)</span><br><span class="javascript">      input.addEventListener(<span class="hljs-string">&#x27;mousemove&#x27;</span>,changeinput)</span><br>    &#125;)<br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">changeinput</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.name,<span class="hljs-built_in">this</span>.value)</span><br>    &#125;<br><span class="javascript"><span class="hljs-comment">// spacing 200 </span></span><br><span class="javascript"><span class="hljs-comment">// base #ff0000</span></span><br><span class="javascript"><span class="hljs-comment">// blur 20</span></span><br><span class="javascript">    <span class="hljs-comment">// ...</span></span><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>可以印出值之後，透過 switch case 的方式來更換 CSS，如果是抓到 <code>spacing</code> 就要改動其 CSS 中的 padding，抓到 <code>blur</code> 就要改動其CSS 中的 filter 濾鏡，抓到 <code>base</code> 就要改動其 CSS 中的 background，</p><p>w3c filter：<a href="https://ubin.io/pg51KQ">https://ubin.io/pg51KQ</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">    <span class="hljs-comment">// 上略</span></span><br><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">changeinput</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-comment">// console.log(this.name,this.value)</span></span><br><span class="javascript">      <span class="hljs-keyword">switch</span> (<span class="hljs-built_in">this</span>.name) &#123;</span><br><span class="javascript">        <span class="hljs-keyword">case</span> <span class="hljs-string">`spacing`</span>:</span><br><span class="javascript">          <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;img&#x27;</span>).style.padding = <span class="hljs-built_in">this</span>.value + <span class="hljs-string">&#x27;px&#x27;</span></span><br><span class="javascript">        <span class="hljs-keyword">break</span>;</span><br><span class="javascript">        <span class="hljs-keyword">case</span> <span class="hljs-string">`blur`</span>:</span><br><span class="javascript">          <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;img&#x27;</span>).style.filter = <span class="hljs-string">`blur(<span class="hljs-subst">$&#123;<span class="hljs-built_in">this</span>.value&#125;</span>px)`</span></span><br><span class="javascript">        <span class="hljs-keyword">break</span>;</span><br><span class="javascript">        <span class="hljs-keyword">case</span> <span class="hljs-string">`base`</span>:</span><br><span class="javascript">          <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;img&#x27;</span>).style.background = <span class="hljs-built_in">this</span>.value</span><br><span class="javascript">        <span class="hljs-keyword">break</span>;</span><br>      &#125;<br>    &#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>就大功告成啦！</p><h2 id="JS-Final"><a href="#JS-Final" class="headerlink" title="JS - Final"></a>JS - Final</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">    <span class="hljs-keyword">const</span> inputs = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;.controls input&#x27;</span>)</span><br><br><span class="javascript">    inputs.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">input</span>)</span>&#123;</span><br><span class="javascript">      input.addEventListener(<span class="hljs-string">&#x27;change&#x27;</span>,changeinput)</span><br><span class="javascript">      input.addEventListener(<span class="hljs-string">&#x27;mousemove&#x27;</span>,changeinput)</span><br>    &#125;)<br><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">changeinput</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-comment">// console.log(this.name,this.value)</span></span><br><span class="javascript">      <span class="hljs-keyword">switch</span> (<span class="hljs-built_in">this</span>.name) &#123;</span><br><span class="javascript">        <span class="hljs-keyword">case</span> <span class="hljs-string">`spacing`</span>:</span><br><span class="javascript">          <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;img&#x27;</span>).style.padding = <span class="hljs-built_in">this</span>.value + <span class="hljs-string">&#x27;px&#x27;</span></span><br><span class="javascript">        <span class="hljs-keyword">break</span>;</span><br><span class="javascript">        <span class="hljs-keyword">case</span> <span class="hljs-string">`blur`</span>:</span><br><span class="javascript">          <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;img&#x27;</span>).style.filter = <span class="hljs-string">`blur(<span class="hljs-subst">$&#123;<span class="hljs-built_in">this</span>.value&#125;</span>px)`</span></span><br><span class="javascript">        <span class="hljs-keyword">break</span>;</span><br><span class="javascript">        <span class="hljs-keyword">case</span> <span class="hljs-string">`base`</span>:</span><br><span class="javascript">          <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;img&#x27;</span>).style.background = <span class="hljs-built_in">this</span>.value</span><br><span class="javascript">        <span class="hljs-keyword">break</span>;</span><br>      &#125;<br>    &#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>本次範例程式碼原作者來源：<a href="https://reurl.cc/1QgokY">https://reurl.cc/1QgokY</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村02 - JS and CSS Clock</title>
    <link href="/2019/09/17/javascript02/"/>
    <url>/2019/09/17/javascript02/</url>
    
    <content type="html"><![CDATA[<h1 id="02-JS-and-CSS-Clock"><a href="#02-JS-and-CSS-Clock" class="headerlink" title="02 - JS and CSS Clock"></a>02 - JS and CSS Clock</h1><p>俗話說的好，一天一蘋果，醫生遠離我<br>一天一 JS，What the f*ck JavaScript？<br>small steps every day - 記錄著新手村日記</p><h2 id="CSS-JS-Clock-完成目標"><a href="#CSS-JS-Clock-完成目標" class="headerlink" title="CSS+JS Clock 完成目標"></a>CSS+JS Clock 完成目標</h2><p>時鐘一開始就提供了一個鐘面，也寫好了三支指針</p><ul><li>功能<ul><li>顯示目前的時間並可以更新時針、分針、秒針</li></ul></li><li>畫面<ul><li>讀得到目前的時間</li><li>指針要能分辨長短</li><li>分針、時針的特性</li></ul></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><p>html 的整體結構如下所示， <code>class=&quot;clock&quot;</code> 包住 <code>class=&quot;clock-face&quot;</code>，內部又有 <code>hand hour-hand </code> 、<code>hand min-hand</code> 和 <code>hand second-hand</code>  三個 <code>div</code> ，分別代表秒針、分針、時針</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>JS + CSS Clock<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;clock&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;clock-face&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hand hour-hand&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hand min-hand&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hand second-hand&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><span class="css">    <span class="hljs-selector-tag">html</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">background</span>: <span class="hljs-number">#018DED</span> <span class="hljs-built_in">url</span>(<span class="hljs-string">http://unsplash.it/1500/1000?image=881&amp;blur=5</span>);</span><br><span class="css">      <span class="hljs-attribute">background-size</span>: cover;</span><br><span class="css">      <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;helvetica neue&#x27;</span>;</span><br><span class="css">      <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">10px</span>;</span><br>    &#125;<br><span class="css">    <span class="hljs-selector-tag">body</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="css">      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">2rem</span>;</span><br><span class="css">      <span class="hljs-attribute">display</span>: flex;</span><br><span class="css">      <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;</span><br><span class="css">      <span class="hljs-attribute">min-height</span>: <span class="hljs-number">100vh</span>;</span><br><span class="css">      <span class="hljs-attribute">align-items</span>: center;</span><br>    &#125;<br>    .clock &#123;<br><span class="css">      <span class="hljs-attribute">width</span>: <span class="hljs-number">30rem</span>;</span><br><span class="css">      <span class="hljs-attribute">height</span>: <span class="hljs-number">30rem</span>;</span><br><span class="css">      <span class="hljs-attribute">border</span>: <span class="hljs-number">20px</span> solid white;</span><br><span class="css">      <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;</span><br><span class="css">      <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto;</span><br><span class="css">      <span class="hljs-attribute">position</span>: relative;</span><br><span class="css">      <span class="hljs-attribute">padding</span>: <span class="hljs-number">2rem</span>;</span><br><span class="css">      <span class="hljs-attribute">box-shadow</span>:</span><br>        0 0 0 4px rgba(0,0,0,0.1),<br>        inset 0 0 0 3px #EFEFEF,<br>        inset 0 0 10px black,<br>        0 0 10px rgba(0,0,0,0.2);<br>    &#125;<br>    .clock-face &#123;<br><span class="css">      <span class="hljs-attribute">position</span>: relative;</span><br><span class="css">      <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">      <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(-<span class="hljs-number">3px</span>); <span class="hljs-comment">/* account for the height of the clock hands */</span></span><br>    &#125;<br>    .hand &#123;<br><span class="css">      <span class="hljs-attribute">width</span>: <span class="hljs-number">50%</span>;</span><br><span class="css">      <span class="hljs-attribute">height</span>: <span class="hljs-number">6px</span>;</span><br><span class="css">      <span class="hljs-attribute">background</span>: black;</span><br><span class="css">      <span class="hljs-attribute">position</span>: absolute;</span><br><span class="css">      <span class="hljs-attribute">top</span>: <span class="hljs-number">50%</span>;</span><br>    &#125;<br>  <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;style&gt;<br>    <span class="hljs-selector-tag">html</span> &#123;<br>      <span class="hljs-attribute">background</span>: <span class="hljs-number">#018DED</span> <span class="hljs-built_in">url</span>(<span class="hljs-string">http://unsplash.it/1500/1000?image=881&amp;blur=5</span>);<br>      <span class="hljs-attribute">background-size</span>: cover;<br>      <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;helvetica neue&#x27;</span>;<br>      <span class="hljs-attribute">text-align</span>: center;<br>      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">10px</span>;<br>    &#125;<br><br>    <span class="hljs-selector-tag">body</span> &#123;<br>      <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">2rem</span>;<br>      <span class="hljs-attribute">display</span>: flex;<br>      <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;<br>      <span class="hljs-attribute">min-height</span>: <span class="hljs-number">100vh</span>;<br>      <span class="hljs-attribute">align-items</span>: center;<br>    &#125;<br><br>    <span class="hljs-selector-class">.clock</span> &#123;<br>      <span class="hljs-attribute">width</span>: <span class="hljs-number">30rem</span>;<br>      <span class="hljs-attribute">height</span>: <span class="hljs-number">30rem</span>;<br>      <span class="hljs-attribute">border</span>: <span class="hljs-number">20px</span> solid white;<br>      <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;<br>      <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span> auto;<br>      <span class="hljs-attribute">position</span>: relative;<br>      <span class="hljs-attribute">padding</span>: <span class="hljs-number">2rem</span>;<br>      <span class="hljs-attribute">box-shadow</span>:<br>        <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">4px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.1</span>),<br>        inset <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">3px</span> <span class="hljs-number">#EFEFEF</span>,<br>        inset <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">10px</span> black,<br>        <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">10px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.2</span>);<br>    &#125;<br><br>    <span class="hljs-selector-class">.clock-face</span> &#123;<br>      <span class="hljs-attribute">position</span>: relative;<br>      <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>      <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(-<span class="hljs-number">3px</span>); <span class="hljs-comment">/* account for the height of the clock hands */</span><br>    &#125;<br><br><span class="hljs-selector-class">.clock-face</span>:after &#123;<br>      content: <span class="hljs-string">&#x27;&#x27;</span>;<br>      <span class="hljs-attribute">display</span>: block;<br>      <span class="hljs-attribute">width</span>: <span class="hljs-number">30px</span>;<br>      <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;<br>      <span class="hljs-attribute">position</span>: absolute;<br>      <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#fff</span>;<br>      <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">100%</span>;<br>      <span class="hljs-attribute">top</span>: <span class="hljs-number">50%</span>;<br>      <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;<br>      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(-<span class="hljs-number">50%</span>, -<span class="hljs-number">50%</span>);<br>    &#125;<br><br>    <span class="hljs-selector-class">.hand</span> &#123;<br>      <span class="hljs-attribute">position</span>: absolute;<br>      <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>      <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>    &#125;<br><br>    <span class="hljs-selector-class">.second-hand</span>:after &#123;<br>      content: <span class="hljs-string">&#x27;&#x27;</span>;<br>      <span class="hljs-attribute">position</span>: absolute;<br>      <span class="hljs-attribute">display</span>: block;<br>      <span class="hljs-attribute">width</span>: <span class="hljs-number">5px</span>;<br>      <span class="hljs-attribute">height</span>: <span class="hljs-number">50%</span>;<br>      <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#f00</span>;<br>      <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;<br>      <span class="hljs-attribute">bottom</span>: <span class="hljs-number">50%</span>;<br>      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(-<span class="hljs-number">50%</span>, <span class="hljs-number">0%</span>);<br>    &#125;<br><br>    <span class="hljs-selector-class">.min-hand</span>:after &#123;<br>      content: <span class="hljs-string">&#x27;&#x27;</span>;<br>      <span class="hljs-attribute">position</span>: absolute;<br>      <span class="hljs-attribute">display</span>: block;<br>      <span class="hljs-attribute">width</span>: <span class="hljs-number">10px</span>;<br>      <span class="hljs-attribute">height</span>: <span class="hljs-number">40%</span>;<br>      <span class="hljs-attribute">background-color</span>: white;<br>      <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;<br>      <span class="hljs-attribute">bottom</span>: <span class="hljs-number">50%</span>;<br>      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(-<span class="hljs-number">50%</span>, <span class="hljs-number">0%</span>);<br>    &#125;<br><br>    <span class="hljs-selector-class">.hour-hand</span>:after &#123;<br>      content: <span class="hljs-string">&#x27;&#x27;</span>;<br>      <span class="hljs-attribute">position</span>: absolute;<br>      <span class="hljs-attribute">display</span>: block;<br>      <span class="hljs-attribute">width</span>: <span class="hljs-number">15px</span>;<br>      <span class="hljs-attribute">height</span>: <span class="hljs-number">25%</span>;<br>      <span class="hljs-attribute">background-color</span>: white;<br>      <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;<br>      <span class="hljs-attribute">bottom</span>: <span class="hljs-number">50%</span>;<br>      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(-<span class="hljs-number">50%</span>, <span class="hljs-number">0%</span>);<br>    &#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，先分別抓到秒針、分針、時針的 class 指定給變數 second、min、hour，在後方的計算時間時需要將三個針旋轉角度，達到時鐘的效果</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">  <span class="hljs-keyword">const</span> second = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.second-hand&#x27;</span>)</span><br><span class="javascript">  <span class="hljs-keyword">const</span> min = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.min-hand&#x27;</span>)</span><br><span class="javascript">  <span class="hljs-keyword">const</span> hour = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.hour-hand&#x27;</span>)</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>可以使用 <code>new Date()</code> 來抓到現在的時間</p><p>Date()：<a href="https://ubin.io/WvAtZC">https://ubin.io/WvAtZC</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">  <span class="hljs-keyword">const</span> second = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.second-hand&#x27;</span>)</span><br><span class="javascript">  <span class="hljs-keyword">const</span> min = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.min-hand&#x27;</span>)</span><br><span class="javascript">  <span class="hljs-keyword">const</span> hour = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.hour-hand&#x27;</span>)</span><br>  <br><span class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setClock</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">  <span class="hljs-keyword">let</span> data = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()</span><br><span class="javascript">  <span class="hljs-built_in">console</span>.log(data) </span><br><span class="javascript">    <span class="hljs-comment">// Sat Sep 14 2019 23:28:44 GMT+0800 (台北標準時間)</span></span><br>  &#125;<br><br>  setClock()<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>算出一秒鐘、一分鐘、一小時中秒針、分針、時針需要轉動多少角度，一圈轉360度時，秒針、分針動一秒為6度、時針為30度，知道這件事情後，我們才能將三者指定為變數（但有小瑕疵稍後會解決）</p><p>Date.prototype.getSeconds()：<a href="https://ubin.io/Uw21Ep">https://ubin.io/Uw21Ep</a><br>Date.prototype.Minutes()：<a href="https://ubin.io/L6mcH5">https://ubin.io/L6mcH5</a><br>Date.prototype.getHours()：<a href="https://ubin.io/2DvLNS">https://ubin.io/2DvLNS</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">    <span class="hljs-keyword">const</span> second = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.second-hand&#x27;</span>)</span><br><span class="javascript">    <span class="hljs-keyword">const</span> min = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.min-hand&#x27;</span>)</span><br><span class="javascript">    <span class="hljs-keyword">const</span> hour = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.hour-hand&#x27;</span>)</span><br><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setClock</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">let</span> data = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()</span><br><br><span class="javascript">      <span class="hljs-keyword">let</span> secondDeg = data.getSeconds() * <span class="hljs-number">6</span> <span class="hljs-comment">// (deg = 360/60)</span></span><br><span class="javascript">      <span class="hljs-keyword">let</span> minDeg = data.getMinutes() * <span class="hljs-number">6</span> <span class="hljs-comment">// (deg = 360/60)</span></span><br><span class="javascript">      <span class="hljs-keyword">let</span> hourDeg = data.getHours() * <span class="hljs-number">30</span> <span class="hljs-comment">// (deg = 360/12)</span></span><br>    &#125;<br>    <br>    setClock()<br> <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>透過 <code>event.style.transform</code> 更動秒針、分針、時針的 CSS，要它們轉動個字的角度</p><p>Style transform Property：<a href="https://ubin.io/1LyRPt">https://ubin.io/1LyRPt</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">    <span class="hljs-keyword">const</span> second = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.second-hand&#x27;</span>)</span><br><span class="javascript">    <span class="hljs-keyword">const</span> min = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.min-hand&#x27;</span>)</span><br><span class="javascript">    <span class="hljs-keyword">const</span> hour = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.hour-hand&#x27;</span>)</span><br><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setClock</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">let</span> data = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()</span><br><br><span class="javascript">      <span class="hljs-keyword">let</span> secondDeg = data.getSeconds() * <span class="hljs-number">6</span> <span class="hljs-comment">// (deg = 360/60)</span></span><br><span class="javascript">      <span class="hljs-keyword">let</span> minDeg = data.getMinutes() * <span class="hljs-number">6</span> <span class="hljs-comment">// (deg = 360/60)</span></span><br><span class="javascript">      <span class="hljs-keyword">let</span> hourDeg = data.getHours() * <span class="hljs-number">30</span> <span class="hljs-comment">// (deg = 360/12)</span></span><br><br><span class="javascript">      second.style.transform = <span class="hljs-string">`rotate(<span class="hljs-subst">$&#123;secondDeg&#125;</span>deg)`</span></span><br><span class="javascript">      min.style.transform = <span class="hljs-string">`rotate(<span class="hljs-subst">$&#123;minDeg&#125;</span>deg)`</span></span><br><span class="javascript">      hour.style.transform = <span class="hljs-string">`rotate(<span class="hljs-subst">$&#123;hourDeg&#125;</span>deg)`</span></span><br><br>    &#125;<br>    setClock()<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>透過 <code>setInterval()</code>  不斷在間隔固定的時間重複執行：程式碼中的 1000 代表每隔一秒就會呼叫一次函式 <code>setClock</code></p><p>setTimeout() / setInterval()：<a href="https://reurl.cc/Qp76ab">https://reurl.cc/Qp76ab</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">    <span class="hljs-keyword">const</span> second = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.second-hand&#x27;</span>)</span><br><span class="javascript">    <span class="hljs-keyword">const</span> min = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.min-hand&#x27;</span>)</span><br><span class="javascript">    <span class="hljs-keyword">const</span> hour = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.hour-hand&#x27;</span>)</span><br><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setClock</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">let</span> data = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()</span><br><br><span class="javascript">      <span class="hljs-keyword">let</span> secondDeg = data.getSeconds() * <span class="hljs-number">6</span> <span class="hljs-comment">// (deg = 360/60)</span></span><br><span class="javascript">      <span class="hljs-keyword">let</span> minDeg = data.getMinutes() * <span class="hljs-number">6</span> <span class="hljs-comment">// (deg = 360/60)</span></span><br><span class="javascript">      <span class="hljs-keyword">let</span> hourDeg = data.getHours() * <span class="hljs-number">30</span> <span class="hljs-comment">// (deg = 360/12)</span></span><br><br><span class="javascript">      second.style.transform = <span class="hljs-string">`rotate(<span class="hljs-subst">$&#123;secondDeg&#125;</span>deg)`</span></span><br><span class="javascript">      min.style.transform = <span class="hljs-string">`rotate(<span class="hljs-subst">$&#123;minDeg&#125;</span>deg)`</span></span><br><span class="javascript">      hour.style.transform = <span class="hljs-string">`rotate(<span class="hljs-subst">$&#123;hourDeg&#125;</span>deg)`</span></span><br><br>    &#125;<br>    setClock()<br><span class="javascript">    <span class="hljs-built_in">setInterval</span>(setClock,<span class="hljs-number">1000</span>) </span><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>還有一點小瑕疵…你會發現分針、時針不太符合常態，會真正到等分針、秒針轉完一圈才進位一大格，但應該是會慢慢的趨向於進一格，因此在抓角度的算式必須更動一下，可以試著畫圖想想看…</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">    <span class="hljs-comment">// 上略</span></span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setClock</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">let</span> data = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()</span><br><br><span class="javascript">      <span class="hljs-keyword">let</span> secondDeg = data.getSeconds() * <span class="hljs-number">6</span> </span><br><span class="javascript">      <span class="hljs-keyword">let</span> minDeg = data.getMinutes() * <span class="hljs-number">6</span> + data.getSeconds() * <span class="hljs-number">6</span> / <span class="hljs-number">60</span></span><br><span class="javascript">      <span class="hljs-comment">// 1min = 6deg / 60sec * secondDeg</span></span><br><span class="javascript">      <span class="hljs-keyword">let</span> hourDeg = data.getHours() * <span class="hljs-number">30</span> + data.getMinutes() * <span class="hljs-number">30</span> / <span class="hljs-number">60</span></span><br><span class="javascript">      <span class="hljs-comment">// 1hr = 30deg / 60min * minDeg</span></span><br><br><span class="javascript">      second.style.transform = <span class="hljs-string">`rotate(<span class="hljs-subst">$&#123;secondDeg&#125;</span>deg)`</span></span><br><span class="javascript">      min.style.transform = <span class="hljs-string">`rotate(<span class="hljs-subst">$&#123;minDeg&#125;</span>deg)`</span></span><br><span class="javascript">      hour.style.transform = <span class="hljs-string">`rotate(<span class="hljs-subst">$&#123;hourDeg&#125;</span>deg)`</span></span><br><br>    &#125;<br>    setClock()<br><span class="javascript">    <span class="hljs-built_in">setInterval</span>(setClock,<span class="hljs-number">1000</span>)</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>就大功告成啦！</p><h2 id="JS-Final"><a href="#JS-Final" class="headerlink" title="JS - Final"></a>JS - Final</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">  <span class="hljs-keyword">const</span> secondHand = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.second-hand&#x27;</span>);</span><br><span class="javascript">  <span class="hljs-keyword">const</span> minsHand = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.min-hand&#x27;</span>);</span><br><span class="javascript">  <span class="hljs-keyword">const</span> hourHand = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.hour-hand&#x27;</span>);</span><br><br><span class="javascript">  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setDate</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">const</span> now = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();</span><br><br><span class="javascript">    <span class="hljs-keyword">const</span> seconds = now.getSeconds();</span><br><span class="javascript">    <span class="hljs-keyword">const</span> secondsDegrees = ((seconds / <span class="hljs-number">60</span>) * <span class="hljs-number">360</span>) + <span class="hljs-number">90</span>;</span><br><span class="javascript">    secondHand.style.transform = <span class="hljs-string">`rotate(<span class="hljs-subst">$&#123;secondsDegrees&#125;</span>deg)`</span>;</span><br><br><span class="javascript">    <span class="hljs-keyword">const</span> mins = now.getMinutes();</span><br><span class="javascript">    <span class="hljs-keyword">const</span> minsDegrees = ((mins / <span class="hljs-number">60</span>) * <span class="hljs-number">360</span>) + ((seconds/<span class="hljs-number">60</span>)*<span class="hljs-number">6</span>) + <span class="hljs-number">90</span>;</span><br><span class="javascript">    minsHand.style.transform = <span class="hljs-string">`rotate(<span class="hljs-subst">$&#123;minsDegrees&#125;</span>deg)`</span>;</span><br><br><span class="javascript">    <span class="hljs-keyword">const</span> hour = now.getHours();</span><br><span class="javascript">    <span class="hljs-keyword">const</span> hourDegrees = ((hour / <span class="hljs-number">12</span>) * <span class="hljs-number">360</span>) + ((mins/<span class="hljs-number">60</span>)*<span class="hljs-number">30</span>) + <span class="hljs-number">90</span>;</span><br><span class="javascript">    hourHand.style.transform = <span class="hljs-string">`rotate(<span class="hljs-subst">$&#123;hourDegrees&#125;</span>deg)`</span>;</span><br>  &#125;<br><br><span class="javascript">  <span class="hljs-built_in">setInterval</span>(setDate, <span class="hljs-number">1000</span>);</span><br><br>  setDate();<br><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>本次範例程式碼原作者來源：<a href="https://reurl.cc/zybW5k">https://reurl.cc/zybW5k</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新手村01 - JavaScript Drum Kit</title>
    <link href="/2019/09/16/javasciprt01/"/>
    <url>/2019/09/16/javasciprt01/</url>
    
    <content type="html"><![CDATA[<h1 id="01-JavaScript-Drum-Kit"><a href="#01-JavaScript-Drum-Kit" class="headerlink" title="01 - JavaScript Drum Kit"></a>01 - JavaScript Drum Kit</h1><p>俗話說的好，一天一蘋果，醫生遠離我<br>一天一JS，What the f*ck JavaScript？<br>small steps every day - 記錄著新手村日記</p><h2 id="Drum-Kit-完成目標"><a href="#Drum-Kit-完成目標" class="headerlink" title="Drum Kit 完成目標"></a>Drum Kit 完成目標</h2><p>一個鍵盤爵士鼓</p><ul><li>功能<ul><li>按下鍵盤，出現相對應的聲音</li></ul></li><li>畫面<ul><li>按下鍵盤，畫面上的字母方塊出現以下動畫<ul><li>黃色陰影</li><li>字母方塊放大1.1倍</li></ul></li></ul></li></ul><h2 id="index-START-html"><a href="#index-START-html" class="headerlink" title="index_START.html"></a>index_START.html</h2><p>html 的整體結構如下所示， <code>class=&quot;keys&quot;</code> 包住九個 <code>data-key=&quot;number&quot; class=&quot;key&quot;</code> 的 <code> div</code> ，內部又有用 <code>kbd </code> 和 <code>span</code> 標籤包住的文字，下方有 <code>audio</code> 標籤包 <code>data-key=&quot;number&quot; src=&quot;音檔&quot;</code> </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>JS Drum Kit<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;style.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;keys&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">data-key</span>=<span class="hljs-string">&quot;65&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;key&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">kbd</span>&gt;</span>A<span class="hljs-tag">&lt;/<span class="hljs-name">kbd</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sound&quot;</span>&gt;</span>clap<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">data-key</span>=<span class="hljs-string">&quot;83&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;key&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">kbd</span>&gt;</span>S<span class="hljs-tag">&lt;/<span class="hljs-name">kbd</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sound&quot;</span>&gt;</span>hihat<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">data-key</span>=<span class="hljs-string">&quot;68&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;key&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">kbd</span>&gt;</span>D<span class="hljs-tag">&lt;/<span class="hljs-name">kbd</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sound&quot;</span>&gt;</span>kick<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">data-key</span>=<span class="hljs-string">&quot;70&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;key&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">kbd</span>&gt;</span>F<span class="hljs-tag">&lt;/<span class="hljs-name">kbd</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sound&quot;</span>&gt;</span>openhat<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">data-key</span>=<span class="hljs-string">&quot;71&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;key&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">kbd</span>&gt;</span>G<span class="hljs-tag">&lt;/<span class="hljs-name">kbd</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sound&quot;</span>&gt;</span>boom<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">data-key</span>=<span class="hljs-string">&quot;72&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;key&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">kbd</span>&gt;</span>H<span class="hljs-tag">&lt;/<span class="hljs-name">kbd</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sound&quot;</span>&gt;</span>ride<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">data-key</span>=<span class="hljs-string">&quot;74&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;key&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">kbd</span>&gt;</span>J<span class="hljs-tag">&lt;/<span class="hljs-name">kbd</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sound&quot;</span>&gt;</span>snare<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">data-key</span>=<span class="hljs-string">&quot;75&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;key&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">kbd</span>&gt;</span>K<span class="hljs-tag">&lt;/<span class="hljs-name">kbd</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sound&quot;</span>&gt;</span>tom<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">data-key</span>=<span class="hljs-string">&quot;76&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;key&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">kbd</span>&gt;</span>L<span class="hljs-tag">&lt;/<span class="hljs-name">kbd</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sound&quot;</span>&gt;</span>tink<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">data-key</span>=<span class="hljs-string">&quot;65&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;sounds/clap.wav&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">audio</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">data-key</span>=<span class="hljs-string">&quot;83&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;sounds/hihat.wav&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">audio</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">data-key</span>=<span class="hljs-string">&quot;68&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;sounds/kick.wav&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">audio</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">data-key</span>=<span class="hljs-string">&quot;70&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;sounds/openhat.wav&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">audio</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">data-key</span>=<span class="hljs-string">&quot;71&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;sounds/boom.wav&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">audio</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">data-key</span>=<span class="hljs-string">&quot;72&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;sounds/ride.wav&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">audio</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">data-key</span>=<span class="hljs-string">&quot;74&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;sounds/snare.wav&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">audio</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">data-key</span>=<span class="hljs-string">&quot;75&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;sounds/tom.wav&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">audio</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">data-key</span>=<span class="hljs-string">&quot;76&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;sounds/tink.wav&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">audio</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Html"><a href="#Html" class="headerlink" title="Html"></a>Html</h2><ul><li><p>data-key</p><p>data-* 屬性是 HTML5 中的新屬性，後面的名稱我們可以自己定義，舉例來說：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;block&quot;</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;block1&quot;</span> <span class="hljs-attr">data-myid</span>=<span class="hljs-string">&quot;no1&quot;</span>&gt;</span>請點我，我是編號一<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;block1&quot;</span> <span class="hljs-attr">data-myid</span>=<span class="hljs-string">&quot;no200&quot;</span>&gt;</span>請點我，我是編號二百<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>利用 jQuery 取出 <code>data-myid  </code> 的值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$(<span class="hljs-string">&#x27;#block .block1&#x27;</span>).click(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>  alert($(<span class="hljs-built_in">this</span>).attr(<span class="hljs-string">&quot;data-myid&quot;</span>));      <br>&#125;);<br></code></pre></td></tr></table></figure></li><li><p>kbd</p><p>kbd 標籤表示使用者輸入，它將產生一個行内元素(inline)，舉例來說：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Type the following in the Run dialog: <span class="hljs-tag">&lt;<span class="hljs-name">kbd</span>&gt;</span>cmd<span class="hljs-tag">&lt;/<span class="hljs-name">kbd</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span>Then click the OK button.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Save the document by pressing <span class="hljs-tag">&lt;<span class="hljs-name">kbd</span>&gt;</span>Ctrl<span class="hljs-tag">&lt;/<span class="hljs-name">kbd</span>&gt;</span> + <span class="hljs-tag">&lt;<span class="hljs-name">kbd</span>&gt;</span>S<span class="hljs-tag">&lt;/<span class="hljs-name">kbd</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p>執行結果</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html">Type the following in the Run dialog: cmd<br>Then click the OK button.<br><br>Save the document by pressing Ctrl + S<br></code></pre></td></tr></table></figure></li><li><p>data-key=”number” 中的 number 該為何？</p><p>每個鍵盤都分別有一個對應的 <code>event.key</code> 、<code>event.location</code>、<code>event.which</code>、<code>event.code</code>，以字母Ａ為例子，分別是A、0、65、KeyA</p><p>可以在這個網站中試試看：<a href="http://keycode.info/">http://keycode.info/</a></p></li></ul><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">html</span> &#123;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">10px</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">http://i.imgur.com/b9r5sEL.jpg</span>) bottom center;<br>  <span class="hljs-attribute">background-size</span>: cover;<br>&#125;<br><br><span class="hljs-selector-tag">body</span>,<span class="hljs-selector-tag">html</span> &#123;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">font-family</span>: sans-serif;<br>&#125;<br><br><span class="hljs-selector-class">.keys</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">min-height</span>: <span class="hljs-number">100vh</span>;<br>  <span class="hljs-attribute">align-items</span>: center;<br>  <span class="hljs-attribute">justify-content</span>: center;<br>&#125;<br><br><span class="hljs-selector-class">.key</span> &#123;<br>  <span class="hljs-attribute">border</span>: .<span class="hljs-number">4rem</span> solid black;<br>  <span class="hljs-attribute">border-radius</span>: .<span class="hljs-number">5rem</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">1rem</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">1.5rem</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">1rem</span> .<span class="hljs-number">5rem</span>;<br>  <span class="hljs-attribute">transition</span>: all .<span class="hljs-number">07s</span> ease;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">10rem</span>;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">color</span>: white;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.4</span>);<br>  <span class="hljs-attribute">text-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> .<span class="hljs-number">5rem</span> black;<br>&#125;<br><br><span class="hljs-selector-class">.playing</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scale</span>(<span class="hljs-number">1.1</span>);<br>  <span class="hljs-attribute">border-color</span>: <span class="hljs-number">#ffc600</span>;<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1rem</span> <span class="hljs-number">#ffc600</span>;<br>&#125;<br><br><span class="hljs-selector-tag">kbd</span> &#123;<br>  <span class="hljs-attribute">display</span>: block;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">4rem</span>;<br>&#125;<br><br><span class="hljs-selector-class">.sound</span> &#123;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">1.2rem</span>;<br>  <span class="hljs-attribute">text-transform</span>: uppercase;<br>  <span class="hljs-attribute">letter-spacing</span>: .<span class="hljs-number">1rem</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#ffc600</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="JS-step-by-step"><a href="#JS-step-by-step" class="headerlink" title="JS - step by step"></a>JS - step by step</h2><p>首先，先來驗證一下 html 中我們要抓的 <code>data-key</code> 的值，透過 <code>EventTarget.addEventListener()</code> 印出使用者按下按鍵後的 <code>KeyboardEvent </code></p><p>EventTarget.addEventListener()：<a href="https://ubin.io/SpgtjL">https://ubin.io/SpgtjL</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">  <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&#x27;keydown&#x27;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;</span><br><span class="javascript">    <span class="hljs-built_in">console</span>.log(e)</span><br>  &#125;)<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>透過 <code>querySelector</code> 抓取按下字母，並可以對應出 HTML 中 div 與 audio 的 <code>data-key=&quot;number&quot;</code>，如果沒有這個值，console 會印出 null</p><p>document.querySelector()：<a href="https://ubin.io/ehKgvQ">https://ubin.io/ehKgvQ</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">  <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&#x27;keydown&#x27;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">const</span> audio = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">`audio[data-key=&quot;<span class="hljs-subst">$&#123;e.keyCode&#125;</span>&quot;]`</span>)</span><br><span class="javascript">    <span class="hljs-built_in">console</span>.log(audio)</span><br><span class="javascript">    <span class="hljs-keyword">const</span> key = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">`div[data-key=&quot;<span class="hljs-subst">$&#123;e.keyCode&#125;</span>&quot;]`</span>)</span><br><span class="javascript">    <span class="hljs-built_in">console</span>.log(key)</span><br>  &#125;)<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>如果 audio 存在，只需要 <code>audio.play()</code> 就可以播放音樂了！不過考量讓聲音重複播放的話，就必須將現在的時間設為 0，也就是下方的 <code>audio.currentTime=0</code>，按住字母Ａ來發射機關槍聲音吧w</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">  <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&#x27;keydown&#x27;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">const</span> audio = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">`audio[data-key=&quot;<span class="hljs-subst">$&#123;e.keyCode&#125;</span>&quot;]`</span>)</span><br>    if(audio)&#123; <br>      audio.currentTime = 0<br>      audio.play()<br>    &#125;<br><span class="javascript">    <span class="hljs-keyword">const</span> key = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">`div[data-key=&quot;<span class="hljs-subst">$&#123;e.keyCode&#125;</span>&quot;]`</span>)</span><br>  &#125;)<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>同理，字母方塊在使用者按下按鍵也要給加 class (黃色陰影、放大1.1倍)，<code>key.classList.add(&#39;playing&#39;)</code> 如同 Jquery 的<code>.addClass()</code>，不過有新增就要有移除，現在黃色的特效會一直卡住沒有變回原本的樣子</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">  <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&#x27;keydown&#x27;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">const</span> audio = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">`audio[data-key=&quot;<span class="hljs-subst">$&#123;e.keyCode&#125;</span>&quot;]`</span>)</span><br>    if(audio)&#123;<br>      audio.currentTime = 0<br>      audio.play()<br>    &#125;<br><span class="javascript">    <span class="hljs-keyword">const</span> key = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">`div[data-key=&quot;<span class="hljs-subst">$&#123;e.keyCode&#125;</span>&quot;]`</span>)</span><br>    if(key)&#123;<br><span class="javascript">      key.classList.add(<span class="hljs-string">&#x27;playing&#x27;</span>)</span><br>    &#125;<br>  &#125;)<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>先抓出所以 class 中有 .key 透過 forEach 讓每個 .key 讀出來，並呼叫 <code>removeTransition</code> 方法</p><p>document.querySelectorAll()：<a href="https://ubin.io/cVr2Ua">https://ubin.io/cVr2Ua</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">  <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&#x27;keydown&#x27;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;</span><br><span class="javascript">    <span class="hljs-comment">// 略</span></span><br><span class="javascript">    <span class="hljs-keyword">const</span> keys = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;.key&#x27;</span>)</span><br><span class="javascript">    keys.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key</span>)</span>&#123;</span><br><span class="javascript">      key.addEventListener(<span class="hljs-string">&#x27;transitionend&#x27;</span>, removeTransition)</span><br>    &#125;)<br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">removeTransition</span>(<span class="hljs-params">e</span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-built_in">console</span>.log(e)</span><br>    &#125;<br>  &#125;)<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>console 中每按一下按鍵就會觸發六個屬性：<code>border-left-color</code>、<code>border-right-color</code>、<code>border-top-color</code>、<code>transfrom</code>、<code>box-shadow</code>、<code>border-bottom-color</code>，除了<code>transform</code> 是動畫之外，其他是黃色陰影的部分。因此如果 <code>propertyName === &#39;transform&#39;</code> 的話，我們要移除 <code>playing</code> 這個 class</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">  <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&#x27;keydown&#x27;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;</span><br><span class="javascript">    <span class="hljs-comment">// 略</span></span><br><span class="javascript">    <span class="hljs-keyword">const</span> keys = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;.key&#x27;</span>)</span><br><span class="javascript">    keys.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key</span>)</span>&#123;</span><br><span class="javascript">      key.addEventListener(<span class="hljs-string">&#x27;transitionend&#x27;</span>, removeTransition)</span><br>    &#125;)<br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">removeTransition</span>(<span class="hljs-params">e</span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">if</span>(e.propertyName === <span class="hljs-string">&#x27;transform&#x27;</span>)&#123;</span><br><span class="javascript">        e.currentTarget.classList.remove(<span class="hljs-string">&#x27;playing&#x27;</span>)</span><br>      &#125;<br>    &#125;<br>  &#125;)<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>就大功告成啦！來創作一首曲子吧w</p><h2 id="JS-Final"><a href="#JS-Final" class="headerlink" title="JS - Final"></a>JS - Final</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">  <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&#x27;keydown&#x27;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)</span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">const</span> audio = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">`audio[data-key=&quot;<span class="hljs-subst">$&#123;e.keyCode&#125;</span>&quot;]`</span>)</span><br>    if(audio)&#123;<br>      audio.currentTime = 0<br>      audio.play()<br>    &#125;<br><span class="javascript">    <span class="hljs-keyword">const</span> key = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">`div[data-key=&quot;<span class="hljs-subst">$&#123;e.keyCode&#125;</span>&quot;]`</span>)</span><br>    if(key)&#123;<br><span class="javascript">      key.classList.add(<span class="hljs-string">&#x27;playing&#x27;</span>)</span><br>    &#125;<br><span class="javascript">    <span class="hljs-keyword">const</span> keys = <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">&#x27;.key&#x27;</span>)</span><br><span class="javascript">    keys.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">key</span>)</span>&#123;</span><br><span class="javascript">      key.addEventListener(<span class="hljs-string">&#x27;transitionend&#x27;</span>, removeTransition)</span><br>    &#125;)<br><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">removeTransition</span>(<span class="hljs-params">e</span>)</span>&#123;</span><br><span class="javascript">      <span class="hljs-keyword">if</span>(e.propertyName === <span class="hljs-string">&#x27;transform&#x27;</span>)&#123;</span><br><span class="javascript">        e.currentTarget.classList.remove(<span class="hljs-string">&#x27;playing&#x27;</span>)</span><br>      &#125;<br>    &#125;<br>  &#125;)<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>本次範例程式碼原作者來源：<a href="https://reurl.cc/Rd6bLn">https://reurl.cc/Rd6bLn</a></p>]]></content>
    
    
    <categories>
      
      <category>11th鐵人賽</category>
      
    </categories>
    
    
    <tags>
      
      <tag>11th鐵人賽</tag>
      
      <tag>前端新手村</tag>
      
      <tag>html</tag>
      
      <tag>css</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
